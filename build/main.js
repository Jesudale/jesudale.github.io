webpackJsonp([0],{

/***/ 116:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HelloPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ruta_ruta__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__detailss_detailss__ = __webpack_require__(359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_global_global__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_native_audio__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_pdfmake_build_pdfmake__ = __webpack_require__(602);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_pdfmake_build_pdfmake___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_pdfmake_build_pdfmake__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_pdfmake_build_vfs_fonts__ = __webpack_require__(603);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_pdfmake_build_vfs_fonts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_pdfmake_build_vfs_fonts__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};














__WEBPACK_IMPORTED_MODULE_10_pdfmake_build_pdfmake___default.a.vfs = __WEBPACK_IMPORTED_MODULE_11_pdfmake_build_vfs_fonts___default.a.pdfMake.vfs;
/**
 * Generated class for the HelloPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
//@IonicPage()
var HelloPage = /** @class */ (function () {
    function HelloPage(navCtrl, navParams, gasolineraService, loadingService, toastCtrl, alertController, socialSharing, formBuilder, global, platform, nativeAudio) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.gasolineraService = gasolineraService;
        this.loadingService = loadingService;
        this.toastCtrl = toastCtrl;
        this.alertController = alertController;
        this.socialSharing = socialSharing;
        this.formBuilder = formBuilder;
        this.global = global;
        this.platform = platform;
        this.nativeAudio = nativeAudio;
        this.admin = false;
        this.carr = false;
        this.pedido = {
            "id": " ",
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " "
        };
        //para recibir datos con un pop(), en este caso el tipo de icono desde la pagina taxis
        this.dataFromOtherPage = null;
        this.callback = function (data) {
            _this.dataFromOtherPage = data;
            if (_this.dataFromOtherPage.ok) {
                _this.cambiacolor = true;
                var pedido = _this.dataFromOtherPage.pedido;
                // this.total=+(this.subtotal+this.envio).toFixed(2)
                // this.ruta=this.dataFromOtherPage.ruta
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage);
        };
        this.myCallbackFunction = function (_params) {
            return new Promise(function (resolve, reject) {
                _this.dataFromOtherPage = _params;
                //resolve();
                console.log('data received from other page', _this.dataFromOtherPage);
            });
        };
        //para recibir datos con un pop(), en este caso el tipo de icono desde la pagina taxis
        this.dataFromOtherPage2 = null;
        this.callback2 = function (data) {
            _this.dataFromOtherPage2 = data;
            if (_this.dataFromOtherPage2.ok) {
                _this.detalles2 = true;
                // this.envio=this.dataFromOtherPage.envio
                // this.total=+(this.subtotal+this.envio).toFixed(2)
                // this.ruta=this.dataFromOtherPage2.ruta
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage2);
        };
        this.detalles2 = false;
        this.detalles3 = false;
        this.enviarvende = false;
        this.pedidocan = false;
        this.myForm = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].maxLength(8), __WEBPACK_IMPORTED_MODULE_6__angular_forms__["f" /* Validators */].required])],
        });
        this.pedidotax = false;
        this.pedido2 = {
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " "
        };
        this.palabra = 'xasdv';
        this.notificationAlreadyReceived = true;
        this.pedido3 = {
            "id": " ",
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " ",
            "origename": "",
            "destinoname": "",
        };
        this.letterObj = {
            to: '',
            from: '',
            text: ''
        };
        this.pdfObj = null;
        this.carro = this.navParams.get('carro'); // objeto con los datos del negocio
        this.admin = this.navParams.get('bol'); // booleano si es gestor o admin este usuario
        this.idtm = this.navParams.get('idtm'); // Idt de este usuario
        this.idtmid = this.navParams.get('idtmid'); // idt de este usuario (gestor o admin)
        // This is used to unload the track. It's useful if you're experimenting with track locations
        // The Native Audio plugin can only be called once the platform is ready
        this.platform.ready().then(function () {
            console.log("platform ready");
            // This is used to unload the track. It's useful if you're experimenting with track locations
            /*  this.nativeAudio.unload('trackID').then(function() {
                 console.log("unloaded audio!");
             }, function(err) {
                 console.log("couldn't unload audio... " + err);
             });
       
             // 'trackID' can be anything
             this.nativeAudio.preloadComplex('trackID', 'assets/audio/pedidoRecibido.mp3', 1, 1, 0).then(function() {
                 console.log("audio loaded!");
             }, function(err) {
                 console.log("audio failed: " + err);
             }); */
        });
    }
    HelloPage.prototype.ionViewDidLoad = function () {
        console.log(this.admin);
        this.siteName = '';
        //this.shareImageNi=this.global.foto2+'7WUGI64hXRnJaXlo03FYqojWJJ5RW9RH99ErQ5IW.png'
        this.shareImageNi = 'assets/imgs/icono512.png';
        if (this.admin) {
        }
        else {
            // this.verMensajes()
        }
        // this.startTimer3() 
        // this.verMensajes2()
        this.getDate();
    };
    HelloPage.prototype.verpedido4 = function (carro) {
        //console.log(this.carrito);
        //console.log(carro.prd);  envio   
        this.pedido2 = JSON.parse(carro.dat);
        return this.pedido2.envio;
    };
    HelloPage.prototype.verMensajes3 = function () {
        var _this = this;
        this.notificationAlreadyReceived = false;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getMensajesNego4(this.carro.idt).subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.apr && !carro.cam) {
                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                    _this.aceptados++;
                    if (!carro.can) {
                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                    }
                }
                /*   if(carro.apr){
                     if(carro.mensaje.substr(-3)=='CUP'){
                       this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                  
                     }
                     if(carro.mensaje.substr(-3)=='USD'){
                       this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                     }
                     if(carro.mensaje.substr(-3)=='EUR'){
                       this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                     }
                   } */
                if (carro.mensaje) {
                    if (!carro.cam) {
                        _this.cantUsuarios++;
                    }
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.verMensajes2 = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getMensajesNego2(this.carro.id).subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.apr) {
                    if (bol) {
                        bol = false;
                        //this.cantUsuarios++
                        // this.playText()  
                        // this.playAudio()               
                    }
                }
                /*           if(carro.mensaje.substr(-3)=='CUP'){
                              this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                         
                            }
                            if(carro.mensaje.substr(-3)=='USD'){
                              this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                            }
                            if(carro.mensaje.substr(-3)=='EUR'){
                              this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                            }
                             */
                if (carro.apr && !carro.cam) {
                    //this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                    _this.aceptados++;
                    if (!carro.can) {
                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                    }
                }
                if (carro.mensaje) {
                    if (!carro.cam) {
                        _this.cantUsuarios++;
                    }
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        this.notificationAlreadyReceived = true;
    };
    //para buscar palabra clave en negocios
    HelloPage.prototype.verMensajesPass = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_1 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.presentToast4('Contraseña correcta');
                                            _this.notificationAlreadyReceived = false;
                                            _this.carr = false;
                                            _this.detalles2 = false;
                                            _this.detalles3 = false;
                                            _this.total = 0;
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getMensajesNegoPass(_this.carro.idt).subscribe(function (response) {
                                                _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                console.log(response);
                                                _this.cantUsuarios = 0;
                                                _this.aceptados = 0;
                                                _this.porciento = 0;
                                                _this.porcientousd = 0;
                                                _this.porcientoeur = 0;
                                                _this.total = 0;
                                                //this.buscaper2=false      
                                                for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                                    var carro = _a[_i];
                                                    if (carro.apr && !carro.cam) {
                                                        // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                        _this.aceptados++;
                                                        if (!carro.can) {
                                                            // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                            _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                                            if (!carro.can) {
                                                                _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                                                _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                                            }
                                                        }
                                                    }
                                                    /* if(carro.apr){
                                                      if(carro.mensaje.substr(-3)=='CUP'){
                                                        this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                   
                                                      }
                                                      if(carro.mensaje.substr(-3)=='USD'){
                                          
                                                      }
                                                      if(carro.mensaje.substr(-3)=='EUR'){
                                          
                                                      }
                                                    }
                                     */
                                                    if (carro.mensaje) {
                                                        if (!carro.cam) {
                                                            _this.cantUsuarios++;
                                                        }
                                                    }
                                                }
                                                //     this.total=+(this.porciento*10).toFixed(2)
                                                _this.loadingService.dismissLoading();
                                            }, function (error) {
                                                _this.loadingService.presentError();
                                                _this.loadingService.dismissLoading();
                                            });
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_1.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.carr = false;
                        this.detalles2 = false;
                        this.detalles3 = false;
                        this.loadingService.presentLoading();
                        this.gasolineraService.getMensajesNegoPass(this.carro.idt).subscribe(function (response) {
                            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                            console.log(response);
                            _this.cantUsuarios = 0;
                            _this.aceptados = 0;
                            _this.porciento = 0;
                            _this.porcientousd = 0;
                            _this.porcientoeur = 0;
                            _this.total = 0;
                            //this.buscaper2=false      
                            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                var carro = _a[_i];
                                if (carro.apr && !carro.cam) {
                                    //  this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                    _this.aceptados++;
                                    if (!carro.can) {
                                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                    }
                                }
                                /*      if(carro.apr){
                                          if(carro.mensaje.substr(-3)=='CUP'){
                                            this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                       
                                          }
                                          if(carro.mensaje.substr(-3)=='USD'){
                                            this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                          }
                                          if(carro.mensaje.substr(-3)=='EUR'){
                                            this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                          }
                                        } */
                                if (carro.mensaje) {
                                    if (!carro.cam) {
                                        _this.cantUsuarios++;
                                    }
                                }
                            }
                            // this.total=+(this.porciento*10).toFixed(2)
                            _this.loadingService.dismissLoading();
                        }, function (error) {
                            _this.loadingService.presentError();
                            _this.loadingService.dismissLoading();
                        });
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    //para buscar palabra clave en negocios
    HelloPage.prototype.verMensajesPassTax = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_2 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.presentToast4('Contraseña correcta');
                                            _this.notificationAlreadyReceived = false;
                                            _this.carr = false;
                                            _this.detalles2 = false;
                                            _this.detalles3 = false;
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getMensajesNegoPassTax(_this.carro.id).subscribe(function (response) {
                                                _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                console.log(response);
                                                _this.cantUsuarios = 0;
                                                _this.aceptados = 0;
                                                _this.porciento = 0;
                                                _this.porcientousd = 0;
                                                _this.porcientoeur = 0;
                                                _this.total = 0;
                                                //this.buscaper2=false      
                                                for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                                    var carro = _a[_i];
                                                    if (carro.apr && !carro.cam) {
                                                        // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                        _this.aceptados++;
                                                        if (!carro.can) {
                                                            _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                                            _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                                        }
                                                    }
                                                    /*  if(carro.apr){
                                                       if(carro.mensaje.substr(-3)=='CUP'){
                                                         this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                    
                                                       }
                                                       if(carro.mensaje.substr(-3)=='USD'){
                                           
                                                       }
                                                       if(carro.mensaje.substr(-3)=='EUR'){
                                           
                                                       }
                                                     } */
                                                    if (carro.mensaje) {
                                                        if (!carro.cam) {
                                                            _this.cantUsuarios++;
                                                        }
                                                    }
                                                }
                                                //  this.total=+(this.porciento*10).toFixed(2)
                                                _this.loadingService.dismissLoading();
                                            }, function (error) {
                                                _this.loadingService.presentError();
                                                _this.loadingService.dismissLoading();
                                            });
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_2.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.carr = false;
                        this.detalles2 = false;
                        this.detalles3 = false;
                        this.loadingService.presentLoading();
                        this.gasolineraService.getMensajesNegoPassTax(this.carro.id).subscribe(function (response) {
                            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                            console.log(response);
                            _this.cantUsuarios = 0;
                            _this.aceptados = 0;
                            _this.porciento = 0;
                            _this.porcientousd = 0;
                            _this.porcientoeur = 0;
                            _this.total = 0;
                            //this.buscaper2=false      
                            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                var carro = _a[_i];
                                if (carro.apr && !carro.cam) {
                                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                    _this.aceptados++;
                                    if (!carro.can) {
                                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                    }
                                }
                                /*  if(carro.apr){
                                        if(carro.mensaje.substr(-3)=='CUP'){
                                          this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                     
                                        }
                                        if(carro.mensaje.substr(-3)=='USD'){
                                          this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                        }
                                        if(carro.mensaje.substr(-3)=='EUR'){
                                          this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                        }
                                      } */
                                if (carro.mensaje) {
                                    if (!carro.cam) {
                                        _this.cantUsuarios++;
                                    }
                                }
                            }
                            // this.total=+(this.porciento*10).toFixed(2)
                            _this.loadingService.dismissLoading();
                        }, function (error) {
                            _this.loadingService.presentError();
                            _this.loadingService.dismissLoading();
                        });
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    //para buscar palabra clave en negocios
    HelloPage.prototype.verMensajes = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_3 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.notificationAlreadyReceived = false;
                                            _this.presentToast4('Contraseña correcta');
                                            _this.carr = false;
                                            _this.detalles2 = false;
                                            _this.detalles3 = false;
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getMensajesNego(_this.carro.idt).subscribe(function (response) {
                                                _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                console.log(response);
                                                _this.cantUsuarios = 0;
                                                _this.aceptados = 0;
                                                _this.porciento = 0;
                                                _this.porcientousd = 0;
                                                _this.porcientoeur = 0;
                                                _this.total = 0;
                                                //this.buscaper2=false      
                                                for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                                    var carro = _a[_i];
                                                    if (carro.apr && !carro.cam) {
                                                        // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                        _this.aceptados++;
                                                        if (!carro.can) {
                                                            _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                                            _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                                        }
                                                    }
                                                    /*  if(carro.apr){
                                                                    if(carro.mensaje.substr(-3)=='CUP'){
                                                                      this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                                 
                                                                    }
                                                                    if(carro.mensaje.substr(-3)=='USD'){
                                                        
                                                                    }
                                                                    if(carro.mensaje.substr(-3)=='EUR'){
                                                        
                                                                    }
                                                                  }
                                                                   */
                                                    if (carro.mensaje) {
                                                        if (!carro.cam) {
                                                            _this.cantUsuarios++;
                                                        }
                                                    }
                                                }
                                                //  this.total=+(this.porciento*10).toFixed(2)
                                                _this.loadingService.dismissLoading();
                                            }, function (error) {
                                                _this.loadingService.presentError();
                                                _this.loadingService.dismissLoading();
                                            });
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_3.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        //this.presentToast4('Contraseña correcta' );
                        this.carr = false;
                        this.detalles2 = false;
                        this.detalles3 = false;
                        this.loadingService.presentLoading();
                        this.gasolineraService.getMensajesNego(this.carro.idt).subscribe(function (response) {
                            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                            console.log(response);
                            _this.cantUsuarios = 0;
                            _this.aceptados = 0;
                            _this.porciento = 0;
                            _this.porcientousd = 0;
                            _this.porcientoeur = 0;
                            _this.total = 0;
                            //this.buscaper2=false      
                            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                var carro = _a[_i];
                                if (carro.apr && !carro.cam) {
                                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                    _this.aceptados++;
                                    if (!carro.can) {
                                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                    }
                                }
                                /*  if(carro.apr){
                                          if(carro.mensaje.substr(-3)=='CUP'){
                                            this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                       
                                          }
                                          if(carro.mensaje.substr(-3)=='USD'){
                                            this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                          }
                                          if(carro.mensaje.substr(-3)=='EUR'){
                                            this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                          }
                                        } */
                                if (carro.mensaje) {
                                    if (!carro.cam) {
                                        _this.cantUsuarios++;
                                    }
                                }
                            }
                            // this.total=+(this.porciento*10).toFixed(2)
                            _this.loadingService.dismissLoading();
                        }, function (error) {
                            _this.loadingService.presentError();
                            _this.loadingService.dismissLoading();
                        });
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    HelloPage.prototype.verMensajesPendientes = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getMensajesNegoTaxPend(this.carro.id).subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.apr && !carro.cam) {
                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                    _this.aceptados++;
                    if (!carro.can) {
                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                    }
                }
                /*  if(carro.apr){
                   if(carro.mensaje.substr(-3)=='CUP'){
                     this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                
                   }
                   if(carro.mensaje.substr(-3)=='USD'){
                     this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                   }
                   if(carro.mensaje.substr(-3)=='EUR'){
                     this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                   }
                 } */
                if (carro.mensaje) {
                    if (!carro.cam) {
                        _this.cantUsuarios++;
                    }
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    //para buscar palabra clave en negocios
    HelloPage.prototype.verMensajesTax = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_4 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.notificationAlreadyReceived = false;
                                            _this.presentToast4('Contraseña correcta');
                                            _this.carr = false;
                                            _this.detalles2 = false;
                                            _this.detalles3 = false;
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getMensajesNegoTax(_this.carro.id).subscribe(function (response) {
                                                _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                console.log(response);
                                                _this.cantUsuarios = 0;
                                                _this.aceptados = 0;
                                                _this.porciento = 0;
                                                _this.porcientousd = 0;
                                                _this.porcientoeur = 0;
                                                _this.total = 0;
                                                //this.buscaper2=false      
                                                for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                                    var carro = _a[_i];
                                                    if (carro.apr && !carro.cam) {
                                                        // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                        _this.aceptados++;
                                                        if (!carro.can) {
                                                            _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                                            _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                                        }
                                                    }
                                                    /*  if(carro.apr){
                                                       if(carro.mensaje.substr(-3)=='CUP'){
                                                         this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                    
                                                       }
                                                       if(carro.mensaje.substr(-3)=='USD'){
                                                         this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                       }
                                                       if(carro.mensaje.substr(-3)=='EUR'){
                                                         this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                                       }
                                                     } */
                                                    if (carro.mensaje) {
                                                        if (!carro.cam) {
                                                            _this.cantUsuarios++;
                                                        }
                                                    }
                                                }
                                                //  this.total=+(this.porciento*10).toFixed(2)
                                                _this.loadingService.dismissLoading();
                                            }, function (error) {
                                                _this.loadingService.presentError();
                                                _this.loadingService.dismissLoading();
                                            });
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_4.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.carr = false;
                        this.detalles2 = false;
                        this.detalles3 = false;
                        this.loadingService.presentLoading();
                        this.gasolineraService.getMensajesNegoTax(this.carro.id).subscribe(function (response) {
                            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                            console.log(response);
                            _this.cantUsuarios = 0;
                            _this.aceptados = 0;
                            _this.porciento = 0;
                            _this.porcientousd = 0;
                            _this.porcientoeur = 0;
                            _this.total = 0;
                            //this.buscaper2=false      
                            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                var carro = _a[_i];
                                if (carro.apr && !carro.cam) {
                                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                    _this.aceptados++;
                                    if (!carro.can) {
                                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                                    }
                                }
                                /*  if(carro.apr){
                                  if(carro.mensaje.substr(-3)=='CUP'){
                                    this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                               
                                  }
                                  if(carro.mensaje.substr(-3)=='USD'){
                                    this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                  }
                                  if(carro.mensaje.substr(-3)=='EUR'){
                                    this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                  }
                                } */
                                if (carro.mensaje) {
                                    if (!carro.cam) {
                                        _this.cantUsuarios++;
                                    }
                                }
                            }
                            // this.total=+(this.porciento*10).toFixed(2)
                            _this.loadingService.dismissLoading();
                        }, function (error) {
                            _this.loadingService.presentError();
                            _this.loadingService.dismissLoading();
                        });
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    HelloPage.prototype.verMensajesCancel = function () {
        var _this = this;
        this.notificationAlreadyReceived = false;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getMensajesCancel(this.carro.id).subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.apr && !carro.cam) {
                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                    _this.aceptados++;
                    if (!carro.can) {
                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                    }
                }
                /*  if(carro.apr){
                        if(carro.mensaje.substr(-3)=='CUP'){
                          this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                     
                        }
                        if(carro.mensaje.substr(-3)=='USD'){
                          this.porcientousd=+(this.porcientousd+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                        }
                        if(carro.mensaje.substr(-3)=='EUR'){
                          this.porcientoeur=+(this.porcientoeur+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                        }
                      } */
                if (carro.mensaje) {
                    if (!carro.cam) {
                        _this.cantUsuarios++;
                    }
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.verMensajesPrueb = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        this.gasolineraService.getMensajesprueb().subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.mensaje) {
                    if (!carro.cam) {
                        _this.cantUsuarios++;
                    }
                }
                if (carro.apr && !carro.cam) {
                    _this.aceptados++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.verpedido = function (carro) {
        var idtm = this.idtm; // idt de este usuario
        var idtmid = this.idtmid; // id de este usuario
        var admin = this.admin;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__detailss_detailss__["a" /* DetailssPage */], { carro: carro, idtm: idtm, idtmid: idtmid, admin: admin, callback: this.myCallbackFunction });
        /* , callback: this.callback
            if(carro.tax){
              this.pedidotax=true
            }else{
              this.pedidotax=false
            }
        
            this.habSv=carro.hab
            this.prueba=carro.pru
            this.pedidocan=carro.can
            this.enviarvende=carro.apr
            this.detalles3=carro.apr
            this.detalles=true
            this.carr=true
        
            this.carrito = []
            this.carrito = JSON.parse(carro.prd);
           //console.log(this.carrito);
            //console.log(carro.prd);
            this.subtotal=0
            for (let casita of this.carrito) {
              this.subtotal=+(this.subtotal+casita.subtotal)
        
             }
             this.subtotal=+(this.subtotal).toFixed(2)
             this.pedido = JSON.parse(carro.dat);
             this.id=carro.id
         */
    };
    HelloPage.prototype.verpedido3 = function () {
        this.detalles2 = true;
        this.pedido;
        console.log(this.pedido);
        //abrir pagina de mapa para mostrar solamente la ruta, no retornar algo ni calcular nuevo
    };
    HelloPage.prototype.trackByIdx = function (index, product) {
        return index;
    };
    HelloPage.prototype.verpedido2 = function (carro) {
        this.detalles = false;
        this.carr = true;
        this.pedido = JSON.parse(carro.dat);
        console.log(this.pedido);
        //console.log(carro.prd);
    };
    HelloPage.prototype.borrar = function (carro) {
        var i = {
            "id": carro.id,
        };
        var result = this.gasolineraService.deleteMensaje(i);
    };
    HelloPage.prototype.revisar = function () {
        var _this = this;
        //revisar conexion a internet
        this.gasolineraService.revisar()
            .then(function (result) {
            console.log(result);
            if (result == 200) {
                _this.presentToast4('Pedido realizado');
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    HelloPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 6000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    HelloPage.prototype.what2 = function (carro) {
        var _this = this;
        var i = { "id": carro.id,
        };
        this.gasolineraService.createPedido(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido aceptado');
                //confirmacion para pedido de Prueba
                /*    let message = "Su pedido ha sido aceptado ";
                  this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                    console.log("success : " + res);
                  }).catch(error => {
                    console.log("failed : " + error);
                  })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HelloPage.prototype.what3 = function (carro) {
        var _this = this;
        var i = { "id": carro.id,
        };
        this.gasolineraService.createPedido(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido aceptado');
                //confirmacion para pedido Real
                /*    let message = "Su pedido ha sido aceptado ";
                  this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                    console.log("success : " + res);
                  }).catch(error => {
                    console.log("failed : " + error);
                  })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HelloPage.prototype.what4 = function (carro) {
        var _this = this;
        var i = { "id": carro.id,
        };
        this.gasolineraService.createPedido(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido aceptado');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    //confirmacion despues de ver el mapa
    HelloPage.prototype.what5 = function (carro) {
        var _this = this;
        var i = { "id": carro.id,
        };
        this.gasolineraService.createPedidoGestor(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido liquidado ');
                carro.esp = true;
                // this.detalles3=true
                // enviar pedido al mensajero, con la ruta en forma de enlace
                /*    let message = "Su pedido ha sido aceptado ";
                this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                  console.log("success : " + res);
                }).catch(error => {
                  console.log("failed : " + error);
                })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HelloPage.prototype.pedidoVisto = function (carro) {
        var _this = this;
        var i = { "id": carro.id,
        };
        this.gasolineraService.createPedidoVisto(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido visto ');
                carro.hab = true;
                // this.detalles3=true
                // enviar pedido al mensajero, con la ruta en forma de enlace
                /*    let message = "Su pedido ha sido aceptado ";
                this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                console.log("success : " + res);
                }).catch(error => {
                console.log("failed : " + error);
                })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HelloPage.prototype.tomadatos4 = function (carro) {
        var carrito = JSON.parse(carro.dat);
        return carrito.motivo;
    };
    HelloPage.prototype.tomadatos3 = function (carro) {
        var pasajeros;
        var equipaje;
        var animales;
        var dia;
        var hora;
        var vehiculo;
        var carrito = JSON.parse(carro.prd);
        for (var _i = 0, carrito_1 = carrito; _i < carrito_1.length; _i++) {
            var casita = carrito_1[_i];
            pasajeros = casita.pasajeros;
            equipaje = casita.equipaje;
            animales = casita.animales;
            dia = casita.dia;
            hora = casita.hora;
            vehiculo = casita.vehiculo;
        }
        return vehiculo;
    };
    HelloPage.prototype.tomadatos2 = function (carro) {
        this.pedido3 = JSON.parse(carro.dat);
        return this.pedido3.telpedido;
    };
    HelloPage.prototype.tomadatos = function (carro) {
        this.pedido3 = JSON.parse(carro.dat);
        return this.pedido3.nom;
    };
    HelloPage.prototype.what6 = function (carro) {
        // enviar pedido al mensajero, con la ruta en forma de enlace
        //this.presentToast4('Nombre:'+ this.pedido.nom+ ' Dirección:'+this.pedido.dir  + ' Tel entrega:' +this.pedido.telpedido+ ' Tel cliente:' +this.pedido.tel+ ' Ruta:' + this.ruta);  
        // let message = 'Nombre:'+ this.pedido.nom+ ' Dirección:'+this.pedido.dir  + ' Tel entrega:' +this.pedido.telpedido+ ' Tel cliente:' +this.pedido.tel+ ' Ruta:' + this.ruta;
        console.log("objeto " + carro.id);
        var pasajeros;
        var equipaje;
        var animales;
        var dia;
        var hora;
        var vehiculo;
        var carrito = [];
        var pedido = {
            "id": " ",
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " ",
            "origename": "",
            "destinoname": "",
        };
        carrito = JSON.parse(carro.prd);
        for (var _i = 0, carrito_2 = carrito; _i < carrito_2.length; _i++) {
            var casita = carrito_2[_i];
            pasajeros = casita.pasajeros;
            equipaje = casita.equipaje;
            animales = casita.animales;
            dia = casita.dia;
            hora = casita.hora;
            vehiculo = casita.vehiculo;
        }
        pedido = JSON.parse(carro.dat);
        // console.log("pedido "+pedido.curPosLng);
        var equip;
        var masco;
        if (equipaje) {
            equip = "Sí";
        }
        else {
            equip = "No";
        }
        if (animales) {
            masco = "Sí";
        }
        else {
            masco = "No";
        }
        var ruta = "https://www.google.com/maps?saddr=" + pedido.curPosLat + "," + pedido.curPosLng + "&daddr=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        var origenGoo = " https://maps.google.com/?q=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        var origenMapsme = "https://dlink.maps.me/map?ll=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        // let origenOsmand="https://www.openstreetmap.org/#map=18/"+pedido.negoPosLat+"/"+pedido.negoPosLng
        var destinoGoo = " https://maps.google.com/?q=" + pedido.curPosLat + "," + pedido.curPosLng;
        var destinoMapsme = "https://dlink.maps.me/map?ll=" + pedido.curPosLat + "," + pedido.curPosLng;
        // let destinoOsmand="https://www.openstreetmap.org/#map=18/"+pedido.curPosLat+"/"+pedido.curPosLng
        var message = " Pedido: " + carro.id + '\n' + " Ruta: " + ruta + '\n' +
            '\n' + " Lugar de origen: " + pedido.origename + '\n' + " Origen Google: " + origenGoo + '\n' +
            '\n' + " Lugar de destino: " + pedido.destinoname + '\n' + " Destino Google: " + destinoGoo + '\n' +
            '\n' + " Pasajeros: " + pasajeros + '\n' + " Hora: " + hora + '\n' + " Día: " + dia + '\n' + " Equipaje: " + equip + '\n' + " Mascotas: " + masco + '\n' + " Tipo auto: " + vehiculo + '\n' + " Costo: " + carro.mensaje + '\n' + " Comisión: " + carro.mensajeprincipal + '\n';
        console.log("message success : " + message);
        //this.shareImageNi this.siteName
        this.socialSharing.shareViaWhatsApp(message, '', '').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
        /*
        "prd",
        [{"pasajeros":"4","equipaje":true,"animales":true,"otros":"vacío","dia":"26 1","hora":"06:42"}]
    
        "dat",
        {"id":27,
        "ven":"Taxi dueño Ta Buena",
        "nom":"ver gestor",
        "telpedido":"1234567",
        "envio":363,
        "total":"363 CUP",
        "porc":36.3,
        "curPosLat":23.1210416607113,
        "curPosLng":-82.37589597702028,
        "negoPosLat":23.113581950347523,
        "negoPosLng":-82.36658334732057,
        "telneg":"5295166993",
        "moneda":"cupflag"}
        
        */
        //let pedido=JSON.parse(this.carro.prd)
        // let datos=JSON.parse(this.carro.dat)
        // console.log("json pedido "+pedido);
        // console.log("json datos "+datos); 
    };
    HelloPage.prototype.what7 = function (carro) {
        // enviar pedido al mensajero, con la ruta en forma de enlace
        //this.presentToast4('Nombre:'+ this.pedido.nom+ ' Dirección:'+this.pedido.dir  + ' Tel entrega:' +this.pedido.telpedido+ ' Tel cliente:' +this.pedido.tel+ ' Ruta:' + this.ruta);  
        // let message = 'Nombre:'+ this.pedido.nom+ ' Dirección:'+this.pedido.dir  + ' Tel entrega:' +this.pedido.telpedido+ ' Tel cliente:' +this.pedido.tel+ ' Ruta:' + this.ruta;
        console.log("objeto " + carro.id);
        var pasajeros;
        var equipaje;
        var animales;
        var dia;
        var hora;
        var vehiculo;
        var carrito = [];
        var pedido = {
            "id": " ",
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " ",
            "origename": "",
            "destinoname": "",
        };
        carrito = JSON.parse(carro.prd);
        for (var _i = 0, carrito_3 = carrito; _i < carrito_3.length; _i++) {
            var casita = carrito_3[_i];
            pasajeros = casita.pasajeros;
            equipaje = casita.equipaje;
            animales = casita.animales;
            dia = casita.dia;
            hora = casita.hora;
            vehiculo = casita.vehiculo;
        }
        pedido = JSON.parse(carro.dat);
        // console.log("pedido "+pedido.curPosLng);
        var equip;
        var masco;
        if (equipaje) {
            equip = "Sí";
        }
        else {
            equip = "No";
        }
        if (animales) {
            masco = "Sí";
        }
        else {
            masco = "No";
        }
        var ruta = "https://www.google.com/maps?saddr=" + pedido.curPosLat + "," + pedido.curPosLng + "&daddr=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        var origenGoo = " https://maps.google.com/?q=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        var origenMapsme = "https://dlink.maps.me/map?ll=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        // let origenOsmand="https://www.openstreetmap.org/#map=18/"+pedido.negoPosLat+"/"+pedido.negoPosLng
        var destinoGoo = " https://maps.google.com/?q=" + pedido.curPosLat + "," + pedido.curPosLng;
        var destinoMapsme = "https://dlink.maps.me/map?ll=" + pedido.curPosLat + "," + pedido.curPosLng;
        // let destinoOsmand="https://www.openstreetmap.org/#map=18/"+pedido.curPosLat+"/"+pedido.curPosLng
        var message = " Pedido: " + carro.id + '\n' + " Ruta: " + ruta + '\n' +
            '\n' + " Lugar de origen: " + pedido.origename + '\n' + " Origen Google: " + origenGoo + '\n' +
            '\n' + " Lugar de destino: " + pedido.destinoname + '\n' + " Destino Google: " + destinoGoo + '\n' +
            '\n' + " Pasajeros: " + pasajeros + '\n' + " Hora: " + hora + '\n' + " Día: " + dia + '\n' + " Equipaje: " + equip + '\n' + " Mascotas: " + masco + '\n' + " Tipo auto: " + vehiculo + '\n' + " Costo: " + carro.mensaje + '\n' + " Comisión: " + carro.mensajeprincipal + '\n' +
            '\n' + " Nombre: " + pedido.nom + '\n' + " Teléfono: " + pedido.telpedido;
        console.log("message success : " + message);
        //this.shareImageNi this.siteName
        this.socialSharing.shareViaWhatsApp(message, '', '').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    HelloPage.prototype.what8 = function (carro) {
        console.log("objeto " + carro.id);
        var pedido = {
            "id": " ",
            "ven": " ",
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " ",
            "origename": "",
            "destinoname": "",
        };
        pedido = JSON.parse(carro.dat);
        var origenGoo = " https://maps.google.com/?q=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        var destinoGoo = " https://maps.google.com/?q=" + pedido.curPosLat + "," + pedido.curPosLng;
        var message = " Somos " + pedido.ven + ", hemos recibido el pedido: " + carro.id + '\n' +
            '\n' + " A nombre de: " + pedido.nom + '\n' + " Teléfono: " + pedido.telpedido +
            '\n' + " Lugar de origen: " + pedido.origename + '\n' + " Origen Google: " + origenGoo + '\n' +
            '\n' + " Lugar de destino: " + pedido.destinoname + '\n' + " Destino Google: " + destinoGoo + '\n';
        //this.shareImageNi this.siteName
        /*      this.socialSharing.shareViaWhatsApp(message,'' ,'' ).then(res => {
            console.log("success : " + res);
          }).catch(error => {
            console.log("failed : " + error);
          })
           */
        this.socialSharing.shareViaWhatsAppToReceiver(pedido.telpedido, message, ' ').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    HelloPage.prototype.cancel = function () {
        var _this = this;
        var i = { "id": this.id,
        };
        this.gasolineraService.cancelPedidoNeg(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.pedidocan = true;
                _this.presentToast4('Pedido cancelado');
                //this.detalles3=true
                // confirmacion del pedido inicial
                /*    let message = "Su pedido ha sido aceptado ";
                  this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                    console.log("success : " + res);
                  }).catch(error => {
                    console.log("failed : " + error);
                  })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HelloPage.prototype.openDialogo2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'Usted realmente desea Cancelar el pedido ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    // 
                                    handler: function (blah) {
                                        _this.cancel();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HelloPage.prototype.openDialogo3 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'Usted va a marcar el pedido como pagado al gestor ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    // 
                                    handler: function (blah) {
                                        _this.what5(carro);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HelloPage.prototype.openDialogo4 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'El cliente será puesto en la Lista Negra ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    // 
                                    handler: function (blah) {
                                        //lista negra
                                        _this.listanegra();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //confirmacion despues de ver el mapa
    HelloPage.prototype.listanegra = function () {
        var _this = this;
        console.log(this.pedido.id);
        var i = { "id": this.pedido.id,
            "pos": "usuario en lista negra",
            "lsn": true,
        };
        this.gasolineraService.listaNeg(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Usuario puesto en lista negra');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HelloPage.prototype.calculadora = function () {
        var carro = {
            "curPos": this.pedido,
        };
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__ruta_ruta__["a" /* RutaPage */], { carro: carro, callback: this.callback2 }); //
    };
    HelloPage.prototype.wait10sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 30000); });
    };
    HelloPage.prototype.startTimer3 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < 500)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.wait10sec()];
                    case 2:
                        _a.sent();
                        console.log("star timer" + i);
                        // this.playText2()
                        // this.singlenotification() 
                        //
                        if (this.notificationAlreadyReceived) {
                            this.verMensajes2();
                        }
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    HelloPage.prototype.playAudio = function () {
        console.log("playing audio");
        this.nativeAudio.play('trackID').then(function () {
            console.log("playing audio!");
        }, function (err) {
            console.log("error playing audio: " + err);
        });
    };
    HelloPage.prototype.updateValues = function (values) {
        if (values) {
            this.day = values.day;
            this.month = values.month;
            this.myDate1 = this.day + " " + this.month;
        }
    };
    HelloPage.prototype.pendientes = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataPen(this.dia1mesactual, this.dia2mesactual).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                // this.aceptados++
                _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
                /*  if(!carro.apr){
                    
                   if(bol){
                     bol=false
                    
                   //this.cantUsuarios++
                   // this.playText()
                  // this.playAudio()
                   }
                 }
           
                    if(carro.apr&&!carro.cam){
                     //this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                     this.aceptados++
                     if (!carro.can){
                       this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                       this.total=+(this.total+ parseFloat(carro.mensaje)).toFixed(2)
           
                     }
                   }
                 if(carro.mensaje){
                   if(!carro.cam){
                     this.cantUsuarios++
                   }
                 }
           
                  */
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.hoy = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataHoy(this.today).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                if (carro.est == 2) {
                    _this.aceptados++;
                    _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                    _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
                }
                /*  if(!carro.apr){
                    
                   if(bol){
                     bol=false
                    
                   //this.cantUsuarios++
                   // this.playText()
                  // this.playAudio()
                   }
                 }
           
                    if(carro.apr&&!carro.cam){
                     //this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                     this.aceptados++
                     if (!carro.can){
                       this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                       this.total=+(this.total+ parseFloat(carro.mensaje)).toFixed(2)
           
                     }
                   }
                 if(carro.mensaje){
                   if(!carro.cam){
                     this.cantUsuarios++
                   }
                 }
           
                  */
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.mesactual = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataMesAc(this.dia1mesactual, this.dia2mesactual).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                _this.aceptados++;
                _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.mespasado = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataMesPas(this.dia1mespasado, this.dia2mespasado).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                _this.aceptados++;
                _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.cancela = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataCan(this.dia1mesactual, this.dia2mesactual).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                // this.aceptados++
                _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.cancelante = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataCanPass(this.dia1mespasado, this.dia2mespasado).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                // this.aceptados++
                _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.provmesant = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataMesPasProv(this.dia1mespasado, this.dia2mespasado).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                if (carro.est == "3") {
                    _this.aceptados++;
                    _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                    _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.provmesact = function () {
        var _this = this;
        this.carr = false;
        this.detalles2 = false;
        this.detalles3 = false;
        var bol = true;
        console.log("el id en hello: " + this.carro.id);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataMesAcProv(this.dia1mesactual, this.dia2mesactual).then(function (result) {
            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users3));
            _this.cantUsuarios = 0;
            _this.aceptados = 0;
            _this.porciento = 0;
            _this.porcientousd = 0;
            _this.porcientoeur = 0;
            _this.total = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                if (carro.est == "3") {
                    _this.aceptados++;
                    _this.porciento = +(_this.porciento + parseFloat(carro.porc)).toFixed(2);
                    _this.total = +(_this.total + parseFloat(carro.total)).toFixed(2);
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
            _this.notificationAlreadyReceived = true;
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HelloPage.prototype.getDate = function () {
        var date = new Date();
        this.today = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);
        console.log(this.today);
        var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        console.log(('0' + firstDay.getDate()).slice(-2));
        console.log(('0' + lastDay.getDate()).slice(-2));
        this.dia1mesactual = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + firstDay.getDate()).slice(-2);
        this.dia2mesactual = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + lastDay.getDate()).slice(-2);
        console.log(this.dia1mesactual);
        console.log(this.dia2mesactual);
        var x = new Date();
        x.setDate(0); // 0 will result in the last day of the previous month (setting the date to last months last day)
        console.log(x);
        this.dia2mespasado = x.getFullYear() + '-' + ('0' + (x.getMonth() + 1)).slice(-2) + '-' + ('0' + x.getDate()).slice(-2);
        console.log(this.dia2mespasado);
        x.setDate(1); //  gets you the first day of that month 
        console.log(x);
        this.dia1mespasado = x.getFullYear() + '-' + ('0' + (x.getMonth() + 1)).slice(-2) + '-' + ('0' + x.getDate()).slice(-2);
        console.log(this.dia1mespasado);
    };
    HelloPage.prototype.createPdf = function (carro) {
        var estado;
        if (carro.est == 1) {
            estado = "No atendido";
        }
        if (carro.est == 2) {
            estado = "Aceptado";
        }
        if (carro.est == 4) {
            estado = "Cancelado";
        }
        if (carro.est == 3) {
            estado = "Visto por la agencia";
        }
        var docDefinition = {
            content: [
                { text: 'Pedido: ' + carro.id, style: 'header' },
                { text: 'Fecha: ' + carro.created_at, alignment: 'right' },
                { text: 'Estado', style: 'subheader' },
                { text: estado },
                { text: 'Total: ' + carro.total + ',  % de la agencia: ' + carro.porc, style: 'subheader' },
                // { text: '% de la agencia: '+carro.porc, style: 'subheader' },
                // this.letterObj.to,
                {
                    ul: [
                        'Origen: ' + carro.dat.origename,
                        'Destino: ' + carro.dat.destinoname,
                        'Cliente: ' + carro.dat.nom,
                        'Teléfono: ' + carro.dat.telpedido,
                        'Chofer: ' + carro.dat.nomch
                    ]
                },
            ],
            styles: {
                header: {
                    fontSize: 18,
                    bold: true,
                },
                subheader: {
                    fontSize: 14,
                    bold: true,
                    margin: [0, 15, 0, 0]
                },
                story: {
                    italic: true,
                    alignment: 'center',
                    width: '50%',
                }
            }
        };
        this.pdfObj = __WEBPACK_IMPORTED_MODULE_10_pdfmake_build_pdfmake___default.a.createPdf(docDefinition);
        this.pdfObj.download();
    };
    HelloPage.prototype.downloadPdf = function () {
        this.pdfObj.download();
        /*
        if (this.plt.is('cordova')) {
          this.pdfObj.getBuffer((buffer) => {
            var blob = new Blob([buffer], { type: 'application/pdf' });
     
            // Save the PDF to the data Directory of our App
            this.file.writeFile(this.file.dataDirectory, 'myletter.pdf', blob, { replace: true }).then(fileEntry => {
              // Open the PDf with the correct OS tools
              this.fileOpener.open(this.file.dataDirectory + 'myletter.pdf', 'application/pdf');
            })
          });
        } else {
          // On a browser simply use download!
          this.pdfObj.download();
        } */
    };
    HelloPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-hello',template:/*ion-inline-start:"E:\14\gaso\src\pages\hello\hello.html"*/'<!--\n\n  Generated template for the HelloPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n  class="masters"\n\n-->\n\n\n\n<ion-header>\n\n\n\n  <ion-navbar color="primary">\n\n    \n\n<!--     <ion-row  align-items-center  > \n\n        \n\n      <ion-label><ion-icon name="calendar"> </ion-icon> Dia específico</ion-label>\n\n        <ion-datetime displayFormat="DD MMMM"  pickerFormat="DD MMMM"  (ionChange)="updateValues($event)"></ion-datetime>\n\n        \n\n        <button  ion-button    icon-only   (click)="verMensajes2()" >\n\n        <ion-icon name="search"> </ion-icon> \n\n      </button> \n\n  \n\n    </ion-row> \n\n       -->\n\n       <ion-row  align-items-center  > \n\n        <ion-col size="4">            \n\n          <ion-buttons  > \n\n            <button  ion-button block   icon-only color="light"  (click)="pendientes()" >\n\n              <!--  verMensajesPendientes -->\n\n              <ion-icon name="clipboard"> </ion-icon> Pendientes\n\n            </button>  \n\n          </ion-buttons>         \n\n      </ion-col> \n\n      \n\n      <ion-col size="4">            \n\n        <ion-buttons  > \n\n          <button  ion-button block   icon-only color="light"  (click)="hoy()" >\n\n            <ion-icon name="clipboard"> </ion-icon> Hoy\n\n          </button>  \n\n        </ion-buttons>         \n\n      </ion-col>\n\n      \n\n      <!--verMensajes2   <ion-col size="4">                    \n\n        <ion-buttons > \n\n          <button  ion-button block   icon-only color="verde"  (click)="verMensajes3()" >\n\n            <ion-icon name="clipboard"> </ion-icon>  De Prueba     \n\n          </button>  \n\n        </ion-buttons>          \n\n      </ion-col>  \n\n      -->\n\n      </ion-row>\n\n                       \n\n   \n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n\n\n<ion-content  > \n\n\n\n\n\n  <!-- parte del usuario *ngIf="!admin" verMensajesCancel() -->\n\n  <ion-row *ngIf="this.admin"  align-items-center  > \n\n    <ion-col size="4">            \n\n      <ion-buttons  > \n\n        <button  ion-button   block  icon-only color="primary"  (click)="provmesant()" >\n\n          <!-- cancelante -->\n\n          <ion-icon name="clipboard" color="light"> Agencia ant</ion-icon> \n\n        </button>  \n\n      </ion-buttons>         \n\n  </ion-col>  \n\n  <ion-col size="4">            \n\n    <ion-buttons  > \n\n      <button  ion-button block    icon-only color="energy"  (click)="provmesact()" >\n\n        <!-- verMensajesCancel -->\n\n        <ion-icon name="clipboard" color="light"> Agencia act</ion-icon> \n\n      </button>  \n\n    </ion-buttons>         \n\n</ion-col> \n\n</ion-row>\n\n  \n\n  <ion-row *ngIf="this.admin"  align-items-center  > \n\n    <ion-col size="4">            \n\n      <ion-buttons  > \n\n        <button  ion-button block   icon-only color="primary"  (click)="cancelante()" >\n\n          <!-- cancelante -->\n\n          <ion-icon name="clipboard" color="light"> Cancel ant</ion-icon> \n\n        </button>  \n\n      </ion-buttons>         \n\n  </ion-col> \n\n  <ion-col size="4">            \n\n    <ion-buttons  > \n\n      <button  ion-button block   icon-only color="energy"  (click)="cancela()" >\n\n        <!-- verMensajesCancel -->\n\n        <ion-icon name="clipboard" color="light"> Cancel act</ion-icon> \n\n      </button>  \n\n    </ion-buttons>         \n\n</ion-col> \n\n</ion-row>\n\n\n\n<ion-row *ngIf="this.admin" align-items-center  > \n\n  <ion-col size="4">            \n\n      <ion-buttons  > \n\n        <button  ion-button block   icon-only color="primary"  (click)="mespasado()" > \n\n          <!-- verMensajesPassTax -->\n\n          <ion-icon name="car" color="light"> Mes anterior</ion-icon>   \n\n        </button>  \n\n      </ion-buttons>         \n\n  </ion-col> \n\n  <ion-col size="4">            \n\n    <ion-buttons  > \n\n      <button  ion-button block   icon-only color="energy"  (click)="mesactual()" >\n\n        <!-- verMensajesTax -->\n\n        <ion-icon name="car" color="light"> Mes actual</ion-icon>   \n\n      </button>  \n\n    </ion-buttons>         \n\n</ion-col> \n\n</ion-row>    \n\n\n\n<!-- \n\n<ion-item>\n\n  <ion-label stacked>From</ion-label>\n\n  <ion-input [(ngModel)]="letterObj.from"></ion-input>\n\n</ion-item>\n\n<ion-item>\n\n  <ion-label stacked>To</ion-label>\n\n  <ion-input [(ngModel)]="letterObj.to"></ion-input>\n\n</ion-item>\n\n<ion-item>\n\n  <ion-label stacked>Text</ion-label>\n\n  <ion-textarea [(ngModel)]="letterObj.text" rows="10"></ion-textarea>\n\n</ion-item>\n\n\n\n<button ion-button full (click)="createPdf()">Create PDF</button>\n\n<button ion-button full (click)="downloadPdf()" color="secondary" [disabled]="!pdfObj">Download PDF</button>\n\n\n\n -->\n\n<div style="text-align:center;padding: 0px">  \n\n    <h2  > <b >Cantidad de Pedidos:</b> {{cantUsuarios}} <b > Aceptados: </b>  {{aceptados}} <br> <b > Total =</b> {{total}} CUP  / <b > % Bruto =</b> {{porciento}} CUP</h2> \n\n    <h2 >  </h2>   \n\n</div>\n\n\n\n\n\n <ion-content > \n\n  <!-- class="masters" parte de los mensajes a los adminstradores -->\n\n\n\n\n\n  <div>       \n\n     \n\n    <div *ngIf="!carr">  \n\n      \n\n     \n\n      <div *ngFor="let carro of users3" > \n\n         <ion-card  >         \n\n          \n\n           <ion-card-content > \n\n\n\n                      <div   style="text-align:center">                         \n\n                        \n\n                          <h2 ><b> \n\n                            <ion-icon name="clipboard"> \n\n\n\n                            </ion-icon> Pedido: </b> {{carro.id}} \n\n\n\n                            <div  *ngIf="carro.est==2" style="text-align:center">                                              \n\n                              <h2 ><ion-icon name="color-wand"  color="energy"> Aceptado </ion-icon><b> </b> </h2>  \n\n                            </div>\n\n                            <div  *ngIf="carro.est==1" style="text-align:center">                                              \n\n                              <h2 ><ion-icon name="eye-off"  color="danger"> No atendido </ion-icon><b> </b> </h2>  \n\n                            </div>\n\n                            <div  *ngIf="carro.est==4" style="text-align:center">                                              \n\n                              <h2 ><ion-icon name="close-circle"  color="danger"> Cancelado </ion-icon><b> </b> </h2>  \n\n                              <h2 ><ion-icon name="close-circle"  color="danger"> Motivo: {{carro.dat.motivo}} </ion-icon><b> </b> </h2>  \n\n                            </div>\n\n                            <div  *ngIf="carro.est==3" style="text-align:center">                                              \n\n                              <h2 ><ion-icon name="eye"  color="azu"> Visto por la agencia </ion-icon><b> </b> </h2>  \n\n                            </div>\n\n\n\n                          </h2>   \n\n                          \n\n                          <h2 ><b><ion-icon name="logo-usd"> </ion-icon> Total:</b> {{carro.total}}</h2>\n\n                          <h2><b>  % =</b>  {{carro.porc}}</h2>  \n\n \n\n                          <h2> <b><ion-icon name="calendar"> </ion-icon> Fecha: </b>{{carro.created_at}}</h2>   \n\n                         \n\n                          <h2 ><ion-icon name="done-all"  color="energy"> </ion-icon><b> Origen: {{carro.dat.origename}}</b> </h2>                            \n\n                          <h2 ><ion-icon name="locate"  color="energy"> </ion-icon><b> Destino: {{carro.dat.destinoname}}</b> </h2>  \n\n                          \n\n                          <h2 ><ion-icon name="person"  color="energy"> </ion-icon><b> Cliente: {{carro.dat.nom}}</b> </h2> \n\n                          \n\n                          <div *ngIf="carro.dat.nomch">\n\n                          <h2 ><ion-icon name="person"  color="energy"> </ion-icon><b> Chofer: {{carro.dat.nomch}}</b> </h2> \n\n                          </div>\n\n                          <h2 ><ion-icon name="call"  color="energy"> </ion-icon><b> Teléfono: {{carro.dat.telpedido}}</b> </h2>  \n\n                          \n\n\n\n                      </div>\n\n\n\n                      <button ion-button full (click)="createPdf(carro)">Create PDF</button>\n\n<!--                       <button ion-button full (click)="downloadPdf()" color="secondary" [disabled]="!pdfObj">Download PDF</button>\n\n -->\n\n                          <br>\n\n\n\n<!-- \n\n                      <ion-row align-items-center  >                         \n\n                        \n\n                        <ion-col size="4" *ngIf="!carro.can">\n\n                          <ion-fab middle end >  \n\n                            <ion-icon  *ngIf="!carro.apr" color="energy" name="close-circle"> En espera</ion-icon>  \n\n                            <ion-icon  *ngIf="carro.apr" color="verde" name="checkmark-circle"> Aceptado</ion-icon> \n\n                            <ion-icon  *ngIf="!carro.esp" color="danger" name="close-circle"> Gestor  </ion-icon>\n\n                            <ion-icon  *ngIf="carro.esp" color="verde" name="checkmark-circle">  Gestor  </ion-icon>  \n\n                            <ion-icon  *ngIf="!carro.cam" color="danger" name="close-circle"> Súper Admin  </ion-icon>\n\n                            <ion-icon  *ngIf="carro.cam" color="verde" name="checkmark-circle"> Súper Admin  </ion-icon> \n\n                       \n\n                          </ion-fab>\n\n                        </ion-col> \n\n\n\n                        <ion-col size="4" *ngIf="carro.can">\n\n                          <ion-fab middle end >  \n\n                            <ion-icon   color="danger" name="checkmark-circle">Cancelado</ion-icon>\n\n                          </ion-fab>\n\n                        </ion-col> \n\n\n\n                   </ion-row>                 \n\n\n\n -->\n\n          </ion-card-content>\n\n     \n\n    \n\n        </ion-card> \n\n              \n\n          \n\n      </div> \n\n\n\n   \n\n    </div>\n\n\n\n\n\n  </div> \n\n\n\n\n\n\n\n\n\n\n\n </ion-content > \n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\hello\hello.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_8__providers_global_global__["a" /* GlobalProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_native_audio__["a" /* NativeAudio */]])
    ], HelloPage);
    return HelloPage;
}());

//# sourceMappingURL=hello.js.map

/***/ }),

/***/ 179:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InicioPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__taxis_taxis__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_in_app_browser__ = __webpack_require__(203);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_global_global__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_network__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__detailssss_detailssss__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_storage__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_loading_service_loading_service__ = __webpack_require__(21);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};


//import { UniqueDeviceID } from '@ionic-native/unique-device-id';
//import {BackgroundGeolocation, BackgroundGeolocationConfig,BackgroundGeolocationResponse,BackgroundGeolocationEvents} from "@ionic-native/background-geolocation";
//import { HTTP } from "@ionic-native/http";













/**
 * Generated class for the WelcomePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InicioPage = /** @class */ (function () {
    function InicioPage(navCtrl, navParams, 
        // private uniqueDeviceID: UniqueDeviceID,
        // private http: HTTP,
        // private backgroundGeolocation: BackgroundGeolocation,
        toastCtrl, //mensaje cada vez que el location trabaja
        gasolineraService, alertController, iab, global, platform, network, device, cd, storage, loadingService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.gasolineraService = gasolineraService;
        this.alertController = alertController;
        this.iab = iab;
        this.global = global;
        this.platform = platform;
        this.network = network;
        this.device = device;
        this.cd = cd;
        this.storage = storage;
        this.loadingService = loadingService;
        this.conex = false;
        this.conex2 = false;
        this.nored = true;
        this.vistanored = '';
        this.cargando = false;
        this.existetel = false;
        this.descarga = '';
        this.user = [{
                "ini": "",
                "id": "",
                "nam": "",
                "tel": "",
                "mail": "",
                "tar": "",
                "apr": true,
                "created_at": "",
                "cor": "",
                "idt": "",
                "eda": "",
                "tax": false,
                "tip": "",
                "tas": "",
                "cha": "",
                "mod": "",
                "dem": "",
                "fot": "",
                "lsn": false,
                "pri": "",
                "lat": "",
                "lng": "",
                "btn": false,
                "div": false,
                "blo": false,
                "idtc": ""
            }];
        this.bloquedo = false;
        // this.local = new Storage();
    }
    InicioPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad InicioPage');
        // set a key/value
        // this.storage.set('name', 'Max');
    };
    InicioPage.prototype.ionViewDidEnter = function () {
        var _this = this;
        this.platform.registerBackButtonAction(function () {
            //your code
            // this.presentToast4("no va a salir")
        }, 100);
        this.platform.ready().then(function () {
            console.log("platform ready");
            //  this.tomarID();   
            // this.id="9dd748"//"af500f"// "  
            //  this.storage.set('idt', '9dd748654');
            // quitado para prueba
            //  this.revisar3()
            _this.getClaxon();
            _this.global.global4 = true;
            var connectSubscription = _this.network.onConnect().subscribe(function () {
                console.log('network connected!');
                //   this.presentToast4("red Conectada")
                _this.nored = false;
                _this.vistanored = '';
                if (!_this.existetel) {
                    if (!_this.cargando) {
                        // this.revisar2()
                    }
                }
                if (_this.network.type === 'wifi') {
                    console.log('we got a wifi connection, woohoo!');
                }
                _this.cd.detectChanges();
            });
            var disconnectSubscription = _this.network.onDisconnect().subscribe(function () {
                console.log('network dis connected!');
                _this.nored = true;
                _this.vistanored = 'nored';
                // this.loadMap();
                _this.presentToast4("red desconectada");
                _this.cd.detectChanges();
            });
        });
    };
    InicioPage.prototype.setNotes = function (notes) {
        this.storage.set('userNotes', notes);
    };
    InicioPage.prototype.revisar3 = function () {
        var _this = this;
        // Or to get a key/value pair
        this.storage.get('idt').then(function (val) {
            console.log('Your idt is', val);
            _this.id = val;
            //
            if (_this.id == null) {
                var datos = _this.user;
                var existe = false;
                var tipuser = "cliente";
                var id = _this.id;
                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__detailssss_detailssss__["a" /* DetailssssPage */], { datos: datos, existe: existe, tipuser: tipuser, id: id });
            }
            else {
                _this.revisar2();
            }
        });
        /*   return new Promise((resolve, reject)=> {
           this.storage.get('name')
             .then((answer)=> {
               resolve(answer);
             })
             .catch((err) => {
               reject(err);
               });
           });
        */
    };
    InicioPage.prototype.revisar = function () {
        var _this = this;
        //revisar conexion a internet
        // this.loadingService.presentLoading();
        this.ver = 1;
        // this.presentToast4('Todo resultó bien. Oprima el botón de refrescar para actualizar los datos o cierre y habra la App');  
        this.gasolineraService.revisar4().then(function (result) {
            console.log('revisar conex ' + result.hello);
            console.log('revisar ver ' + result.version);
            var fecha = result.hello;
            var version = result.version;
            if (fecha) {
                _this.conex = true;
                if (_this.ver == version) {
                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */]);
                }
                else {
                    /// this.actualizar()
                }
            }
            else {
                _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
                // this.conex=false
            }
            // let latest_date =this.datepipe.transform(hora, 'yyyy-MM-dd'); 
            // this.loadingService.dismissLoading(); 
        }, function (err) {
            // this.conex=false
            // console.log("no red"+err);  
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
        });
        // this.loadingService.dismissLoading(); 
    };
    InicioPage.prototype.revisar2 = function () {
        var _this = this;
        //revisar conexion a internet
        // this.loadingService.presentLoading();
        this.cargando = true;
        this.ver = 1;
        this.gasolineraService.getDataPersona4(this.id).then(function (result) {
            var users2 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            // carro.toString() console.log("resultado: "+result.body)
            // this.presentToast4("status: "+ result.status)
            console.log("users2 data: " + JSON.stringify(users2));
            var a = JSON.stringify(users2);
            if (a == "[]") {
                console.log("esta vacio: ");
                _this.user = [];
                // this.navCtrl.push(TaxisPage, {user, id})
                // this.presentToast4("Debe inscribirse para usar la aplicación")
                var datos = _this.user;
                var existe = false;
                var tipuser = "cliente";
                var id = _this.id;
                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__detailssss_detailssss__["a" /* DetailssssPage */], { datos: datos, existe: existe, tipuser: tipuser, id: id });
            }
            else {
                var alto = 0;
                var ped = null;
                var _loop_1 = function (carro) {
                    if (!carro.apr) {
                        _this.presentToast4("Usuario bloquedo");
                        _this.bloquedo = true;
                    }
                    else {
                        for (var _i = 0, _a = carro.id; _i < _a.length; _i++) {
                            var carr = _a[_i];
                            console.log("id: " + carr.id);
                            if (alto < carr.id) {
                                alto = carr.id;
                                ped = carr;
                            }
                        }
                        var pedidoCurso_1 = false;
                        var lastPedido_1 = null;
                        if (ped != null) {
                            lastPedido_1 = ped;
                            console.log("alto: " + alto);
                            console.log("created_a: " + JSON.stringify(ped.created_at));
                            if (ped.est == "4") {
                                pedidoCurso_1 = false;
                                if (carro.idt == _this.id) {
                                    _this.existetel = true;
                                    // this.presentToast4("existe user...")
                                    _this.descarga = carro.parametros.parametros.descarga;
                                    if (carro.parametros.parametros.version == _this.ver) {
                                        _this.user = carro;
                                        var user = _this.user;
                                        var id = _this.id;
                                        console.log("cancelado: ");
                                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id, pedidoCurso: pedidoCurso_1, lastPedido: lastPedido_1 });
                                    }
                                    else {
                                        _this.actualizar(carro);
                                    }
                                }
                            }
                            else {
                                if (ped.est == "3") {
                                    pedidoCurso_1 = false;
                                    if (carro.idt == _this.id) {
                                        _this.existetel = true;
                                        // this.presentToast4("existe user...")
                                        _this.descarga = carro.parametros.parametros.descarga;
                                        if (carro.parametros.parametros.version == _this.ver) {
                                            _this.user = carro;
                                            var user = _this.user;
                                            var id = _this.id;
                                            console.log("visto x agencia: ");
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id, pedidoCurso: pedidoCurso_1, lastPedido: lastPedido_1 });
                                        }
                                    }
                                }
                                else {
                                    /*    let timestamp2 = new Date(ped.created_at);
                                       
                                       timestamp2.setHours(timestamp2.getHours()  );
                                      let today6 = timestamp2.getFullYear() + '-' + ('0' + (timestamp2.getMonth() + 1)).slice(-2)  + '-' + ('0' + (timestamp2.getDate()+ 1)).slice(-2);
                                      console.log('Date en el pedido: '+today6); //to see the object
                                      
                                                 
                                      let timestamp3 = new Date(ped.created_at);
                                       
                                      timestamp2.setHours(timestamp2.getHours() );
                                     let today7 = timestamp3.getFullYear() + '-' + ('0' + (timestamp3.getMonth() + 1)).slice(-2)  + '-' + ('0' + (timestamp3.getDate())).slice(-2);
                                     console.log('Date en el pedido: '+today7); //to see the object
                                     */
                                    var timestamp = new Date();
                                    var today2 = timestamp.getFullYear() + '-' + ('0' + (timestamp.getMonth() + 1)).slice(-2) + '-' + ('0' + timestamp.getDate()).slice(-2);
                                    console.log('Date en el móvil: ' + today2); //to see the object
                                    // calculo menos un dia
                                    // let timestamp4 = new Date(); 
                                    // let today8 = timestamp4.getFullYear() + '-' + ('0' + (timestamp4.getMonth() + 1)).slice(-2) + '-' + ('0' + timestamp4.getDate()).slice(-2); 
                                    console.log('Date en el pedido: ' + ped.created_at); //to see the object
                                    if (today2 == ped.created_at) {
                                        console.log('Mismo día '); //to see the object
                                        if (ped.est == "1") {
                                            var timestamHoy = new Date();
                                            timestamHoy.setHours(timestamHoy.getHours() + 5);
                                            var today = timestamHoy.getHours() + ':' + timestamHoy.getMinutes(); // + '-'  + timestamp2.getDate()).slice(-2); 
                                            console.log('Hora en el móvil +5h : ' + JSON.stringify(today)); //to see the object
                                            console.log("hora en el pedido: " + JSON.stringify(ped.hora.substring(0, 5)));
                                            var horaactual = timestamHoy.getHours();
                                            console.log('horaactual +5h: ' + horaactual);
                                            var transfmin = horaactual * 60;
                                            var minactual = timestamp.getMinutes(); //today.substring(today.indexOf(':') + 1)
                                            console.log('minactual: ' + minactual);
                                            // minutos actuales
                                            var sumaactual = +(+transfmin + (+minactual));
                                            var horapedido = +(ped.hora.substring(0, 2));
                                            var transfmin2 = horapedido * 60;
                                            var minpedido = ped.hora.substring(ped.hora.indexOf(':') + 1);
                                            console.log('minpedido: ' + minpedido.substring(0, 2));
                                            // minutos del pedido
                                            var sumapedido = +(+transfmin2 + (+minpedido.substring(0, 2)));
                                            console.log('transfmin: ' + transfmin + ' minactual: ' + minactual);
                                            console.log('sumaactual: ' + sumaactual);
                                            console.log('sumapedido: ' + sumapedido);
                                            var mindif = sumaactual - sumapedido;
                                            console.log('resultado: ' + mindif);
                                            if (mindif > 2) {
                                                pedidoCurso_1 = false;
                                                console.log(' est=1 resultado mayor 2 min: ');
                                                pedidoCurso_1 = false;
                                                if (carro.idt == _this.id) {
                                                    _this.existetel = true;
                                                    // this.presentToast4("existe user...")
                                                    _this.descarga = carro.parametros.parametros.descarga;
                                                    if (carro.parametros.parametros.version == _this.ver) {
                                                        _this.user = carro;
                                                        var user = _this.user;
                                                        var id = _this.id;
                                                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id, pedidoCurso: pedidoCurso_1, lastPedido: lastPedido_1 });
                                                    }
                                                    else {
                                                        _this.actualizar(carro);
                                                    }
                                                }
                                            }
                                            else {
                                                // console.log('resultado menor: ');
                                                console.log(' est=1 resultado menor 2 min: ' + mindif);
                                                if (mindif > 0) {
                                                    pedidoCurso_1 = true;
                                                }
                                                else {
                                                    pedidoCurso_1 = false;
                                                }
                                                if (mindif == 0) {
                                                    pedidoCurso_1 = true;
                                                }
                                                if (mindif == -59) {
                                                    pedidoCurso_1 = true;
                                                }
                                                if (mindif == -58) {
                                                    pedidoCurso_1 = true;
                                                }
                                                if (carro.idt == _this.id) {
                                                    _this.existetel = true;
                                                    // this.presentToast4("existe user...")
                                                    _this.descarga = carro.parametros.parametros.descarga;
                                                    if (carro.parametros.parametros.version == _this.ver) {
                                                        _this.user = carro;
                                                        var user = _this.user; // todos los pedidos
                                                        var id = _this.id; // el idt
                                                        console.log(' resultado menor 60 min: ' + id);
                                                        console.log(' resultado menor 60 min 2: ' + _this.id);
                                                        console.log(' lastPedido: ' + JSON.stringify(lastPedido_1));
                                                        console.log('user: ' + JSON.stringify(_this.user));
                                                        console.log('pedidoCurso: ' + pedidoCurso_1);
                                                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id, pedidoCurso: pedidoCurso_1, lastPedido: lastPedido_1 });
                                                    }
                                                    else {
                                                        _this.actualizar(carro);
                                                    }
                                                }
                                            }
                                        }
                                        else {
                                            // el pedido esta "est"=2 (hay que buscar ch para definir)
                                            console.log(' el pedido esta est=2 ');
                                            var id_1 = lastPedido_1.id;
                                            console.log(' id: ' + id_1);
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getDataPedido(id_1).then(function (result) {
                                                var users2 = result;
                                                for (var _i = 0, users2_1 = users2; _i < users2_1.length; _i++) {
                                                    var carro_1 = users2_1[_i];
                                                    console.log("pedido numero: " + carro_1.id);
                                                    if (carro_1.est == "4") {
                                                        pedidoCurso_1 = false;
                                                    }
                                                    if (carro_1.est == "3") {
                                                        pedidoCurso_1 = false;
                                                    }
                                                    if (carro_1.est == "2") {
                                                        console.log("viaje : " + carro_1.choferes.viaje);
                                                        console.log("idviaje : " + carro_1.choferes.idviaje);
                                                        if (carro_1.choferes.viaje) {
                                                            if (carro_1.choferes.idviaje == id_1) {
                                                                pedidoCurso_1 = true;
                                                            }
                                                            else {
                                                                pedidoCurso_1 = false;
                                                            }
                                                        }
                                                        else {
                                                            pedidoCurso_1 = false;
                                                        }
                                                    }
                                                }
                                                console.log("pedidoCurso : " + pedidoCurso_1);
                                                _this.loadingService.dismissLoading();
                                                if (carro.idt == _this.id) {
                                                    _this.existetel = true;
                                                    // this.presentToast4("existe user...")
                                                    _this.descarga = carro.parametros.parametros.descarga;
                                                    if (carro.parametros.parametros.version == _this.ver) {
                                                        _this.user = carro;
                                                        var user = _this.user;
                                                        var id_2 = _this.id;
                                                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id_2, pedidoCurso: pedidoCurso_1, lastPedido: lastPedido_1 });
                                                    }
                                                    else {
                                                        _this.actualizar(carro);
                                                    }
                                                }
                                            }, function (err) {
                                                console.log(err);
                                                _this.loadingService.presentError();
                                            });
                                        }
                                    }
                                    else {
                                        console.log('otro día '); //to see the object
                                        pedidoCurso_1 = false;
                                        if (carro.idt == _this.id) {
                                            _this.existetel = true;
                                            // this.presentToast4("existe user...")
                                            _this.descarga = carro.parametros.parametros.descarga;
                                            if (carro.parametros.parametros.version == _this.ver) {
                                                _this.user = carro;
                                                var user = _this.user;
                                                var id = _this.id;
                                                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id, pedidoCurso: pedidoCurso_1, lastPedido: lastPedido_1 });
                                            }
                                            else {
                                                _this.actualizar(carro);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            console.log("pedido es null ");
                            pedidoCurso_1 = false;
                            if (carro.idt == _this.id) {
                                _this.existetel = true;
                                // this.presentToast4("existe user...")
                                _this.descarga = carro.parametros.parametros.descarga;
                                if (carro.parametros.parametros.version == _this.ver) {
                                    _this.user = carro;
                                    var user = _this.user;
                                    var id = _this.id;
                                    console.log("cancelado: ");
                                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id, pedidoCurso: pedidoCurso_1, lastPedido: lastPedido_1 });
                                }
                                else {
                                    _this.actualizar(carro);
                                }
                            }
                        }
                    }
                };
                for (var _i = 0, users2_2 = users2; _i < users2_2.length; _i++) {
                    var carro = users2_2[_i];
                    _loop_1(carro);
                }
            }
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
        });
    };
    // lo nuevo
    InicioPage.prototype.tomarID = function () {
        //this.id= "d9d58a44-08a6-df2b"  
        /*      this.uniqueDeviceID.get()
            .then((uuid: any) => this.id = uuid.substring(0,6))
            .catch((error: any) => console.log(error));  */
        this.id = this.device.uuid.substring(0, 6);
        this.global.globalIdt = this.id;
        console.log("id: " + this.id);
        if (this.id == "000000") {
            this.global.global2 = true;
        }
        else {
            this.global.global2 = false;
            if (!this.existetel) {
                //this.connected=false
                //this.ionViewDidLoad()
                if (!this.cargando) {
                    this.revisar2();
                }
            }
        }
    };
    InicioPage.prototype.detallesp = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */]);
    };
    // borra a un anuncio
    InicioPage.prototype.actualizar = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Nueva versión!</strong>",
                            message: '¿Desea actualizar?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.user = carro;
                                        var user = _this.user;
                                        var id = _this.id;
                                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id });
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        console.log("Si");
                                        _this.abrir();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    InicioPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    InicioPage.prototype.abrir = function () {
        // this.presentToast4('Aqui se va a la página de Facebook');
        //  const browser = this.iab.create('https://www.apklis.cu/application/com.todoviaje.com');
        var url = this.descarga;
        var browser = this.iab.create(url);
        browser.show();
        // browser.close();
        //browser.insertCSS(...);
        /* browser.on('loadstop').subscribe(event => {
           browser.insertCSS({ code: "body{color: red;" });
        }); */
    };
    InicioPage.prototype.setClaxon = function () {
        this.storage.set('userClaxon', true);
    };
    InicioPage.prototype.getClaxon = function () {
        var _this = this;
        this.storage.get('userClaxon').then(function (val) {
            console.log('Your userClaxon is', val);
            var claxon = val;
            //
            if (claxon == null) {
                _this.setClaxon();
            }
            else {
            }
        });
    };
    InicioPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-inicio',template:/*ion-inline-start:"E:\14\gaso\src\pages\inicio\inicio.html"*/'<!--\n\n  Generated template for the WelcomePage page. \n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header class="bar-positive"> \n\n  \n\n</ion-header>\n\n\n\n\n\n<ion-header [style.display]="(vistanored === \'nored\')? \'block\': \'none\'">\n\n  <ion-toolbar color="danger" no-border-top>   \n\n    <div style="text-align:center">    \n\n<!--           <ion-icon color="light" name="swap"> Revise la conexión a Internet </ion-icon> -->\n\n      <ion-title > <ion-icon color="light" name="swap">  </ion-icon> Revise la conexión a Internet</ion-title> \n\n    </div>\n\n  </ion-toolbar>    \n\n</ion-header>\n\n\n\n\n\n<ion-content class="masters" >\n\n\n\n  \n\n <!--  <ion-div    style="width: 100%;height: 100%;">\n\n \n\n    <ion-div style="width: 100%;height: 100%;" >\n\n\n\n      <div   style="width: 100%; height: 100%; ">\n\n\n\n        <ion-img     src="assets/imgs/inicio.png" style="height: 100%; width:100%; padding: 0px;" >  \n\n        </ion-img> \n\n\n\n      </div>\n\n   </ion-div>     \n\n  </ion-div> -->\n\n \n\n<div *ngIf="this.global.global4">\n\n  <ion-fab  middle   center>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>  \n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>  \n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>  \n\n      <button  ion-button    icon-only color="azu"  (click)="revisar3()"  ><ion-icon name="refresh">  </ion-icon> </button> \n\n  \n\n   <!--     <button ion-fab  (click)="detallesp()"><ion-icon color="secondary" name="add"></ion-icon> </button>\n\n     <img *ngIf="!noconex" src="assets/imgs/inicio.png" style="width: 100%; height: 100%; ">  -->\n\n  </ion-fab> \n\n\n\n</div>\n\n\n\n<ion-fab  *ngIf="bloquedo" middle   center>\n\n  <br>\n\n  <br>\n\n  <br>\n\n  <br>\n\n  <br>\n\n  <br>\n\n  <br>\n\n  <br>  \n\n  <br>\n\n  <br>\n\n  <br>\n\n  <br>  \n\n  <br>\n\n  <br>\n\n  <br>\n\n  <br>  \n\n    <ion-icon color="danger" name="hand"> Su usuario ha sido bloquedo  </ion-icon>  \n\n\n\n <!-- <button ion-fab  (click)="detallesp()"><ion-icon color="secondary" name="add"></ion-icon> </button>\n\n   <img *ngIf="!noconex" src="assets/imgs/inicio.png" style="width: 100%; height: 100%; ">  -->\n\n</ion-fab>\n\n\n\n  <!-- <img *ngIf="!noconex" src="assets/imgs/inicio.png" style="width: 100%; height: 100%; ">  -->\n\n\n\n  \n\n      \n\n\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\inicio\inicio.html"*/,
        }),
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */]) === "function" && _b || Object, typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */]) === "function" && _c || Object, typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */]) === "function" && _d || Object, typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */]) === "function" && _e || Object, typeof (_f = typeof __WEBPACK_IMPORTED_MODULE_4__ionic_native_in_app_browser__["a" /* InAppBrowser */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_4__ionic_native_in_app_browser__["a" /* InAppBrowser */]) === "function" && _f || Object, typeof (_g = typeof __WEBPACK_IMPORTED_MODULE_5__providers_global_global__["a" /* GlobalProvider */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_5__providers_global_global__["a" /* GlobalProvider */]) === "function" && _g || Object, typeof (_h = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* Platform */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* Platform */]) === "function" && _h || Object, typeof (_j = typeof __WEBPACK_IMPORTED_MODULE_6__ionic_native_network__["a" /* Network */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_6__ionic_native_network__["a" /* Network */]) === "function" && _j || Object, typeof (_k = typeof __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__["a" /* Device */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__["a" /* Device */]) === "function" && _k || Object, typeof (_l = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* ChangeDetectorRef */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* ChangeDetectorRef */]) === "function" && _l || Object, typeof (_m = typeof __WEBPACK_IMPORTED_MODULE_9__ionic_storage__["b" /* Storage */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_9__ionic_storage__["b" /* Storage */]) === "function" && _m || Object, typeof (_o = typeof __WEBPACK_IMPORTED_MODULE_10__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_10__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */]) === "function" && _o || Object])
    ], InicioPage);
    return InicioPage;
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
}());

//# sourceMappingURL=inicio.js.map

/***/ }),

/***/ 180:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TaxisServiceProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/*
  Generated class for the TaxisServiceProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var TaxisServiceProvider = /** @class */ (function () {
    // baseUrl: string = 'assets/';
    function TaxisServiceProvider(http) {
        this.http = http;
        this.baseUrl = 'https://taxislibrehabana.herokuapp.com/api/';
    }
    TaxisServiceProvider.prototype.cargarTaxis = function (lat, lng, bussy) {
        if (bussy === void 0) { bussy = false; }
        var position = { 'lat': lat, 'lng': lng, 'bussy': bussy };
        // return this.http.get(this.baseUrl + 'taxis/data.json');
        return this.http.post(this.baseUrl + 'taxis/positions', position); //api de los taxis
    };
    TaxisServiceProvider.prototype.realizarLlamada = function (taxistaId) {
        return this.http.post(this.baseUrl + 'users/' + taxistaId + '/update-call-count', {});
    };
    //prueba para los servicentros
    TaxisServiceProvider.prototype.getData = function () {
        // return this.http.get(this.baseUrl + 'taxis/data.json');
        return this.http.get('http://localhost/habanaservicentro/public/api/data');
        //return 
    };
    TaxisServiceProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["B" /* Injectable */])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */]])
    ], TaxisServiceProvider);
    return TaxisServiceProvider;
}());

//# sourceMappingURL=taxis-service.js.map

/***/ }),

/***/ 198:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_leaflet__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







var HomePage = /** @class */ (function () {
    function HomePage(navCtrl, geoLocation, loadingService, alertController, navParams) {
        this.navCtrl = navCtrl;
        this.geoLocation = geoLocation;
        this.loadingService = loadingService;
        this.alertController = alertController;
        this.navParams = navParams;
        this.vista = 'mapa';
        this.markers = [];
        this.posicionactual = {
            //la posicion del cliente
            lat: 0,
            lon: 0,
        };
        //variable para el telefono
        this.telefono = '';
        //para la linea
        this.latlngs = [
            [45.51, -122.68],
            [37.77, -122.43]
        ];
        this.hayLinea = false;
        this.carro = this.navParams.get('carro');
    }
    HomePage.prototype.ionViewDidEnter = function () {
        //this.carro = this.navParams.get('item');
    };
    HomePage.prototype.ionViewDidLoad = function () {
        this.loadMap();
        this.localizar();
        //this.calcular();
        //this.openDialogo();
        this.hayGPS = false;
    };
    //carga el mapa de leaflet
    HomePage.prototype.loadMap = function () {
        if (this.map) {
            L.map('ruta_map').off();
            L.map('ruta_map').remove();
        }
        //Límites del mapa
        /*     let southWest = L.latLng({lat: 22.91736457507185, lng: -82.6171084443657});
            let northEast = L.latLng({lat: 23.240795592592406, lng: -81.91418475778585});
            let bounds = new L.LatLngBounds(southWest, northEast); */
        this.map = L.map('ruta_map', { maxBoundsViscosity: 1.0, attributionControl: false });
        this.map.setView([this.carro.lat, this.carro.lng], 15);
        //  this.map.setView([ 23.113592,-82.366592], 15);
        /*    L.tileLayer.mbTiles('assets/tiles/habana.mbtiles', {
             minZoom: 11,
             maxZoom: 16
           }).addTo(this.map);   */
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(this.map);
        //creacion del marcador verde con la posicion de la variable carro
        //marcador para el destino
        //cracion del icono
        var greenIcon = new L.Icon({
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
            // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        this.marker = L.marker([this.carro.lat, this.carro.lng], { draggable: true, icon: greenIcon });
        this.marker.addTo(this.map);
        //prueba tomar posicion dinamicamente
        //this.map.on('click', (e:any) => { console.log(e.latlng); });
        // this.marker2.on('dragend', function (e) { alert(" hola mundo"); });
    };
    HomePage.prototype.localizar = function () {
        var _this = this;
        if (this.marker2) {
            this.marker2.removeFrom(this.map);
        }
        this.geoLocation.getCurrentPosition().then(function (resp) {
            if (resp.coords.latitude) {
                _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                _this.marker2 = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: true });
                _this.marker2.addTo(_this.map);
                _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
                //tomar la posicion actual
                _this.posicionactual.lon = resp.coords.longitude;
                _this.posicionactual.lat = resp.coords.latitude;
                _this.calcular2();
            }
            else {
                _this.hayGPS = false; //para saber si hay o no gps y enviar o no el sms
            }
            //creacion del marcador verde con la misma posicion que el azul
            //cracion del icono
            /*      var greenIcon = new L.Icon({
                   iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
                  // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                  iconSize: [25, 41],
                   iconAnchor: [12, 41],
                   popupAnchor: [1, -34],
                   shadowSize: [41, 41]
                 }); */
            // this.marker2 = L.marker([resp.coords.latitude, resp.coords.longitude ],{draggable: true, icon: greenIcon}).addTo(this.map);
        }).catch(function (error) {
            _this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            // this.hayGPS=false; //para saber si hay o no gps y enviar o no el sms
        });
    };
    //Dialogo para el inicio de la pagina
    HomePage.prototype.openDialogo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert_1, alert_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.hayGPS) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.alertController.create({
                                //subTitle: "<strong>Pasos:</strong>",
                                message: '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                                buttons: [
                                    {
                                        text: 'Aceptar',
                                        role: 'cancel',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert_1 = _a.sent();
                        return [4 /*yield*/, alert_1.present()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS,'
                                + ' actívelo o busque un lugar con mejor señal. Cuando se muestre el marcador con su posición oprima el botón verde de la calculadora para conocer la distancia punto a punto. ¡También se pueden arrastrar los marcadores para calcular la distancia entre dos puntos que siempre ha querido conocer! ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 4:
                        alert_2 = _a.sent();
                        return [4 /*yield*/, alert_2.present()];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    HomePage.prototype.openDialogo2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS,'
                                + ' actívelo o busque un lugar con mejor señal. Cuando se muestre el marcador con su posición oprima el botón verde de la calculadora para conocer la distancia punto a punto. ¡También se pueden arrastrar los marcadores para calcular la distancia entre dos puntos que siempre ha querido conocer! ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HomePage.prototype.calcular = function () {
        // this.hayGPS=true
        if (this.hayGPS) {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea); 
                this.map.removeLayer(this.polyline);
            }
            //marcador de prueba 
            // this.marker2 = L.marker([23.113592,-82.366592 ],{draggable: true}).addTo(this.map);
            //prueba tomar posicion dinamicamente
            //this.marker2.on('dragend', function (e) { alert(this.marker2.getLatLng());});
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
            // zoom the map to the polyline
            this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = true;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = (this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = this.mDistanseKm * 1;
            this.openDialogo();
        }
        else {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea);
                this.map.removeLayer(this.polyline);
            }
            //marcador para si no hay GPS, puesto encima del otro 
            this.marker2 = L.marker([this.carro.lat, this.carro.lng], { draggable: true }).addTo(this.map);
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            // this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1}).addTo(this.map);
            // zoom the map to the polyline
            // this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = false;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = (this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = this.mDistanseKm * 1;
            this.openDialogo2();
        }
    };
    HomePage.prototype.calcular2 = function () {
        if (this.carro.tax) {
            //poner icono de negocio en el lugar
            var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/home1.ico',
                iconSize: [40, 40],
            });
        }
        else {
            //poner icono de mensajero en el lugar
            //taxi motico o persona person
            var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/person.ico',
                iconSize: [30, 30],
            });
        }
        var marker3 = L.marker([this.carro.lat, this.carro.lng], { draggable: false, icon: flagMarker, riseOnHover: true });
        this.markers.push(marker3);
        /*  marker.on('dblclick', () => {
           this.abrirDetallesCarro(carro)
         }); */
        marker3.bindPopup(this.carro.nam).openPopup();
        marker3.addTo(this.map);
        // this.hayGPS=true
        if (this.hayGPS) {
            if (this.hayLinea) {
                this.map.removeLayer(this.polyline);
            }
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = (this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = this.mDistanseKm * 1;
            if (this.resultado > 0) {
                //trazar la linea entre los marcadores
                this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
                // zoom the map to the polyline
                this.map.fitBounds(this.polyline.getBounds());
                // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
                this.hayLinea = true;
            }
            else {
                this.hayLinea = false;
            }
        }
        else {
        }
        this.openDialogo();
    };
    HomePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-home',template:/*ion-inline-start:"E:\14\gaso\src\pages\home\home.html"*/'<ion-header class="bar-positive">\n\n  <ion-navbar color="primary" style="padding: 0px;">\n\n    <ion-title><ion-icon name="calculator"> Calculadora de la ruta </ion-icon></ion-title>\n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content padding>\n\n  <br>\n\n  <div>      \n\n    <h6><b>Distancia Punto a Punto </b></h6>\n\n    <p *ngIf="hayGPS">{{mDistanseKm}} <b> Km </b></p> \n\n    <p *ngIf="!hayGPS"> desconocida, active el GPS</p> \n\n</div>\n\n\n\n  \n\n  <div [ngSwitch]="vista" style="height: 100%;">\n\n    \n\n    <div style="height: 100%;" [style.display]="(vista === \'mapa\')? \'block\': \'none\'">\n\n      <div id="ruta_map" style="width: 100%; height: 100%; ">\n\n\n\n      </div>\n\n    </div>\n\n   \n\n  </div>\n\n  <ion-fab right top>\n\n    <button ion-fab mini (click)="openDialogo()"><ion-icon name="help"></ion-icon></button>\n\n  </ion-fab>\n\n\n\n  <ion-fab bottom  end  >\n\n    <button ion-fab color="verde" (click)="calcular2()"><ion-icon name="calculator"></ion-icon> </button>\n\n  </ion-fab>\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\home\home.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */]])
    ], HomePage);
    return HomePage;
}());

//# sourceMappingURL=home.js.map

/***/ }),

/***/ 199:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HelpPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var HelpPage = /** @class */ (function () {
    function HelpPage(navCtrl, navParams, gasolineraService) {
        // this.taxis = this.navParams.get('res'); // objeto con los datos del negocio 
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.gasolineraService = gasolineraService;
        this.autocomplete = "";
    }
    HelpPage.prototype.ionViewWillEnter = function () {
        this.callback = this.navParams.get("callback");
        console.log('callback de hello:  ' + this.callback);
        this.revisarCh();
    };
    HelpPage.prototype.ionViewWillLeave = function () {
        var _this = this;
        console.log('6 - ¿Estás seguro que quieres dejar la página?.');
        var tarifa = {
            ok: false,
            chofer: this.taxis
        };
        this.callback(tarifa).then(function () {
            _this.navCtrl.pop();
        });
    };
    HelpPage.prototype.revisarCh = function () {
        var _this = this;
        this.contador = 0;
        this.gasolineraService.revisarCh()
            .then(function (result) {
            console.log("llegó: " + result);
            _this.users5 = result;
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.dem) {
                    _this.contador++;
                }
            }
            if (result == 200) {
                //this.presentToast4('Pedido realizado');  
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    HelpPage.prototype.regresar = function (carro) {
        var _this = this;
        var tarifa = {
            ok: true,
            chofer: carro
        };
        /*     this.callback(tarifa).then(()=>{
              this.navCtrl.pop();
             });
         */
        this.navCtrl.pop().then(function () {
            _this.navParams.get('callback')(tarifa);
        });
    };
    HelpPage.prototype.updateSearchResults = function () {
        console.log("updateSearchResults: " + this.autocomplete); //search input will display
    };
    HelpPage.prototype.hideSearch = function () {
        this.autocomplete = "";
    };
    HelpPage.prototype.yourSearchFunction = function () {
        console.log("yourSearchFunction: " + this.autocomplete); //search input will display
    };
    HelpPage.prototype.revisar = function (carro) {
        var a = this.autocomplete.toLowerCase();
        var b = carro.nam.toLowerCase();
        if (b.includes(a)) {
            return true;
        }
        else {
            return false;
        }
    };
    HelpPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-help',template:/*ion-inline-start:"E:\14\gaso\src\pages\help\help.html"*/'<ion-header>\n\n  <ion-navbar color="primary" >\n\n    <ion-title>\n\n       <ion-icon name="car"> Lista de choferes ({{this.contador}})</ion-icon>\n\n    </ion-title>\n\n  </ion-navbar>\n\n  <!-- barra busqueda -->\n\n  <ion-searchbar \n\n  showCancelButton \n\n  \n\n  searchIcon="search" \n\n  animated\n\n  cancel-button-icon\n\n  placeholder="Nombre del chofer"\n\n  [(ngModel)]="autocomplete"\n\n\n\n  (ionCancel)="hideSearch()"\n\n\n\n  (search)="yourSearchFunction()" \n\n  \n\n  (ionInput)="updateSearchResults()">\n\n  </ion-searchbar>\n\n\n\n</ion-header>\n\n\n\n<ion-content class="masters" >\n\n   \n\n  <!-- \n\n    <h1> </h1>   \n\n    <div style="text-align:center" >  <h5>  Versión  3.0 Oficial</h5>   </div> \n\n    <img src="assets/imgs/servimovil.png"  class="logo2" > --> \n\n    \n\n    \n\n     \n\n  <div *ngFor="let carro of users5" > \n\n      <ion-card *ngIf="revisar(carro)" (click)="regresar(carro)" no-padding >          \n\n        <!-- <img src="{{product.url}}" style="padding: 0px;width: 50%" class="imgRedonda">        -->\n\n        <ion-card-content  >\n\n          <ion-row align-items-center  >\n\n            <ion-col size="4">\n\n                    <div  style="text-align:center"> \n\n                      <h2 ><b> <ion-icon  name="car"> </ion-icon> Número: </b> {{carro.id}} </h2> \n\n                    </div>\n\n            </ion-col>\n\n          </ion-row>                      \n\n                            <h2 ><b> <ion-icon  name="person"> </ion-icon> Nombre: </b> {{carro.nam}} </h2> \n\n                            <h2> <b><ion-icon name="call"> </ion-icon> Teléfono: </b>{{ carro.tel}}</h2>                                                    \n\n                            <h2 ><b> <ion-icon  name="logo-usd"> </ion-icon> Saldo: </b> {{carro.eda}} </h2> \n\n                                   \n\n        </ion-card-content>  \n\n       </ion-card>                             \n\n  </div> \n\n\n\n\n\n\n\n\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\help\help.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */]])
    ], HelpPage);
    return HelpPage;
}());

//# sourceMappingURL=help.js.map

/***/ }),

/***/ 200:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DetailssssPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__hello_hello__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ruta_ruta__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_network__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__modificar_modificar__ = __webpack_require__(361);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_global_global__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__inicio_inicio__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__taxis_taxis__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pedidos_pedidos__ = __webpack_require__(362);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_storage__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_uuid__ = __webpack_require__(607);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





















// import { v4 as uuidv4 } from 'uuid';

/**
 * Generated class for the DetailssssPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DetailssssPage = /** @class */ (function () {
    function DetailssssPage(navCtrl, navParams, loadingService, gasolineraService, toastCtrl, alertController, formBuilder, network, socialSharing, global, platform, storage) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loadingService = loadingService;
        this.gasolineraService = gasolineraService;
        this.toastCtrl = toastCtrl;
        this.alertController = alertController;
        this.formBuilder = formBuilder;
        this.network = network;
        this.socialSharing = socialSharing;
        this.global = global;
        this.platform = platform;
        this.storage = storage;
        this.existe = false;
        this.checked = false;
        this.checked2 = true;
        this.carr = false;
        this.btntax = false;
        this.btnusd = false;
        this.carr2 = false;
        this.tarifa = {
            "auto": 0,
            "minivan": 0,
            "microbus": 0,
            "band_auto": 0,
            "band_minivan": 0,
            "band_microbus": 0,
            "porciento": 0,
        };
        this.cards = true;
        this.hayped = false;
        this.hayped2 = false;
        this.val = 5;
        this.myForm2 = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            correo: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bbasico: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bconfort: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bmicrobus: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            porciento: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.myForm3 = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(5), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(5), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            correo: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(16), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(16), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.tasa = {
            "usd": "0",
            "eur": "0",
            "card": "0"
        };
        this.active_slide_index = 1;
        this.active_slide_index1 = 1;
        this.active_slide_index2 = 2;
        this.active_slide_index3 = 3;
        this.carro = {
            "ini": "",
            "id": "",
            "nam": "",
            "tel": "",
            "mail": "",
            "tar": "",
            "apr": true,
            "created_at": "",
            "cor": "",
            "idt": "",
            "eda": "",
            "tax": false,
            "tip": "",
            "tas": "",
            "cha": "",
            "mod": "",
            "dem": "",
            "fot": "",
            "lsn": false,
            "pri": "",
            "lat": "",
            "lng": "",
            "btn": false,
            "div": false,
            "blo": false,
            "idtc": ""
        };
        this.mensajelista = false;
        this.carros = [];
        this.vadmin = false;
        this.mensajeo = false;
        // todo
        this.casitas = [];
        this.users = [];
        this.users2 = [];
        this.auto = {};
        this.auto2 = {};
        this.auto3 = {};
        this.tipo_taxi = 1;
        this.gps_update_link = "aqui_va_el_http_request_link"; // falta
        //para recibir datos con un pop(), en este caso el tipo de icono
        /* dataFromOtherPage = null;
        callback = data => {
         this.dataFromOtherPage = data;
         console.log('data received from other page', this.dataFromOtherPage);
        
         //mensaje para indicar que hay que refrescar la pagina
         let alert = this.alertController.create({
           title: 'Información',
           subTitle: 'Debe refrescar el mapa  para actualizar el ícono',
           buttons: ['Salir']
         });
         alert.present();
        
        }; */
        //objeto para el icono
        this.cambiaricono = {
            nombre: "string",
            tipo: "400",
        };
        this.clientenuevo = false; // para poner mensaje de bienvenida
        this.EMAILPATTERN = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
        this.myForm = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(7), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            correo: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(6), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.baseUrl = 'http://localhost//public';
        this.baseUrl2 = 'https://arcane-journey-25634.herokuapp.com';
        this.hayLinea = false;
        //para la linea
        this.latlngs = [
            [45.51, -122.68],
            [37.77, -122.43]
        ];
        this.comp = [];
        this.res = 'a';
        this.pedido = {
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " "
        };
        this.pedido2 = {
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " "
        };
        this.enviarvende = false;
        this.pedidocan = false;
        this.detalles3 = false;
        this.taxista3 = false;
        this.pedidotax = false;
        this.botontax = false;
        // hayped:boolean=false
        // hayped2:boolean=false
        this.enter = false;
        this.botondiv = false;
        // val:number=5
        //para recibir datos con un pop(), en este caso el tipo de icono desde la pagina taxis
        this.dataFromOtherPage2 = null;
        this.callback2 = function (data) {
            _this.dataFromOtherPage2 = data;
            if (_this.dataFromOtherPage2.ok) {
                _this.detalles2 = true;
                // this.envio=this.dataFromOtherPage.envio
                // this.total=+(this.subtotal+this.envio).toFixed(2)
                // this.ruta=this.dataFromOtherPage2.ruta
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage2);
        };
        this.detalles2 = false;
        this.splash = false;
        this.splash2 = false;
        this.splash3 = false;
        this.noconex = true;
        this.notificationAlreadyReceived = false;
        this.timer2 = true;
        this.timer3 = false;
        this.connected = true;
        this.clientenuevo2 = false;
        this.vistanored = '';
        this.nego = false;
        this.gestor = false;
        this.cliente = false;
        this.chofer = false;
        this.textos = false;
        this.fondo = false;
        this.dataFromOtherPage = null;
        this.myCallbackFunction = function (_params) {
            return new Promise(function (resolve, reject) {
                _this.dataFromOtherPage = _params;
                //resolve();
                if (_this.dataFromOtherPage.ok) {
                    // this.auto = this.dataFromOtherPage.auto
                    _this.auto = _this.dataFromOtherPage.auto;
                    _this.existetel = true;
                }
                console.log('data received from other page', _this.dataFromOtherPage.auto);
            });
        };
        this.checked3 = true;
        this.firstName2 = "lalal";
        this.crearusuario = false;
        this.myForm4 = this.formBuilder.group({
            // firstName: ['', Validators.compose([Validators.maxLength(60), Validators.required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(7), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            correo: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(6), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.myForm5 = this.formBuilder.group({
            // firstName: ['', Validators.compose([Validators.maxLength(60), Validators.required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(7), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.restablecer = false;
        this.con = 0;
        this.restablecer2 = false;
        this.restaurar = false;
        this.myForm6 = this.formBuilder.group({
            // firstName: ['', Validators.compose([Validators.maxLength(60), Validators.required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(6), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(6), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.myForm7 = this.formBuilder.group({
            // firstName: ['', Validators.compose([Validators.maxLength(60), Validators.required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(6), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(40), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.vclaxon = " Claxon ON";
        this.carro = this.navParams.get('datos'); // objeto con los datos del usuario 
        this.existe = this.navParams.get('existe'); // booleano si existe o no el usuario, para...
        this.tipuser = this.navParams.get('tipuser'); // string con el tipo de usuario
        this.id = this.navParams.get('id'); // idt del dispositivo
        if (this.existe) {
            // es nego o gestor
            if (this.tipuser == "nego") {
                // es negocio
                this.nego = true;
                /*    this.latitude=carro.lat
                    this.longitude=carro.lng
                    
                    this.global.globalCarro=carro
                    this.botontax=carro.btn
                    this.botondiv=carro.div
                    estado=carro.est */
                this.vclaveprimaria = this.carro.id;
                this.auto = this.carro;
                // this.taxista3=this.carro.tax 
                this.existetel = true; //para transmitir los datos y cambiar de vista
                //  this.global.global1=true
                this.vclaveprimaria = this.carro.id;
                this.vnombre = this.carro.nam;
                this.vtelefono = this.carro.tel;
                // this.vchapa=this.carro.cha
                // this.vmodelo=this.carro.mod
                this.vcorreo = this.carro.mail;
                // this.vedad=this.carro.eda
                this.vtarifa = this.carro.tar;
                // this.estaxista=true // true si el usuario esta en la tabla taxista
                // this.esdemo=this.carro.dem // true cuando deja de estar en demo
                this.aprovado = this.carro.apr;
                this.vinicio = this.carro.created_at;
                // this.vfechapago=this.carro.ven 
                //  this.numerodefotos=this.carro.fot
                //objeto con los datos de la persona 
                this.auto3 = this.carro;
                var carrito = {
                    id: this.carro.id,
                    idt: this.carro.idt,
                    nombre: this.carro.nam,
                    telefono: this.carro.tel,
                    android: false,
                    ln: this.carro.apr,
                };
                this.comp.push(carrito);
                //  this.global.compglob=this.comp
                //  this.latitude=this.carro.lat
                //  this.longitude=this.carro.lng
                this.auto2 = this.carro;
                //this.global.this.globalCarro=this.carro 
                this.botontax = true; //this.carro.btn
                this.botondiv = true; //this.carro.div
                if (this.carro.tip) {
                    this.tarifa = JSON.parse(this.carro.tip);
                    this.tasa = JSON.parse(this.carro.tas);
                }
            }
            if (this.tipuser == "gestor") {
                this.gestor = true;
                this.vclaveprimaria = this.carro.id;
                this.auto = this.carro;
                this.taxista3 = this.carro.tax;
                this.existetel = true; //para transmitir los datos y cambiar de vista
                //  this.global.global1=true
                this.vclaveprimaria = this.carro.id;
                this.vnombre = this.carro.nam;
                this.vtelefono = this.carro.tel;
                this.vchapa = this.carro.cha;
                this.vmodelo = this.carro.mod;
                this.vcorreo = this.carro.cor;
                this.vedad = this.carro.eda;
                this.vtarifa = this.carro.tar;
                // this.estaxista=true // true si el usuario esta en la tabla taxista
                this.esdemo = this.carro.dem; // true cuando deja de estar en demo
                this.aprovado = this.carro.apr;
                this.vinicio = this.carro.created_at;
                // this.vfechapago=this.carro.ven 
                this.numerodefotos = this.carro.fot;
                //objeto con los datos de la persona 
                this.auto3 = this.carro;
                var carrito = {
                    id: this.carro.id,
                    idt: this.carro.idt,
                    nombre: this.carro.nam,
                    telefono: this.carro.tel,
                    android: false,
                    ln: this.carro.lsn,
                    pri: this.carro.pri
                };
                this.comp.push(carrito);
                //  this.global.compglob=this.comp
                this.latitude = this.carro.lat;
                this.longitude = this.carro.lng;
                this.auto2 = this.carro;
                //this.global.this.globalCarro=this.carro 
                this.botontax = this.carro.btn;
                this.botondiv = this.carro.div;
            }
            if (this.tipuser == "cliente") {
                this.cliente = true;
                console.log("id: " + this.carro.id);
                this.auto2 = this.carro;
                this.contadorid = this.carro.id;
                this.resultado = this.carro.nam;
                this.existetel = true; //para transmitir los datos y cambiar de vista
                //  this.global.global1=true
                this.vclaveprimaria = this.carro.id;
                this.vnombre = this.carro.nam;
                this.vtelefono = this.carro.tel;
                this.vcorreo = this.carro.mail;
                this.vinicio = this.carro.created_at;
                this.estaxista = false; // true si el usuario es taxista
                this.esdemo = false; //el usuario es un cliente
                this.aprovado = this.carro.apr;
                this.bloquear = this.carro.lsn;
                this.users4 = this.carro.id;
                // this.vedad=this.carro.eda
                // this.vchapa=response.cha
                // this.vmodelo=response.mod                
                //  this.vfechapago=this.carro.ven 
                //objeto con los datos de la persona 
                this.auto3 = this.carro;
                var carrito = {
                    id: this.carro.id,
                    idt: this.carro.idt,
                    nombre: this.carro.nam,
                    telefono: this.carro.tel,
                    android: false,
                    ln: this.carro.lsn,
                    pri: true
                };
                this.comp.push(carrito);
                // this.global.compglob=this.comp
                console.log(this.comp);
            }
            if (this.tipuser == "chofer") {
                this.chofer = true;
                if (this.carro.pri) {
                    this.saldochof = this.carro.eda;
                    this.auto2 = this.carro;
                    this.contadorid = this.carro.id;
                    this.resultado = this.carro.nam;
                    this.existetel = true; //para transmitir los datos y cambiar de vista
                    //  this.global.global1=true
                    this.vclaveprimaria = this.carro.id;
                    this.vnombre = this.carro.nam;
                    this.vtelefono = this.carro.tel;
                    // this.vchapa=response.cha
                    // this.vmodelo=response.mod
                    this.vcorreo = this.carro.cor;
                    this.vedad = this.carro.eda;
                    this.estaxista = false; // true si el usuario es taxista
                    this.esdemo = this.carro.dem; // true cuando deja de estar en demo
                    this.aprovado = this.carro.apr;
                    this.vinicio = this.carro.ini;
                    //  this.vfechapago=this.carro.ven 
                    this.bloquear = this.carro.blo;
                    //objeto con los datos de la persona 
                    this.auto3 = this.carro;
                    var carrito = {
                        id: this.carro.id,
                        idt: this.carro.idt,
                        nombre: this.carro.nam,
                        telefono: this.carro.tel,
                        android: false,
                        ln: this.carro.lsn,
                        pri: this.carro.pri
                    };
                    this.comp.push(carrito);
                    // this.global.compglob=this.comp
                    console.log(this.comp);
                }
            }
        }
    }
    DetailssssPage.prototype.pageScrollers1 = function () {
        this.pageTops1.scrollToTop();
    };
    DetailssssPage.prototype.pageScroller = function () {
        this.pageTop.scrollToTop();
    };
    DetailssssPage.prototype.addValue = function (e) {
        var isChecked = e.currentTarget.checked;
        console.log(e.currentTarget); //undefined
        console.log(this.checked); //it is working !!!
        console.log(isChecked); //it is working !!!
    };
    DetailssssPage.prototype.ionViewDidEnter = function () {
        this.getClaxon();
        this.existe = this.navParams.get('existe'); // booleano si existe o no el usuario, para...
        if (!this.existe) {
            this.platform.registerBackButtonAction(function () {
                //your code
                // this.presentToast4("no va a salir")
            }, 100);
        }
    };
    DetailssssPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DetailssssPage:');
        console.log(' pagina DetailssssPage:' + this.carro.nam);
        console.log(' existe:' + this.existe);
        console.log(' tipo:' + this.tipuser);
        this.detalles = false;
        // watch network for a connection
        // We just got a connection but we need to wait briefly
        // before we determine the connection type. Might need to wait.
        // prior to doing any api requests as well.
        /*   let connectSubscription = this.network.onConnect().subscribe(() => {
            console.log('network connected!');
          
                 this.presentToast4("red Conectada")
          
               this.vistanored = '';
               // this.loadMap();
          
                if (this.network.type === 'wifi') {
                  console.log('we got a wifi connection, woohoo!');
                }
          
          
              });
          
              let disconnectSubscription = this.network.onDisconnect().subscribe(() => {
                console.log('network dis connected!');
              
                this.vistanored = 'nored';
               // this.loadMap();
                this.presentToast4("red desconectada")
              
                  });
          
         */
    };
    DetailssssPage.prototype.Clicked = function () {
        this.fondo = false;
        this.textos = true;
        this.checked = !this.checked;
        this.btntax = false;
        this.users4 = [];
        this.carr = false;
        this.btnusd = false;
        this.carr2 = false;
        this.checked2 = false;
    };
    DetailssssPage.prototype.Clicked2 = function () {
        this.textos = true;
        this.btntax = !this.btntax;
        this.checked = false;
        this.users4 = [];
        this.carr = false;
        this.btnusd = false;
        this.checked2 = false;
        console.log("tarifas: " + this.tarifa.auto);
    };
    DetailssssPage.prototype.Clicked3 = function () {
        this.btnusd = !this.btnusd;
        this.btntax = false;
        this.checked = false;
        this.carr = false;
        this.checked2 = false;
        console.log("tarifas: " + this.tarifa.auto);
    };
    DetailssssPage.prototype.revisar2 = function () {
        var _this = this;
        //revisar conexion a internet
        // this.loadingService.presentLoading();
        if (!this.myForm4.valid) {
            if (this.vtelefono2 == null) {
                this.presentToast4('Debe escribir un número de teléfono ');
            }
            else if (this.vcorreo2 == null) {
                this.presentToast4('Debe escribir una contraseña ');
            }
        }
        else {
            this.id = this.vcorreo2; //"9dd748"
            var tel = this.vtelefono2;
            this.gasolineraService.getDataPersona9(this.id, tel).then(function (result) {
                var users2 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
                // carro.toString() console.log("resultado: "+result.body)
                // this.presentToast4("status: "+ result.status)
                console.log("users2 data: " + JSON.stringify(users2));
                var a = JSON.stringify(users2);
                if (a == "[]") {
                    console.log("esta vacio: ");
                    _this.presentToast4("Por favor revise bien sus datos.");
                }
                else {
                    for (var _i = 0, users2_1 = users2; _i < users2_1.length; _i++) {
                        var carro = users2_1[_i];
                        if (!carro.apr) {
                            _this.presentToast4("Usuario bloquedo.");
                        }
                        else {
                            if (result[0].idt == _this.id) {
                                _this.clientenuevo = true;
                                // this.presentToast4('Gracias por inscribirse');  
                                _this.storage.set('idt', result[0].idt);
                                // this.revisar2()
                                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__inicio_inicio__["a" /* InicioPage */]);
                            }
                        }
                    }
                }
            }, function (err) {
                console.log(err);
                _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            });
        }
    };
    // para usuario personal
    DetailssssPage.prototype.verMensajes2 = function () {
        var _this = this;
        this.checked = false;
        this.carr = !this.carr;
        this.carr2 = false;
        this.checked2 = false;
        /*
          if(!this.carr){
           this.backgroundGeolocation.stop();
          }
        */
        this.detalles = false;
        this.cards = true;
        console.log(this.carr);
        console.log(this.carro.idt);
        if (this.carr) {
            this.loadingService.presentLoading();
            // parte de comprobar si hay un pedido nuevo de nu nego especifico
            this.gasolineraService.getMensajesNego32(this.carro.idt).then(function (result) {
                console.log(result);
                _this.users4 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
                for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    // console.log("idtc : "+carro.idtc)
                    if (_this.carro.idt == carro.idtc) {
                        //ç this.cantUsuarios++ 
                        _this.hayped = true;
                        //this.startTimer()
                        //this.startBackgroundGeolocation()
                    }
                }
                _this.loadingService.dismissLoading();
                if (!_this.hayped) {
                    _this.presentToast4('Usted no tiene pedidos hoy');
                }
                console.log("hay pedido 1: " + _this.hayped);
            }, function (err) {
                console.log(err);
                _this.loadingService.presentError();
                _this.loadingService.dismissLoading();
            });
        }
        /*
        
           this.gasolineraService.getMensajesNego31(this.carro.idt).subscribe(
             (response: any)=>{
               this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
               console.log(response);
                   // this.cantUsuarios=0
                   
                   //this.buscaper2=false
                   for (let carro of this.users4) {
                     
                    // console.log("idtc : "+carro.idtc)
                     if(this.carro.idt==carro.idtc){
                     //ç this.cantUsuarios++
                     this.hayped=true
                     this.startBackgroundGeolocation()
                     }
                   }
               this.loadingService.dismissLoading();
               if(!this.hayped){
                 this.presentToast4('Usted no tiene pedidos hoy');
               }
               console.log("hay pedido 1: "+this.hayped)
             },
             (error) => {
               this.loadingService.presentError();
               this.loadingService.dismissLoading();
             }
           )	 */
        //this.hayped=true
        console.log("hay pedido 2: " + this.hayped);
    };
    DetailssssPage.prototype.setClaxon = function () {
        var _this = this;
        this.storage.get('userClaxon').then(function (val) {
            var claxon = val;
            //
            if (claxon == null) {
                _this.storage.set('userClaxon', true);
                console.log('Your userClaxon is', true);
                _this.vclaxon = " Claxon ON";
            }
            else {
                if (claxon) {
                    _this.storage.set('userClaxon', false);
                    console.log('Your userClaxon is', false);
                    _this.vclaxon = " Claxon OFF";
                }
                else {
                    _this.storage.set('userClaxon', true);
                    console.log('Your userClaxon is', true);
                    _this.vclaxon = " Claxon ON";
                }
            }
        });
    };
    DetailssssPage.prototype.getClaxon = function () {
        var _this = this;
        this.storage.get('userClaxon').then(function (val) {
            // console.log('Your userClaxon is', val);
            var claxon = val;
            //
            if (claxon == null) {
                _this.setClaxon();
                // this.storage.set('userClaxon', true);
            }
            else {
                if (!claxon) {
                    console.log('Your userClaxon is', false);
                    _this.vclaxon = " Claxon OFF";
                }
                else {
                    console.log('Your userClaxon is', true);
                    _this.vclaxon = " Claxon ON";
                }
            }
        });
    };
    // para usuario personal
    DetailssssPage.prototype.checked21 = function () {
        var carro = this.carro.id;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__pedidos_pedidos__["a" /* PedidosPage */], { carro: carro, callback: this.myCallbackFunction });
        /*
            this.checked2=!this.checked2
            if(!this.checked2){
              // this.verMensajes4()
             //  this.getDataPedidos()
        
                  
              this.checked=false
              this.carr=false
              this.carr2=!this.carr2
              this.checked2=false
        
              this.detalles=false
              this.cards=true
        
        
              let users2 = this.carro.id;
              this.users4 = this.carro.id;
         
              for (let carro of users2) {
                console.log(carro.id)
                this.hayped2=true
          
              }
         
              if(!this.hayped2){
               this.presentToast4('Usted no tiene pedidos');
             }
        
            }else{
        
            }
         */
    };
    // para usuario personal
    DetailssssPage.prototype.verMensajes7 = function (carro) {
        var _this = this;
        this.users5 = [];
        this.checked = false;
        this.carr = false;
        this.carr2 = true;
        this.checked2 = false;
        this.detalles = false;
        this.cards = true;
        this.ident = carro;
        this.porciento = 0;
        this.total = 0;
        //console.log(this.carr);
        console.log("id del personal: " + carro);
        if (this.carr2) {
            this.loadingService.presentLoading();
            this.gasolineraService.getMensajesNego3(carro).subscribe(function (response) {
                _this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                console.log(response);
                // this.cantUsuarios=0
                //this.buscaper2=false      
                for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                    var carro_1 = _a[_i];
                    if (carro_1.apr) {
                        if (!carro_1.can && !carro_1.cam) {
                            _this.porciento = +(_this.porciento + parseFloat(carro_1.mensajeprincipal)).toFixed(2);
                            _this.total = +(_this.total + parseFloat(carro_1.mensaje)).toFixed(2);
                        }
                    }
                    // console.log("idtc : "+carro.idtc) 
                    if (carro_1 == carro_1.idtc) {
                        //ç this.cantUsuarios++ 
                        _this.hayped2 = true;
                    }
                }
                // this.total=+(this.porciento*10).toFixed(2)
                _this.loadingService.dismissLoading();
                if (!_this.hayped2) {
                    // this.presentToast4('Usted no tiene pedidos');
                }
                // console.log("hay pedido 1: "+this.hayped)
            }, function (error) {
                _this.loadingService.presentError();
                _this.loadingService.dismissLoading();
            });
        }
        /*    */
        //this.hayped=true
        // console.log("hay pedido 2: "+this.hayped)
    };
    // para usuario gestor
    DetailssssPage.prototype.verMensajes8 = function (carro) {
        var _this = this;
        this.users5 = [];
        this.checked = false;
        this.carr = false;
        this.carr2 = true;
        this.checked2 = false;
        this.detalles = false;
        this.cards = true;
        this.ident = carro;
        this.porciento = 0;
        this.total = 0;
        //console.log(this.carr);
        console.log("id del gestor: " + carro);
        if (this.carr2) {
            this.loadingService.presentLoading();
            this.gasolineraService.getMensajesNego3men(carro).subscribe(function (response) {
                _this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                console.log(response);
                // this.cantUsuarios=0
                //this.buscaper2=false      
                for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                    var carro_2 = _a[_i];
                    if (carro_2.apr) {
                        if (!carro_2.esp) {
                            if (!carro_2.can && !carro_2.cam) {
                                _this.total = +(_this.total + parseFloat(carro_2.mensaje)).toFixed(2);
                                _this.porciento = +(_this.porciento + parseFloat(carro_2.mensajeprincipal)).toFixed(2);
                            }
                        }
                    }
                    // console.log("idtc : "+carro.idtc)
                    if (carro_2 == carro_2.idtm) {
                        //ç this.cantUsuarios++ 
                        _this.hayped2 = true;
                    }
                }
                _this.loadingService.dismissLoading();
                if (!_this.hayped2) {
                    // this.presentToast4('Usted no tiene pedidos');
                }
                // console.log("hay pedido 1: "+this.hayped)
            }, function (error) {
                _this.loadingService.presentError();
                _this.loadingService.dismissLoading();
            });
        }
        //this.hayped=true
        // console.log("hay pedido 2: "+this.hayped)
    };
    // para usuario chofer
    DetailssssPage.prototype.verMensajes9 = function (carro) {
        var _this = this;
        this.users5 = [];
        this.checked = false;
        this.carr = false;
        this.carr2 = true;
        this.checked2 = false;
        this.detalles = false;
        this.cards = true;
        this.ident = carro;
        this.porciento = 0;
        this.total = 0;
        //console.log(this.carr);
        console.log("id del chofer: " + carro);
        if (this.carr2) {
            this.loadingService.presentLoading();
            this.gasolineraService.getDataNegocioPlanUserMasMensa(carro).subscribe(function (response) {
                _this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                console.log(response);
                // this.cantUsuarios=0
                //this.buscaper2=false      
                for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                    var carro_3 = _a[_i];
                    if (carro_3.apr) {
                        if (!carro_3.can && !carro_3.cam) {
                            _this.total = +(_this.total + parseFloat(carro_3.mensaje)).toFixed(2);
                            _this.porciento = +(_this.porciento + parseFloat(carro_3.mensajeprincipal)).toFixed(2);
                        }
                    }
                    // console.log("idtc : "+carro.idtc)
                    if (_this.carro.idt == carro_3.idtc) {
                        //ç this.cantUsuarios++ 
                        _this.hayped2 = true;
                    }
                }
                _this.loadingService.dismissLoading();
                if (!_this.hayped2) {
                    // this.presentToast4('Usted no tiene pedidos');
                }
                // console.log("hay pedido 1: "+this.hayped)
            }, function (error) {
                _this.loadingService.presentError();
                _this.loadingService.dismissLoading();
            });
        }
        //this.hayped=true
        // console.log("hay pedido 2: "+this.hayped)
    };
    // para usuario personal
    DetailssssPage.prototype.verMensajes2men = function () {
        var _this = this;
        this.users5 = [];
        this.checked2 = false;
        // this.carr=!this.carr
        this.carr2 = false;
        this.checked2 = false;
        this.detalles = false;
        this.cards = true;
        console.log(this.carr);
        console.log(this.carro.idt);
        var pedidonego = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getMensajesNego31men(this.carro.idt).subscribe(function (response) {
            _this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            // this.cantUsuarios=0
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.apr) {
                    if (!carro.can && !carro.cam) {
                        _this.porciento = +(_this.porciento + parseFloat(carro.mensajeprincipal)).toFixed(2);
                        _this.total = +(_this.total + parseFloat(carro.mensaje)).toFixed(2);
                    }
                }
                // console.log("idtc : "+carro.idtc)
                if (carro == carro.idtn) {
                    //ç this.cantUsuarios++ 
                    pedidonego = true;
                }
            }
            _this.loadingService.dismissLoading();
            if (!pedidonego) {
                // this.presentToast4('No hay pedidos ');
            }
            console.log("hay pedido 1: " + _this.hayped);
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        //this.hayped=true
        console.log("hay pedido 2: " + this.hayped);
    };
    // para usuario personal
    DetailssssPage.prototype.verMensajes4men = function () {
        var _this = this;
        this.checked = false;
        this.carr = false;
        this.carr2 = !this.carr2;
        this.checked2 = false;
        this.detalles = false;
        this.cards = true;
        console.log(this.carr);
        console.log(this.carro.idt);
        if (this.carr2) {
            this.loadingService.presentLoading();
            this.gasolineraService.getMensajesNego3men(this.carro.idt).subscribe(function (response) {
                _this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                console.log(response);
                // this.cantUsuarios=0
                //this.buscaper2=false      
                for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    // console.log("idtc : "+carro.idtc)
                    if (_this.carro.idt == carro.idtm) {
                        //ç this.cantUsuarios++ 
                        _this.hayped2 = true;
                    }
                }
                _this.loadingService.dismissLoading();
                if (!_this.hayped2) {
                    _this.presentToast4('Usted no tiene pedidos');
                }
                // console.log("hay pedido 1: "+this.hayped)
            }, function (error) {
                _this.loadingService.presentError();
                _this.loadingService.dismissLoading();
            });
        }
        //this.hayped=true
        console.log("hay pedido 2: " + this.hayped);
    };
    DetailssssPage.prototype.wait30sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 10000); });
    };
    // borra a un anuncio
    DetailssssPage.prototype.valorar = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //  subTitle: "<strong>¡Información!</strong>",
                            //  message:  '¿Usted va a valorar el servicio?</br>',   
                            inputs: [
                                {
                                    name: 'comentario',
                                    type: 'textarea',
                                    //  id: 'inputAmount',
                                    placeholder: 'Puede comentar aquí'
                                }
                            ],
                            buttons: [
                                {
                                    text: 'Cancelar',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Enviar',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        console.log(" comentario: " + blah.comentario);
                                        _this.carrito = JSON.parse(carro.prd);
                                        var pasajeros;
                                        var equipaje;
                                        var animales;
                                        var dia;
                                        var hora;
                                        var vehiculo;
                                        for (var _i = 0, _a = _this.carrito; _i < _a.length; _i++) {
                                            var casita = _a[_i];
                                            pasajeros = casita.pasajeros;
                                            equipaje = casita.equipaje;
                                            animales = casita.animales;
                                            dia = casita.dia;
                                            hora = casita.hora;
                                            vehiculo = casita.vehiculo;
                                        }
                                        console.log(" comentario: " + pasajeros);
                                        var carrito = {
                                            // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
                                            pasajeros: pasajeros,
                                            equipaje: equipaje,
                                            animales: animales,
                                            otros: blah.comentario,
                                            dia: dia,
                                            hora: hora,
                                            vehiculo: vehiculo
                                        };
                                        var myObjStr = JSON.stringify(carrito);
                                        console.log("variable carrito" + myObjStr);
                                        var i = { "id": carro.id,
                                            "val": _this.val,
                                            "prd": "[" + myObjStr + "]",
                                        };
                                        // let result = this.gasolineraService.updateMensajeRate(i);//api
                                        _this.gasolineraService.updateMensajeRate(i)
                                            .then(function (result) {
                                            console.log(result);
                                            if (result['hello']) {
                                                carro.val = _this.val;
                                                _this.presentToast4('Valoración recibida. Gracias');
                                                if (_this.carr) {
                                                    _this.verMensajes2();
                                                }
                                                else {
                                                    // this.verMensajes4()
                                                    _this.getDataPedidos();
                                                }
                                            }
                                            else {
                                                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                                            }
                                        }, function (err) {
                                            console.log(err);
                                        });
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssssPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    //editar los datos del usuario  ya sea taxista o no 
    DetailssssPage.prototype.updateItem2 = function () {
        var _this = this;
        if (!this.myForm2.valid) {
            this.presentToast4('Error en los datos ');
        }
        else {
            var obj = {
                "auto": this.tarifa.auto,
                //"idt":this.id,
                "minivan": this.tarifa.minivan,
                //"lat":"23.111",//06974254
                //"lng":"-82.111",//46458121
                "microbus": this.tarifa.microbus,
                "band_auto": this.tarifa.band_auto,
                //"idt":this.id,
                "band_minivan": this.tarifa.band_minivan,
                //"lat":"23.111",//06974254
                //"lng":"-82.111",//46458121
                "band_microbus": this.tarifa.band_microbus,
                "porciento": this.tarifa.porciento,
            };
            var i_1 = {
                "id": this.vclaveprimaria,
                "tip": JSON.stringify(obj) // la tarifa
                // "created_at":"2019-11-30 00:02:10",
                // "updated_at":"2019-11-30 00:02:10"           
            };
            console.log("tarifas modificadas:" + JSON.stringify(i_1) + " Obj: " + obj);
            // let result = this.gasolineraService.updateTaxis2(i);//api
            this.gasolineraService.updateTaxis2(i_1).then(function (result) {
                console.log(" ver " + result.hello);
                if (result.hello) {
                    console.log("tarifas modificadas:" + JSON.stringify(i_1));
                    //this.detalles3=true
                    console.log(result);
                    _this.prev();
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            });
        }
    };
    //editar los datos del usuario  ya sea taxista o no 
    DetailssssPage.prototype.updateItem5 = function () {
        if (!this.myForm3.valid) {
            this.presentToast4('Error en los datos ');
        }
        else {
            var obj = {
                "usd": this.tasa.usd,
                //"idt":this.id,
                "eur": this.tasa.eur,
                //"lat":"23.111",//06974254
                //"lng":"-82.111",//46458121
                "card": this.tasa.card
            };
            var i = {
                "id": this.vclaveprimaria,
                "tas": JSON.stringify(obj) // la tarifa
                // "created_at":"2019-11-30 00:02:10",
                // "updated_at":"2019-11-30 00:02:10"           
            };
            var result = this.gasolineraService.updateTaxis4(i); //api
            console.log("tarifas modificadas:" + JSON.stringify(i));
            this.prev();
        }
    };
    DetailssssPage.prototype.logRatingChange = function (rating, carro) {
        console.log("changed rating: ", rating);
        // do your stuff
        this.val = rating;
        // this.carrito
        this.valorar(carro);
    };
    DetailssssPage.prototype.valorar2 = function (carro) {
        var _this = this;
        var i = { "id": carro.id,
            "val": this.val,
        };
        // let result = this.gasolineraService.updateMensajeRate(i);//api
        this.gasolineraService.updateMensajeRate(i)
            .then(function (result) {
            console.log(result);
            if (result['hello']) {
                _this.presentToast4('Valoración recibida. Gracias');
                _this.verMensajes2();
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetailssssPage.prototype.prev = function () {
        this.slides.slidePrev();
        this.pageScrollers1();
    };
    //para buscar palabra clave en negocios
    DetailssssPage.prototype.verMensajes5 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.fondo = false;
                        if (!(this.carro.tax && this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_1 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.presentToast4('Contraseña correcta');
                                            _this.Clicked2();
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_1.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.Clicked2();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    //para buscar palabra clave en negocios
    DetailssssPage.prototype.verMensajes6 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.carro.tax && this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_2 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.presentToast4('Contraseña correcta');
                                            _this.Clicked3();
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_2.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.Clicked3();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    //para buscar palabra clave en negocios
    DetailssssPage.prototype.verMensajes10 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.carro.tax && this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_3 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.presentToast4('Contraseña correcta');
                                            // this.Clicked2()    
                                            _this.revisarCh2();
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_3.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.Clicked2();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    //para buscar palabra clave en negocios
    DetailssssPage.prototype.openDialogo5 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Buscar servicio a domicilio!",
                            message: 'Introduzca el nombre del negocio o mensajero',
                            inputs: [
                                {
                                    name: 'telefono',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        // console.log('en string '+JSON.stringify(data)); //to see the object
                                        // console.log('data '+data);
                                        // console.log('data.telefono '+data.telefono);
                                        //this.telefono=data.telefono;
                                        //this.sendTextMessage();     
                                        //  this.vista = 'listanegos';
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.telefono;
                                        _this.loadingService.presentLoading();
                                        _this.gasolineraService.getNegocio(data.telefono).subscribe(function (response) {
                                            //this.toolbar=true
                                            //this.busquedapalabra=true
                                            if (response.total == 0) {
                                                //this.busquedacero= 
                                                _this.mensajelista = true;
                                                _this.presentToast4('No hay usuarios con ese nombre ');
                                            }
                                            else {
                                                _this.mensajelista = false;
                                                //this.busquedacero=false
                                            }
                                            _this.carros = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                            //this.last_page=response.last_page
                                            console.log(response);
                                            _this.loadingService.dismissLoading();
                                        }, function (error) {
                                            _this.loadingService.presentError();
                                            _this.loadingService.dismissLoading();
                                        });
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //para buscar palabra clave en negocios
    DetailssssPage.prototype.openDialogo6 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡BORRAR SU USUARIO!",
                            message: '¿Usted desea borrar su usuario?',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        // console.log('en string '+JSON.stringify(data)); //to see the object
                                        _this.openDialogo7();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssssPage.prototype.openDialogo7 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡ESTA ACCIÓN ES IRREVERSIBLE!",
                            message: '¿Usted desea borrar su usuario?',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        // console.log('en string '+JSON.stringify(data)); //to see the object
                                        var timestamp = new Date();
                                        console.log('en string ' + timestamp); //to see the object
                                        var i = {
                                            "idt": "Borrado: " + timestamp + " " + _this.id,
                                            "nam": "Borrado: " + timestamp + " " + _this.vnombre,
                                            "tel": "Borrado: " + timestamp + " " + _this.vtelefono,
                                            "mail": _this.vcorreo
                                            //  "nam": "MariasssS" , "tel": "7654321", "mail": "JpedroM@gmail.com"
                                        };
                                        var id = _this.id;
                                        _this.gasolineraService.updatePersonaS(i, id).then(function (result) {
                                            // console.log(result);
                                            // let user = JSON.parse(result[0])
                                            // console.log("user : "+user);
                                            if (result[0].idt == "Borrado: " + timestamp + " " + _this.id) {
                                                _this.presentToast4('Su usuario ha sido eliminado, le esperamos pronto. ');
                                                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__taxis_taxis__["a" /* TaxisPage */]);
                                                // this.Clicked()  
                                            }
                                            else {
                                                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                                            }
                                        }, function (err) {
                                            console.log(err);
                                        });
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //para buscar palabra clave en negocios
    DetailssssPage.prototype.verMensajes = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.fondo = false;
                        if (!(this.carro.tax && this.carro.eda != this.palabra)) return [3 /*break*/, 2];
                        alert_4 = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono);           
                                        //busca el id del telefono en la tabla persona
                                        _this.palabra = data.Contraseña;
                                        if (_this.carro.eda == _this.palabra) {
                                            _this.presentToast4('Contraseña correcta');
                                            _this.Clicked();
                                        }
                                        else {
                                            _this.presentToast4('Contraseña incorrecta');
                                        }
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert_4.present()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.Clicked();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    //poner o quitar servicio de taxis   
    DetailssssPage.prototype.updateItem4 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '<br>¿Usted va a Poner el servicio de Taxis en la App?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": _this.vclaveprimaria,
                                            "btn": true // la tarifa
                                            // "created_at":"2019-11-30 00:02:10",
                                            // "updated_at":"2019-11-30 00:02:10"           
                                        };
                                        var result = _this.gasolineraService.updateTaxis3(i); //api
                                        console.log("tarifas modificadas:" + JSON.stringify(i));
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssssPage.prototype.guardar3 = function () {
        console.log();
        var bol = false;
        if (this.nego) {
            bol = true;
        }
        if (this.gestor) {
            bol = false;
        }
        var carro = this.auto2;
        var idtm = this.id;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__hello_hello__["a" /* HelloPage */], { carro: carro, bol: bol, idtm: idtm }); //     
    };
    //editar los datos del usuario  ya sea taxista o no 
    DetailssssPage.prototype.updateItem = function () {
        var _this = this;
        this.carro.nam = this.vnombre;
        this.carro.tel = this.vtelefono;
        this.carro.cor = this.vcorreo;
        this.auto.nam = this.vnombre;
        this.auto.tel = this.vtelefono;
        this.auto.cor = this.vcorreo;
        if (this.gestor || this.nego) {
            var i = {
                // "id":this.vclaveprimaria, //carro.id nego
                "idt": this.id,
                "nam": this.vnombre,
                //"lat":"23.111",//06974254
                //"lng":"-82.111",//46458121
                "est": true,
                "cha": this.vchapa,
                "mod": this.vmodelo,
                "tel": this.vtelefono,
                "cor": this.vcorreo,
                "eda": this.vedad,
                //"lla":0,
                //"apr":this.aprovado,
                "ini": this.vtelefono,
                //"ven":"2019-11-30 00:02:10",
                //"tax":false,
                "dem": this.esdemo,
                "tar": this.vtarifa // la tarifa
                // "created_at":"2019-11-30 00:02:10",
                // "updated_at":"2019-11-30 00:02:10"
            };
            console.log(" datos taxis: " + JSON.stringify(i));
            //let result = this.gasolineraService.updateTaxis(i);//api
            //console.log(result);
            //this.prev()
            this.gasolineraService.updateTaxis(i).then(function (result) {
                console.log(" ver " + result.hello);
                if (result.hello) {
                    //this.detalles3=true
                    console.log(result);
                    _this.checked = !_this.checked;
                    // this.prev()
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            });
        }
        if (this.cliente || this.chofer) {
            var i = {
                // "id":this.vclaveprimaria,
                "nam": this.vnombre,
                "tel": this.vtelefono,
                "mail": this.vcorreo
                //  "nam": "MariasssS" , "tel": "7654321", "mail": "JpedroM@gmail.com"
            };
            var id = this.id;
            this.gasolineraService.updatePersonaS(i, id).then(function (result) {
                // console.log(result);
                // let user = JSON.parse(result[0])
                // console.log("user : "+user);
                if (result[0].idt == _this.id) {
                    _this.presentToast4('Los datos han sido actualizados');
                    _this.Clicked();
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
        //api
    };
    DetailssssPage.prototype.next = function () {
        this.slides.slideNext();
        this.pageScrollers1();
    };
    DetailssssPage.prototype.veruta = function (carro) {
        /*   if(carro.tax){
            this.pedidotax=true
          }else{
            this.pedidotax=false
          }
       */
        // this.detalles=true
        // this.cards=false
        this.pedidocan = carro.can;
        this.enviarvende = carro.apr;
        this.detalles3 = carro.apr;
        this.carrito = [];
        this.carrito = JSON.parse(carro.prd);
        //console.log(this.carrito);
        //console.log(carro.prd);
        this.subtotal = 0;
        for (var _i = 0, _a = this.carrito; _i < _a.length; _i++) {
            var casita = _a[_i];
            // this.subtotal=+(this.subtotal+casita.subtotal).toFixed(2)
            this.subtotal = +(this.subtotal + casita.subtotal);
        }
        this.subtotal = +(this.subtotal).toFixed(2);
        this.pedido = JSON.parse(carro.dat);
        this.id2 = carro.id;
        this.calculadora();
    };
    DetailssssPage.prototype.calculadora = function () {
        var carro = {
            "curPos": this.pedido,
        };
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__ruta_ruta__["a" /* RutaPage */], { carro: carro, callback: this.callback2 }); //
    };
    DetailssssPage.prototype.newch = function () {
        var carro = this.carro;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__modificar_modificar__["a" /* ModificarPage */], { carro: carro });
    };
    DetailssssPage.prototype.ionViewWillEnter = function () {
        this.callback = this.navParams.get("callback");
        console.log('callback de hello:  ' + this.callback);
    };
    DetailssssPage.prototype.ionViewWillLeave = function () {
        var _this = this;
        console.log('6 - ¿Estás seguro que quieres dejar la página?.');
        if (!this.clientenuevo) {
            var tarifa = {
                ok: this.clientenuevo,
                auto: this.auto
            };
            if (this.callback) {
                this.callback(tarifa).then(function () {
                    _this.navCtrl.pop();
                });
            }
        }
        /*
            this.navCtrl.pop().then(() => {
            // this.navParams.get('callback')(tarifa);
            });
            */
    };
    // muestra los terminos para registrarse
    DetailssssPage.prototype.condiciones = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Política de privacidad!</strong>",
                            message: 'El presente Política de Privacidad establece los términos en que nuestro sistema usa y protege la información que es proporcionada por sus usuarios. Esta compañía está comprometida con la seguridad de los datos de sus usuarios, los datos que provea se emplearan de acuerdo con los términos de este documento. Sin embargo esta Política de Privacidad puede cambiar con el tiempo o ser actualizada por lo que le recomendamos y enfatizamos revisar continuamente esta página para asegurarse que está de acuerdo con dichos cambios.   </br>' +
                                '<br><br><strong>¿Qué tipo de información recolectamos?</strong><br> ' +
                                'Para el correcto funcionamiento, estos son algunos de los datos que recolectamos: ' +
                                '<br><br><strong>Ubicación</strong><br> ' +
                                'Tomamos los datos de sus coordenadas GPS para garantizar que se encuentre en un radio cercano a algún taxista y este pueda recogerle en el origen de su viaje. ' +
                                '<br><br><strong>Datos de registro </strong><br>' +
                                'No intercambiamos o comercializamos con sus datos de registro con terceros,  pero es posible que reciba ofertas de nuestros productos por otras vías distintas a la  Aplicación como correo electrónico,  WhatsApp  o  Telegram. ' +
                                '<br><br><strong>Cookies</strong><br> ' +
                                'Nuestro servicio no utiliza «cookies» ' +
                                '<br><br><strong>Proveedores de servicio </strong><br>' +
                                'Puedo emplear a empresas e individuos de terceros debido a las siguientes razones: ' +
                                '•	Para facilitar nuestro servicio; ' +
                                '•	Para proporcionar el Servicio en nuestro nombre; ' +
                                '•	Para ayudarnos a analizar cómo se utiliza nuestro Servicio. ' +
                                'Deseo informar a los usuarios de este Servicio que estos terceros No tienen acceso a su Información personal como número de teléfono, nombre, etc. ' +
                                '<br><br><strong>Privacidad de los niños</strong><br> ' +
                                'Estos Servicios no se dirigen a ninguna persona menor de 13 años. No recopilo a sabiendas información de niños menores de 13 años. En el caso de que descubra que un niño menor de 13 años me ha proporcionado información personal, la borro inmediatamente de nuestros servidores. Si usted es padre o tutor y sabe que su hijo nos ha proporcionado información personal, comuníquese conmigo para que pueda realizar las acciones necesarias. ' +
                                '<br><br><strong>¿Qué hacemos con los datos que recolectamos? </strong><br>' +
                                'Estos datos se recolectan para obtener un feedback de que es lo que quieren nuestros usuarios y así poder mejorar brindando las correctas mejoras en cada actualización. '
                            // +'Para ello, no basta con desinstalar la aplicación, es necesario eliminar su usuario primero en el panel de administración de la App (botón rojo ubicado en la parte inferior).  En caso de pérdida del teléfono, usted debe notificar a los administradores de la app por cualquiera de las vías disponibles: redes sociales, correo electrónico y canales de comunicación dentro de la app para inhabilitar su cuenta de manera inmediata.   </br>'
                            // +' Nuestra plataforma informática no realiza procesos que permitan conocer su posición o algún otro dato suyo sin su consentimiento. Solo si usted oprime el botón de VERSE EN EL MAPA es posible saber su localización en ese preciso momento, la cual además no es compartida con terceros, a menos que haya elegido ser un mensajero o negocio, quienes aparecen visibles en un mapa público para todos los usuarios de la App con la información de contacto que consignó en la suscripción. Si usted decide no verse en el mapa, oprima el botón SALIR DEL MAPA y dejará de transmitir sus coordenadas GPS dentro de la app. </br>'
                            // +' Nuestra plataforma informática establece y garantiza la comunicación entre compradores y vendedores pero no elabora los productos o presta directamente un servicio a domicilio, en caso de insatisfacción, usted debe notificar a los administradores del sistema, pero la tramitación de su queja debe hacerla directamente con los  negocios o mensajeros que brindan el servicio a domicilio, quienes son los encargados de ofrecerle una respuesta o indemnización. Si identifica algún hecho punitivo o de mal uso del programa por parte de algún usuario, además de establecer usted la denuncia ante las autoridades competentes, comuníquelo a los gestores de la app para su investigación y determinar si se suspende o inhabilita definitivamente al usuario implicado. No nos responsabilizamos por daños que puedan ocurrir por un mal servicio de mensajeros o negocios o por un uso indebido de la App.' 
                            ,
                            buttons: [
                                {
                                    text: 'Salir',
                                    role: 'cancel',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                        _this.condi = false;
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //formulario taxista
    DetailssssPage.prototype.save = function () {
        var _this = this;
        this.pageScrollers1();
        if (this.id == "000000") {
            this.presentToast4('Su versión de Android es superior a 9 usted no puede registrarse como usuario para estar disponible en el mapa pero si utilizar el resto de las funcionalidades de la aplicación ');
        }
        else {
            if (!this.myForm.valid) {
                if (this.vnombre2 == null) {
                    this.presentToast4('Debe escribir un nombre ');
                }
                else {
                    if (this.vtelefono2 == null) {
                        this.presentToast4('Debe escribir un número de teléfono ');
                    }
                    else if (this.vcorreo2 == null) {
                        this.presentToast4('Debe escribir una contraseña ');
                    }
                }
                // this.presentToast4('Error en los datos ');
            }
            else {
                //this.presentToast4('Todo bien' + this.id);             
                //console.log("success!")
                this.eschofer = false;
                this.emerge = true;
                this.emerge2 = false;
                this.eschofer = false;
                //api para crear persona
                var i = { "idt": this.vcorreo2,
                    "nam": this.vnombre2,
                    "tel": this.vtelefono2,
                };
                //  console.log(i);
                this.gasolineraService.createPersonaClient(i).then(function (result) {
                    // console.log("result : "+ result);
                    // let user = JSON.parse(result[0])
                    // console.log("user : "+user);
                    if (result[0].idt == _this.vcorreo2) {
                        _this.storage.set('idt', _this.vcorreo2);
                        _this.clientenuevo = true;
                        _this.presentToast4('Gracias por inscribirse');
                        // this.revisar2()
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__inicio_inicio__["a" /* InicioPage */]);
                    }
                    else {
                        _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                    }
                }, function (err) {
                    console.log(err);
                });
                //api
            }
        }
    };
    //formulario taxista
    DetailssssPage.prototype.save2 = function () {
        var _this = this;
        this.pageScrollers1();
        if (this.id == "000000") {
            this.presentToast4('Su versión de Android es superior a 9 usted no puede registrarse como usuario para estar disponible en el mapa pero si utilizar el resto de las funcionalidades de la aplicación ');
        }
        else {
            if (!this.myForm.valid) {
                this.presentToast4('Error en los datos ');
            }
            else {
                //this.presentToast4('Todo bien' + this.id);             
                //console.log("success!")
                this.eschofer = false;
                this.emerge = true;
                this.emerge2 = false;
                this.eschofer = false;
                //api para crear persona
                var i = {
                    "idt": this.vcorreo2,
                    "nam": this.vnombre2,
                    "lat": "23.08851803",
                    "lng": "-82.49170739",
                    "est": true,
                    // "cha":"no",
                    // "mod":"no",
                    "tel": this.vtelefono2,
                    "cor": "",
                    "eda": "0",
                    //"lla":0,
                    "apr": false,
                    "ini": "Período de Prueba",
                    "ven": "Período de Prueba",
                    // "tax":false,
                    "dem": false,
                    // "created_at":"2019-11-30 00:02:10",
                    // "updated_at":"2019-11-30 00:02:10"  
                    "res": this.res,
                };
                console.log(i);
                this.gasolineraService.createPersona(i).then(function (result) {
                    console.log(result);
                    if (result['hello']) {
                        _this.clientenuevo = true;
                        //  this.clientenuevo2=true
                        // this.presentToast4('Gracias por inscribirse');  
                        /*
                        let tarifa = {
                          ok: true,
                          clientenuevo: true
                        }
                              
                        this.navCtrl.pop().then(() => {
                          this.navParams.get('callback')(tarifa);
                        });
                        
           */
                        var user = JSON.parse(result['user']);
                        console.log("user : " + user);
                        for (var _i = 0, user_1 = user; _i < user_1.length; _i++) {
                            var carro = user_1[_i];
                            console.log("id del user: " + carro.id);
                            //  this.presentToast4("llego al usuario 2" + this.id)
                            _this.existe = true;
                            if (carro.pri) {
                                if (carro.dem) {
                                    _this.chofer = true;
                                }
                                _this.carro = carro;
                                _this.auto = carro;
                                _this.contadorid = carro.id;
                                _this.resultado = carro.nam;
                                _this.existetel = true; //para transmitir los datos y cambiar de vista
                                _this.global.global1 = true;
                                _this.vclaveprimaria = carro.id;
                                _this.vnombre = carro.nam;
                                _this.vtelefono = carro.tel;
                                // this.vchapa=response.cha
                                // this.vmodelo=response.mod
                                _this.vcorreo = carro.cor;
                                _this.vedad = carro.eda;
                                _this.estaxista = false; // true si el usuario es taxista
                                _this.esdemo = carro.dem; // true cuando deja de estar en demo
                                _this.aprovado = carro.apr;
                                _this.vinicio = carro.ini;
                                // this.vfechapago=carro.ven 
                                _this.bloquear = carro.blo;
                                //objeto con los datos de la persona 
                                _this.auto3 = carro;
                                var carrito = {
                                    id: carro.id,
                                    idt: carro.idt,
                                    nombre: carro.nam,
                                    telefono: carro.tel,
                                    android: false,
                                    ln: carro.lsn,
                                    pri: carro.pri
                                };
                                _this.comp.push(carrito);
                                _this.global.compglob = _this.comp;
                                console.log(_this.comp);
                                _this.cliente = true;
                                _this.existe = true;
                            }
                            if (_this.existetel) {
                                console.log("regresar...");
                                _this.navCtrl.pop();
                            }
                        }
                    }
                    else {
                        _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                    }
                }, function (err) {
                    console.log(err);
                });
                //api
            }
        }
    };
    DetailssssPage.prototype.personal = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: 'Información',
                            // subTitle: 'Alert subtitle...',
                            enableBackdropDismiss: true,
                            message: 'Seleccione el tipo de usuario  ',
                            buttons: [
                                {
                                    text: 'ACEPTAR',
                                    handler: function (data) {
                                        console.log(data);
                                        // this.presentToast4('OK clicked. Data -> ' + data ); 
                                        switch (data) {
                                            case "1":
                                                //    this.nombrenegocio= "	Alimentos Preparados";
                                                _this.fondo = false;
                                                _this.revisarC();
                                                break;
                                            case "2":
                                                //  this.nombrenegocio= "	Agro-Mercado";
                                                _this.fondo = false;
                                                _this.revisarG();
                                                break;
                                            /*       case "3":
                                                    this.nombrenegocio= "	Belleza";
                                                    break;
                                                    case "4":
                                                    this.nombrenegocio= "	Del hogar";
                                                    break; */
                                            case "5":
                                                // this.nombrenegocio= "	Transporte"; 
                                                _this.fondo = false;
                                                _this.revisarCh();
                                                break;
                                            case "6":
                                                //this.nombrenegocio= "	Mascotas";
                                                _this.fondo = false;
                                                // this.verMensajes2men()
                                                _this.revisarA();
                                                break;
                                            /*  case "7":
                                              this.nombrenegocio= "	Fotos";
                                              break;
                                              case "8":
                                              this.nombrenegocio= "	Modista sastre";
                                              break;
                                              case "9":
                                              this.nombrenegocio= "	Empleada domestica";
                                              break;
                                              case "10":
                                              this.nombrenegocio= "	Artesanos";
                                              break;
                                              case "11":
                                              this.nombrenegocio= "	Clases";
                                              break;
                                              case "12":
                                              this.nombrenegocio= "	Reparaciones ";
                                              break;
                                              case "13":
                                              // this.nombrenegocio= "	Otros";
                                              break;*/
                                            default:
                                        }
                                        //this.nombrenegocio=JSON.stringify(data.name)
                                    },
                                    role: ''
                                },
                                {
                                    text: 'CANCELAR',
                                    handler: function (data) {
                                        // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                        data = 13;
                                        // this.negocio=data // para A en save
                                        // this.nombrenegocio= " Otros";
                                        //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                        //value: '13'
                                    },
                                    role: 'cancel'
                                }
                            ],
                            inputs: [
                                {
                                    type: 'radio',
                                    id: 'opt1',
                                    name: 'opt1',
                                    'label': 'Cliente',
                                    value: '1',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt2',
                                    name: 'opt2',
                                    'label': 'Gestor',
                                    value: '2',
                                    'checked': false
                                },
                                /* {
                                  type: 'radio',
                                  id: 'opt3',
                                  name: 'opt3',
                                  'label': '	Belleza',
                                  value: '3',
                                  'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt4',
                                name: 'opt4',
                                'label': '	Del hogar',
                                value: '4',
                                'checked': false
                                }, */
                                {
                                    type: 'radio',
                                    id: 'opt5',
                                    name: 'opt5',
                                    'label': '	Chofer',
                                    value: '5',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt6',
                                    name: 'opt6',
                                    'label': '	Admin',
                                    value: '6',
                                    'checked': false
                                },
                            ]
                        })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssssPage.prototype.revisarC = function () {
        var _this = this;
        this.users4 = [];
        this.checked2 = true;
        this.totalCliente = 0;
        this.mensajeo = true;
        this.textos = false;
        this.total = 0;
        this.totalCliente = 0;
        this.porciento = 0;
        //revisar conexion a internet
        this.gasolineraService.revisarC()
            .then(function (result) {
            console.log("llegó: " + result);
            _this.users5 = result;
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.dem) {
                    _this.totalCliente++;
                }
            }
            if (result == 200) {
                // this.presentToast4('Pedido realizado');  
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    DetailssssPage.prototype.revisarCh = function () {
        var _this = this;
        this.users4 = [];
        this.checked2 = true;
        this.mensajeo = true;
        this.textos = false;
        this.total = 0;
        this.porciento = 0;
        //revisar conexion a internet
        this.totalCliente = 0;
        this.gasolineraService.revisarCh()
            .then(function (result) {
            console.log("llegó: " + result);
            _this.users5 = result;
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.dem) {
                    _this.totalCliente++;
                }
            }
            if (result == 200) {
                //this.presentToast4('Pedido realizado');  
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    DetailssssPage.prototype.revisarG = function () {
        var _this = this;
        this.users4 = [];
        this.checked2 = true;
        this.mensajeo = true;
        this.textos = false;
        this.total = 0;
        this.porciento = 0;
        //revisar conexion a internet
        this.totalCliente = 0;
        this.gasolineraService.revisarG()
            .then(function (result) {
            console.log("llegó: " + result);
            _this.users5 = result;
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.btn) {
                    _this.totalCliente++;
                }
            }
            if (result == 200) {
                // this.presentToast4('Pedido realizado');  
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    DetailssssPage.prototype.revisarA = function () {
        var _this = this;
        this.users4 = [];
        this.checked2 = true;
        this.mensajeo = true;
        this.textos = false;
        this.total = 0;
        this.porciento = 0;
        //revisar conexion a internet
        this.totalCliente = 0;
        this.gasolineraService.revisarA()
            .then(function (result) {
            console.log("llegó: " + result);
            _this.users5 = result;
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.btn) {
                    _this.totalCliente++;
                }
            }
            if (result == 200) {
                // this.presentToast4('Pedido realizado');  
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    DetailssssPage.prototype.openDialogo3 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'Usted va a marcar el pedido como pagado al gestor ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    // 
                                    handler: function (blah) {
                                        _this.what5(carro);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //confirmacion despues de ver el mapa
    DetailssssPage.prototype.what5 = function (carro) {
        var _this = this;
        var i = { "id": carro.id,
        };
        this.gasolineraService.createPedidoGestor(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido liquidado ');
                carro.esp = true;
                _this.porciento = +(_this.porciento - parseFloat(carro.mensajeprincipal)).toFixed(2);
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    //saldo al gestor
    DetailssssPage.prototype.openDialogo4 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        alert = this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'Ingrese el saldo del chofer ',
                            inputs: [
                                {
                                    name: 'Saldo',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono); 
                                        console.log(Number.isInteger(parseInt(data.Saldo)));
                                        if (!Number.isInteger(parseInt(data.Saldo))) {
                                            _this.presentToast4("Debe escribir un número");
                                        }
                                        else {
                                            _this.saldo = +(carro.eda);
                                            _this.saldo = +(_this.saldo + parseFloat(data.Saldo)).toFixed(2);
                                            //carro.eda = this.saldo 
                                            _this.what6(carro);
                                        }
                                        // 
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert.present()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //confirmacion despues de ver el mapa
    DetailssssPage.prototype.what6 = function (carro) {
        var _this = this;
        var i = {
            "id": carro.id,
            "nam": carro.nam,
            "est": carro.est,
            "tel": carro.tel,
            "cor": carro.cor,
            "eda": this.saldo,
            "dem": carro.dem,
        };
        // carro.eda = this.saldo 
        console.log(i);
        this.gasolineraService.createPedidoSaldo(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                carro.eda = _this.saldo;
                _this.presentToast4('Puesto nuevo saldo ');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetailssssPage.prototype.personalTransfor = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: 'Convertir cliente',
                            // subTitle: 'Alert subtitle...',
                            enableBackdropDismiss: true,
                            message: 'Seleccione el role  ',
                            buttons: [
                                {
                                    text: 'ACEPTAR',
                                    handler: function (data) {
                                        console.log(data);
                                        // this.presentToast4('OK clicked. Data -> ' + data ); 
                                        switch (data) {
                                            case "1":
                                                //    this.nombrenegocio= "	Alimentos Preparados";
                                                _this.what7(carro);
                                                // this.revisarC()
                                                break;
                                            case "2":
                                                //  this.nombrenegocio= "	Agro-Mercado";
                                                _this.what8(carro);
                                                // this.revisarG()
                                                break;
                                            /*       case "3":
                                                    this.nombrenegocio= "	Belleza";
                                                    break;
                                                    case "4":
                                                    this.nombrenegocio= "	Del hogar";
                                                    break; */
                                            case "5":
                                                // this.nombrenegocio= "	Transporte"; 
                                                //  this.revisarCh()
                                                break;
                                            case "6":
                                                //this.nombrenegocio= "	Mascotas";
                                                //this.verMensajes2men()
                                                break;
                                            /*  case "7":
                                              this.nombrenegocio= "	Fotos";
                                              break;
                                              case "8":
                                              this.nombrenegocio= "	Modista sastre";
                                              break;
                                              case "9":
                                              this.nombrenegocio= "	Empleada domestica";
                                              break;
                                              case "10":
                                              this.nombrenegocio= "	Artesanos";
                                              break;
                                              case "11":
                                              this.nombrenegocio= "	Clases";
                                              break;
                                              case "12":
                                              this.nombrenegocio= "	Reparaciones ";
                                              break;
                                              case "13":
                                              // this.nombrenegocio= "	Otros";
                                              break;*/
                                            default:
                                        }
                                        //this.nombrenegocio=JSON.stringify(data.name)
                                    },
                                    role: ''
                                },
                                {
                                    text: 'CANCELAR',
                                    handler: function (data) {
                                        // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                        data = 13;
                                        // this.negocio=data // para A en save
                                        // this.nombrenegocio= " Otros";
                                        //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                        //value: '13'
                                    },
                                    role: 'cancel'
                                }
                            ],
                            inputs: [
                                {
                                    type: 'radio',
                                    id: 'opt1',
                                    name: 'opt1',
                                    'label': 'Chofer',
                                    value: '1',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt2',
                                    name: 'opt2',
                                    'label': 'Gestor',
                                    value: '2',
                                    'checked': false
                                },
                            ]
                        })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssssPage.prototype.what2 = function (carro) {
        // console.log(this.nego.nam);
        // console.log(this.nego.ini);
        //let message = this.vnombre +" ha realizado un pedido DE PRUEBA al negocio para "+this.vdireccion;
        this.socialSharing.shareViaWhatsAppToReceiver(carro.tel, '', '').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    DetailssssPage.prototype.what7 = function (carro) {
        var _this = this;
        var i = {
            "id": carro.id,
            "nam": carro.nam,
            "est": carro.est,
            "tel": carro.tel,
            "cor": carro.cor,
            "eda": 0,
            "dem": true,
        };
        // carro.eda = this.saldo 
        console.log(i);
        this.gasolineraService.createClientChof(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                carro.eda = 0;
                carro.dem = true;
                _this.presentToast4('Usuario puesto como chofer ');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetailssssPage.prototype.what8 = function (carro) {
        var i = {
            "id": carro.id,
            "idt": carro.idt,
            "nam": carro.nam,
            "lat": "23.08851803",
            "lng": "-82.49170739",
            "est": true,
            "cha": "Venta de productos",
            "mod": "no",
            "tel": carro.tel,
            "cor": carro.cor,
            "eda": "1000",
            //"lla":0,
            "apr": false,
            "ini": carro.tel,
            "ven": "Período de Prueba",
            "tax": false,
            "dem": true,
            "neg": "1",
            "tar": "no",
            "fot": 70,
            // "created_at":"2019-11-30 00:02:10",
            // "updated_at":"2019-11-30 00:02:10"
            "ntf": false,
            "res": carro.res,
        };
        console.log("variable : " + i);
        var result = this.gasolineraService.create(i); //api
        console.log("resultado : " + result);
    };
    DetailssssPage.prototype.borrargestor = function (carro) {
        var i = {
            "id": carro.id,
        };
        var result = this.gasolineraService.delete(i);
    };
    DetailssssPage.prototype.borrarchofer = function (carro) {
        var i = {
            "id": carro.id,
        };
        var result = this.gasolineraService.deleteCh(i);
    };
    // borra a un chofer
    DetailssssPage.prototype.valorarchof = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '¿Usted va a borrar al chofer?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        _this.borrarchofer(carro);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    // borra a un gestor
    DetailssssPage.prototype.valorargest = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '¿Usted va a borrar al gestor?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        _this.borrargestor(carro);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssssPage.prototype.getDataPedidos = function () {
        this.checked = false;
        this.carr = false;
        this.carr2 = !this.carr2;
        this.checked2 = false;
        this.detalles = false;
        this.cards = true;
        this.loadingService.presentLoading4();
        var id = this.carro.id;
        console.log("id " + id);
        /*  this.gasolineraService.getDataPedidos(id).then((result) => {
        
           let users2 = result;
           this.users4 = result;
      
           for (let carro of users2) {
             console.log(carro.id)
            
             if(this.carro.id==carro.idcl){
              //ç this.cantUsuarios++
              this.hayped2=true
              }
           }
      
           if(!this.hayped2){
            this.presentToast4('Usted no tiene pedidos');
          }
      
             this.loadingService.dismissLoading();
          }, err => {
             console.log(err);
             
             this.loadingService.presentError();
             this.loadingService.dismissLoading();
             this.vistanored = 'nored';
         });
         */
    };
    DetailssssPage.prototype.verMensajes4 = function () {
        var _this = this;
        this.checked = false;
        this.carr = false;
        this.carr2 = !this.carr2;
        this.checked2 = false;
        this.detalles = false;
        this.cards = true;
        console.log(this.carr);
        console.log(this.carro.idt);
        if (this.carr2) {
            this.loadingService.presentLoading();
            this.gasolineraService.getMensajesNego3(this.carro.idt).subscribe(function (response) {
                _this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                console.log(response);
                // this.cantUsuarios=0
                //this.buscaper2=false      
                for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    // console.log("idtc : "+carro.idtc)
                    if (_this.carro.idt == carro.idtc) {
                        //ç this.cantUsuarios++ 
                        _this.hayped2 = true;
                    }
                }
                _this.loadingService.dismissLoading();
                if (!_this.hayped2) {
                    _this.presentToast4('Usted no tiene pedidos');
                }
                // console.log("hay pedido 1: "+this.hayped)
            }, function (error) {
                _this.loadingService.presentError();
                _this.loadingService.dismissLoading();
            });
        }
        //this.hayped=true
        console.log("hay pedido 2: " + this.hayped);
    };
    DetailssssPage.prototype.revisarCh2 = function () {
        var _this = this;
        this.fondo = true;
        this.mensajeo = true;
        this.textos = false;
        this.total = 0;
        this.porciento = 0;
        this.users4 = [];
        this.checked2 = true;
        //revisar conexion a internet
        this.total = 0;
        // this.porciento=0
        this.gasolineraService.revisarCh2()
            .then(function (result) {
            console.log("llegó: " + result);
            _this.users5 = result;
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.total = +(_this.total + parseFloat(carro.eda)).toFixed(2);
            }
            // this.total=+(this.porciento*10).toFixed(2)
            if (result == 200) {
                //this.presentToast4('Pedido realizado');  
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    DetailssssPage.prototype.newaccount = function () {
        this.vnombre2 = null;
        this.vtelefono2 = null;
        this.vcorreo2 = null;
        this.crearusuario = true;
        this.restablecer = false;
    };
    DetailssssPage.prototype.newaccount2 = function () {
        this.vnombre2 = null;
        this.vtelefono2 = null;
        this.vcorreo2 = null;
        this.crearusuario = false;
        this.restablecer = false;
    };
    DetailssssPage.prototype.recuperar = function () {
        this.vnombre2 = null;
        this.vtelefono2 = null;
        this.vcorreo2 = null;
        this.restablecer = true;
    };
    DetailssssPage.prototype.whatRecu = function () {
        var _this = this;
        var myId = __WEBPACK_IMPORTED_MODULE_15_uuid__["a" /* v4 */]();
        this.myId2 = myId.substring(0, 6);
        if (!this.myForm5.valid) {
            if (this.vtelefono3 == null) {
                this.presentToast4('Debe escribir un número de teléfono ');
            }
        }
        else {
            var tel = this.vtelefono3;
            this.gasolineraService.getDataPersona10(tel).then(function (result) {
                var users2 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
                // carro.toString() console.log("resultado: "+result.body)
                // this.presentToast4("status: "+ result.status)
                console.log("users2 data: " + JSON.stringify(users2));
                var a = JSON.stringify(users2);
                if (a == "[]") {
                    console.log("esta vacio: ");
                    _this.presentToast4("Por favor revise bien sus datos.");
                }
                else {
                    var _loop_1 = function (carro) {
                        _this.user2 = carro;
                        if (carro.tel == _this.vtelefono3) {
                            // this.presentToast4("El usuario existe.")
                            _this.idcopia = carro.idcopia;
                            console.log(_this.myId2.substring(0, 6) + " " + _this.vtelefono3);
                            var timestamp = new Date();
                            var today_1 = timestamp.getFullYear() + '-' + ('0' + (timestamp.getMonth() + 1)).slice(-2) + '-' + ('0' + timestamp.getDate()).slice(-2);
                            console.log(today_1);
                            console.log('Date en string ' + timestamp); //to see the object
                            // this.storage.set('con', 0); 
                            _this.storage.get('date').then(function (val) {
                                console.log('Your date is', val);
                                if (val != null) {
                                    if (val == today_1) {
                                        _this.storage.set('con', _this.con++);
                                        _this.storage.get('con').then(function (val2) {
                                            console.log('Your counter is', val2);
                                            if (val2 > 2) {
                                                console.log('Your counter is overload');
                                                // mensaje
                                                _this.presentToast4(" Ha alcanzado el máximo de envíos.");
                                            }
                                            else {
                                                // this.storage.set('date', today);
                                                console.log('Your counter is normal state 3');
                                                // api
                                                _this.recuperacion(_this.myId2);
                                            }
                                        });
                                    }
                                    else {
                                        console.log('Your counter is normal state 2');
                                        _this.storage.set('date', today_1);
                                        _this.storage.set('con', _this.con++);
                                        // api  
                                        _this.recuperacion(_this.myId2);
                                    }
                                }
                                else {
                                    console.log('Your counter is normal state 1');
                                    _this.storage.set('date', today_1);
                                    _this.storage.set('con', _this.con++);
                                    //api
                                    _this.recuperacion(_this.myId2);
                                }
                            });
                        }
                    };
                    for (var _i = 0, users2_2 = users2; _i < users2_2.length; _i++) {
                        var carro = users2_2[_i];
                        _loop_1(carro);
                    }
                }
            }, function (err) {
                console.log(err);
                _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            });
        }
    };
    DetailssssPage.prototype.crear = function () {
        var _this = this;
        if (!this.myForm7.valid) {
            if (this.vtelefono2 == null) {
                this.presentToast4('Debe tener más de 6 caracteres ');
            }
        }
        else {
            var i = {
                "idt": this.vtelefono2,
            };
            console.log(i);
            var id_1 = this.idcopia;
            this.gasolineraService.updateCliente(i, id_1).then(function (result) {
                console.log(result);
                if (result[0].id == id_1) {
                    _this.presentToast4('Los datos han sido actualizados');
                    var user = _this.user2;
                    var id_2 = _this.vtelefono2; // (idt)
                    _this.storage.set('idt', id_2);
                    _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__taxis_taxis__["a" /* TaxisPage */], { user: user, id: id_2 });
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
    };
    DetailssssPage.prototype.comprobar = function () {
        if (!this.myForm6.valid) {
            if (this.vtelefono2 == null) {
                this.presentToast4('Debe escribir un número de teléfono ');
            }
        }
        else {
            if (this.myId2 == this.vtelefono2) {
                this.presentToast4('Código correcto ');
                this.vtelefono2 = null;
                this.restaurar = true;
            }
            else {
                this.presentToast4('El código es incorrecto ');
            }
        }
    };
    DetailssssPage.prototype.recuperacion = function (code) {
        var _this = this;
        //api para crear persona
        var i = {
            "codigo": code.substring(0, 6),
            "tel": this.vtelefono3,
        };
        this.gasolineraService.createSMS(i).then(function (result) {
            // console.log("result : "+ result);     
            // let user = JSON.parse(result[0])
            // console.log("user : "+user);      
            if (result[0].tel == _this.vtelefono3) {
                _this.presentToast4('El SMS puede demorar hasta 5 minutos en recibirse');
                // this.restablecer=false
                _this.restablecer2 = true;
                _this.vtelefono2 = null;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetailssssPage.prototype.openDialogo8 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Salir!",
                            message: '¿Usted desea salir de la aplicación?',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        // console.log('en string '+JSON.stringify(data)); //to see the object
                                        // this.openDialogo7()  
                                        // this.storage.set('idt', '9dd748654');
                                        _this.storage.clear();
                                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__inicio_inicio__["a" /* InicioPage */]);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])('slides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Slides */])
    ], DetailssssPage.prototype, "slides", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */])
    ], DetailssssPage.prototype, "pageTops1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */])
    ], DetailssssPage.prototype, "pageTop", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */])
    ], DetailssssPage.prototype, "pageTop2", void 0);
    DetailssssPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-detailssss',template:/*ion-inline-start:"E:\14\gaso\src\pages\detailssss\detailssss.html"*/'<!--\n\n  Generated template for the DetailssssPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->  \n\n\n\n<ion-header class="border-round2">\n\n  <ion-toolbar  [style.display]="(vistanored === \'nored\')? \'block\': \'none\'" color="danger" no-border-top>   \n\n    <div style="text-align:center">    \n\n      <ion-icon color="light" name="swap"> Revise la conexión a Internet </ion-icon>\n\n    </div>\n\n  </ion-toolbar>\n\n\n\n\n\n  <ion-navbar *ngIf="existe">\n\n     <ion-title *ngIf="existe&&tipuser"> <ion-icon  name="person">  Perfil</ion-icon> </ion-title>  \n\n     <ion-title *ngIf="existe&&!tipuser"><ion-icon  name="person"> ¡Bienvenido a nuestra App!</ion-icon> </ion-title> \n\n    \n\n\n\n\n\n\n\n\n\n     <ion-buttons *ngIf="existe&&cliente" top right round >                \n\n      <button  ion-button outline icon-only round (click)="openDialogo8()"> \n\n        <ion-icon name="exit">  </ion-icon>\n\n      </button>\n\n    </ion-buttons> \n\n    \n\n    <ion-buttons *ngIf="existe&&cliente" top right round >                \n\n      <button  color="danger" ion-button outline icon-only round (click)="openDialogo6()"> \n\n        <ion-icon color="danger" name="trash">  </ion-icon>\n\n      </button>\n\n    </ion-buttons> \n\n\n\n    <ion-buttons *ngIf="existe&&gestor"  top right round>                \n\n      <button ion-button outline icon-only round (click)="Clicked()"> \n\n        <ion-icon name="create">  </ion-icon>\n\n      </button>\n\n    </ion-buttons>\n\n\n\n      <ion-buttons *ngIf="existe&&nego" round>                \n\n        <button ion-button outline icon-only round (click)="verMensajes()"> \n\n          <ion-icon name="create">  </ion-icon>\n\n        </button>\n\n      </ion-buttons>      \n\n\n\n\n\n  </ion-navbar>\n\n\n\n</ion-header> \n\n\n\n<ion-toolbar [style.display]="(!existe)? \'block\': \'none\'" color="primary" no-border-top class="border-round">  \n\n\n\n  <div *ngIf="crearusuario&&!restablecer" style="text-align:center;padding-top: 10px">    \n\n    <ion-title >  Inscripción</ion-title>\n\n  </div>\n\n\n\n  <div *ngIf="!crearusuario&&!restablecer" style="text-align:center;padding-top: 10px">    \n\n    <ion-title >   ¡Bienvenido!</ion-title>\n\n  </div>\n\n\n\n  <div *ngIf="restablecer" style="text-align:center;padding-top: 10px">    \n\n    <ion-title >   Recuperación</ion-title>\n\n  </div>\n\n\n\n</ion-toolbar>\n\n\n\n\n\n<ion-content no-padding>\n\n\n\n  <div *ngIf="!existe"  >             \n\n    <!-- <h2> No está registrado </h2>   style="background-color: black;" -->\n\n    <div   *ngIf="!clientenuevo2" >\n\n      <br>\n\n      <br>\n\n      <br>\n\n      <br>\n\n      <div *ngIf="crearusuario&&!restablecer" style="padding-left: 10px;padding-right: 10px;">\n\n        <ion-icon color="primary" name="alert" >¡Bienvenido!  Esta sección le permitirá inscribirse y administrar su perfil. <br>  Por favor  escriba un número de teléfono válido, de lo contario puede anularse la posibilidad de subscribirse con este dispositivo.  </ion-icon>          \n\n\n\n      </div>\n\n\n\n      <div *ngIf="!crearusuario&&!restablecer" style="padding-left: 10px;padding-right: 10px;">\n\n        <ion-icon color="primary" name="alert" > Debe iniciar sesión.   Por favor escriba el número de teléfono y la contraseña de su usuario.  </ion-icon>          \n\n\n\n      </div>\n\n\n\n      <div *ngIf="restablecer&&!restablecer2" style="padding-left: 10px;padding-right: 10px;">\n\n        <ion-icon color="primary" name="alert" >Para recuperar la contraseña le enviaremos un código mismo al número de teléfono de la cuenta.  <br> Es un proceso rápido. ¡Le esperamos!  </ion-icon>          \n\n\n\n      </div>\n\n\n\n      <div *ngIf="restablecer&&restablecer2" style="padding-left: 10px;padding-right: 10px;">\n\n\n\n        <div *ngIf="!restaurar" >\n\n          <ion-icon color="primary" name="alert" >Escriba el mismo el código recibido en el SMS y toque en comprobar la identidad.  </ion-icon>          \n\n\n\n        </div>  \n\n        <div *ngIf="restaurar" >\n\n          <ion-icon color="primary" name="alert" >Escriba la contraseña para su usuario y toque en guardar.  </ion-icon>          \n\n\n\n        </div>\n\n\n\n      </div>\n\n\n\n      <br>\n\n\n\n      <div *ngIf="!restaurar" >\n\n\n\n              <!-- Formulario para login  -->\n\n              <form *ngIf="restablecer&&restablecer2" [formGroup]="myForm6" style="padding-left: 20px;padding-right: 20px;">\n\n         \n\n\n\n                \n\n                  <div  class="popupCustom"> \n\n                    <!-- <ion-icon name="call">  Teléfono:</ion-icon>  -->\n\n                    <ion-input color="dark"  placeholder="Código"  formControlName="telefono" type="text"  [(ngModel)]="vtelefono2" [class.invalid]="!myForm6.controls.telefono.valid  && (myForm6.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n                  </div>\n\n        \n\n                  <ion-item class="popupCustom" *ngIf="!myForm6.controls.telefono.valid  && (myForm6.controls.telefono.dirty || submitAttempt)">\n\n                    <p>Por favor escriba el código recibido por SMS.</p>\n\n                </ion-item>   \n\n                  \n\n                \n\n            <br>     \n\n          </form>\n\n        \n\n        </div> \n\n\n\n        \n\n          <div *ngIf="restaurar" >\n\n                        \n\n              <!-- Formulario para login  -->\n\n              <form  [formGroup]="myForm7" style="padding-left: 20px;padding-right: 20px;">\n\n                            \n\n                  <div  class="popupCustom"> \n\n                    <!-- <ion-icon name="call">  Teléfono:</ion-icon>  -->\n\n                    <ion-input color="dark"  placeholder="Contraseña nueva"  formControlName="telefono" type="text"  [(ngModel)]="vtelefono2" [class.invalid]="!myForm7.controls.telefono.valid  && (myForm7.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n                  </div>\n\n\n\n                  <ion-item class="popupCustom" *ngIf="!myForm7.controls.telefono.valid  && (myForm7.controls.telefono.dirty || submitAttempt)">\n\n                    <p>La contraseña debe tener mas de 6 digitos.</p>\n\n                  </ion-item>   \n\n                    \n\n              \n\n                <br>     \n\n              </form>\n\n        \n\n          </div>\n\n\n\n        <!-- Formulario para login  -->\n\n        <form *ngIf="restablecer&&!restablecer2" [formGroup]="myForm5" style="padding-left: 20px;padding-right: 20px;">\n\n         \n\n          <div  class="popupCustom"> \n\n            <!-- <ion-icon name="call">  Teléfono:</ion-icon>  -->\n\n            <ion-input color="dark"  placeholder="Teléfono"  formControlName="telefono" type="number"  [(ngModel)]="vtelefono3" [class.invalid]="!myForm5.controls.telefono.valid  && (myForm5.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n          </div>\n\n\n\n          <ion-item class="popupCustom" *ngIf="!myForm5.controls.telefono.valid  && (myForm5.controls.telefono.dirty || submitAttempt)">\n\n            <p>Por favor escriba un número de teléfono válido.</p>\n\n        </ion-item> \n\n\n\n          \n\n      <br>     \n\n    </form>\n\n    \n\n\n\n        <!-- Formulario para login  -->\n\n        <form *ngIf="!crearusuario&&!restablecer" [formGroup]="myForm4" style="padding-left: 20px;padding-right: 20px;">\n\n         \n\n          <div  class="popupCustom"> \n\n            <!-- <ion-icon name="call">  Teléfono:</ion-icon>  -->\n\n            <ion-input color="dark"  placeholder="Teléfono"  formControlName="telefono" type="number"  [(ngModel)]="vtelefono2" [class.invalid]="!myForm4.controls.telefono.valid  && (myForm4.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n          </div>\n\n\n\n          <ion-item class="popupCustom" *ngIf="!myForm4.controls.telefono.valid  && (myForm4.controls.telefono.dirty || submitAttempt)">\n\n            <p>Por favor escriba un número de teléfono válido.</p>\n\n        </ion-item> \n\n\n\n        <div  class="popupCustom">\n\n              <ion-input placeholder="Contraseña" formControlName="correo" type="text" [(ngModel)]="vcorreo2" [class.invalid]="!myForm4.controls.correo.valid  && (myForm4.controls.correo.dirty || submitAttempt) "></ion-input>\n\n        </div>\n\n        \n\n      <ion-item class="popupCustom" *ngIf="!myForm4.controls.correo.valid  && (myForm4.controls.correo.dirty || submitAttempt)">\n\n          <p>La contraseña debe tener un mínimo de 6 caracteres.</p>\n\n      </ion-item> \n\n          \n\n      <br>     \n\n    </form>\n\n    \n\n\n\n        \n\n          <!-- Formulario para la inscripcion  -->\n\n          <form *ngIf="crearusuario&&!restablecer" [formGroup]="myForm" style="padding-left: 20px;padding-right: 20px;">\n\n              <div   class="popupCustom"> \n\n                  <!-- <ion-label style="padding: 0px;" color="dark" floating ><ion-icon name="person" >  Nombre:</ion-icon>  </ion-label> -->\n\n                    <ion-input color="dark"  placeholder="Nombre"   formControlName="firstName" type="text"  [(ngModel)]="vnombre2" [class.invalid]="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n              </div>              \n\n\n\n              <ion-item class="popupCustom" *ngIf="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt)">\n\n                <p>Por favor escriba su nombre.</p>\n\n            </ion-item>\n\n            <br>\n\n              <div  class="popupCustom"> \n\n                <!-- <ion-icon name="call">  Teléfono:</ion-icon>  -->\n\n                <ion-input color="dark"  placeholder="Teléfono"  formControlName="telefono" type="number"  [(ngModel)]="vtelefono2" [class.invalid]="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n              </div>\n\n\n\n          <ion-item class="popupCustom" *ngIf="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt)">\n\n              <p>Por favor escriba un número válido.</p>\n\n          </ion-item>\n\n          <br>\n\n            <div  class="popupCustom">\n\n\n\n                  <ion-input placeholder="Contraseña" formControlName="correo" type="text" [(ngModel)]="vcorreo2" [class.invalid]="!myForm.controls.correo.valid  && (myForm.controls.correo.dirty || submitAttempt) "></ion-input>\n\n            </div>\n\n            \n\n          <ion-item class="popupCustom" *ngIf="!myForm.controls.correo.valid  && (myForm.controls.correo.dirty || submitAttempt)">\n\n              <p>La contraseña debe tener un mínimo de 6 caracteres.</p>\n\n          </ion-item> \n\n              \n\n          <br>     \n\n        </form>\n\n        \n\n          \n\n        <div   style="text-align:center" > \n\n       <!--   <ion-item >\n\n            <ion-label>AnswerDescription</ion-label>\n\n            <ion-checkbox (click)="addValue($event)" [(ngModel)]="checked3"></ion-checkbox>\n\n           </ion-item>\n\n            <ion-label>AnswerDescription</ion-label> -->\n\n        </div>   \n\n\n\n      <div   style="text-align:center" > \n\n\n\n        <ion-buttons *ngIf="!crearusuario&&!restablecer" center >\n\n          <button  ion-button  icon-only round color="primary" [style.display]="visible" (click)="revisar2()"><ion-icon name="person">  Iniciar Sesión</ion-icon></button>\n\n        </ion-buttons>      \n\n       \n\n            \n\n          <ion-buttons *ngIf="crearusuario&&!restablecer" center >\n\n            <button ion-button outline icon-only round color="secondary" [style.display]="visible" (click)="save()"><ion-icon name="person">  Crear Usuario </ion-icon></button>\n\n          </ion-buttons>\n\n\n\n          <ion-buttons *ngIf="restablecer&&!restablecer2" center >\n\n            <button ion-button outline icon-only round color="verde" [style.display]="visible" (click)="whatRecu()"><ion-icon name="send">  Enviar SMS </ion-icon></button>\n\n          </ion-buttons>\n\n\n\n\n\n          <ion-buttons *ngIf="restablecer&&restablecer2" center >\n\n            <div *ngIf="!restaurar" >\n\n              <button ion-button outline icon-only round color="verde" [style.display]="visible" (click)="comprobar()"><ion-icon name="paper">  Comprobar identidad </ion-icon></button>\n\n           \n\n            </div>  \n\n            \n\n            <div *ngIf="restaurar" >\n\n              <button ion-button outline icon-only round color="verde" [style.display]="visible" (click)="crear()"><ion-icon name="document">  Guardar </ion-icon></button>\n\n            \n\n            </div>\n\n      \n\n          </ion-buttons>\n\n        </div>  \n\n\n\n        <div   style="text-align:center" > \n\n          <ion-label (click)="newaccount()" *ngIf="!crearusuario&&!restablecer" color="secondary">¿Es tu primera vez?  <b > Crea una cuenta nueva </b> </ion-label>\n\n          <ion-label (click)="recuperar()" *ngIf="!crearusuario&&!restablecer" color="secondary">¿Olvidaste tu contraseña?  <b>Restablecer contraseña </b>  </ion-label>\n\n          <ion-label (click)="newaccount2()" *ngIf="crearusuario&&!restablecer" color="secondary">¿Ya tienes una cuenta?  <b>Inicia sesión </b> </ion-label>\n\n          <ion-label (click)="newaccount2()" *ngIf="restablecer&&!restablecer2" color="secondary">  <b>Regresar al inico de sesión </b> </ion-label>\n\n          \n\n        </div>\n\n        \n\n        <div   style="text-align:center" > \n\n        \n\n          <ion-label (click)="condiciones()" color="secondary">Política de privacidad</ion-label>\n\n     </div>\n\n\n\n    </div>\n\n\n\n\n\n\n\n  </div>\n\n\n\n             \n\n  <!-- <h2> Es admin </h2> -->\n\n  <ion-content *ngIf="existe" style="width: 100%; height: 50%">    \n\n\n\n    <!-- fin formulario de inscripcion -->\n\n     \n\n      <ion-card class="border-round2" >\n\n\n\n \n\n\n\n\n\n            <ion-row *ngIf="existe"  align-items-center style="padding-left: 2px;padding-right: 2px" > \n\n            <!--  <ion-col  size="4">     \n\n                <div  > \n\n                  <img  src="assets/imgs/personausente.png" style="padding: 0px;" class="imgRedonda">                                                                   \n\n                </div>         \n\n              </ion-col>  -->\n\n\n\n              <ion-col  size="4">            \n\n\n\n                <ion-item  >\n\n                   <ion-icon color="secondary" name="person">  {{vnombre}}</ion-icon> \n\n                </ion-item>\n\n                 \n\n             <!--      <ion-item *ngIf="vcorreo"  >\n\n                    <h4> <ion-icon color="secondary" name="mail"> {{vcorreo}} </ion-icon> </h4>\n\n                  </ion-item> -->\n\n      \n\n              </ion-col>   \n\n              \n\n              <ion-col size="4" *ngIf="existe&&cliente"> \n\n                \n\n                <ion-item  >\n\n                   <ion-icon color="secondary" name="call">  {{vtelefono}} </ion-icon>  \n\n                </ion-item>    \n\n\n\n        \n\n              </ion-col>\n\n\n\n              <ion-col size="4" *ngIf="existe&&cliente"> \n\n\n\n                <ion-buttons  round >                \n\n                  <!-- <button  ion-button outline icon-only round (click)="Clicked()">  -->\n\n                  <button  ion-button class="transparent" color="primary" [round]="true"  class="btn1" (click)="Clicked()">  \n\n                    <ion-icon name="create">  </ion-icon>\n\n                  </button>\n\n                </ion-buttons>                 \n\n        \n\n              </ion-col>\n\n\n\n            </ion-row   > \n\n\n\n\n\n            <ion-row  *ngIf="existe"  align-items-center style="padding-left: 2px;padding-right: 2px"   > \n\n              <ion-col size="4" *ngIf="existe&&cliente"> \n\n\n\n              <div  style="text-align:center" >\n\n                <!-- <button   ion-button outline icon-only round color="secondary" (click)="checked21()">  -->\n\n                  <button  ion-button class="transparent" color="primary" [round]="true"    (click)="checked21()" class="btn1" >\n\n                  <ion-icon  name="basket"> Mis pedidos </ion-icon> \n\n                </button>\n\n              </div>  \n\n\n\n              </ion-col>\n\n\n\n              <ion-col size="4" *ngIf="existe&&cliente"> \n\n\n\n                <div  style="text-align:center" >\n\n                  <!-- <button   ion-button outline icon-only round color="secondary" (click)="checked21()">  -->\n\n                    <button  ion-button class="transparent" color="primary" [round]="true"    (click)="setClaxon()" class="btn1" >\n\n                       <ion-icon *ngIf="this.vclaxon" name="volume-up"> {{vclaxon}} </ion-icon> <ion-icon *ngIf="!this.vclaxon" name="volume-off"> {{vclaxon}}</ion-icon>  \n\n                  </button>\n\n                </div>  \n\n  \n\n                </ion-col>\n\n          </ion-row   > \n\n\n\n\n\n\n\n                  <ion-row  align-items-center  > \n\n                      <ion-col *ngIf="existe&&cliente" size="4">            \n\n                      <!--  <ion-buttons  >                \n\n                          <button color="secondary" ion-button outline icon-only round (click)="Clicked()"> \n\n                            <ion-icon name="create">  </ion-icon>\n\n                          </button>\n\n                        </ion-buttons>  -->        \n\n                      </ion-col> \n\n\n\n                      <ion-col *ngIf="existe&&nego" size="4">            \n\n                      <!--   <ion-buttons  >                \n\n                          <button color="secondary" ion-button outline icon-only round (click)="verMensajes()"> \n\n                            <ion-icon name="create">  </ion-icon>\n\n                          </button>\n\n                        </ion-buttons>   -->        \n\n                      </ion-col>     \n\n\n\n                      <ion-col size="4" *ngIf="existe&&nego">                   \n\n                        <ion-buttons >            \n\n                          <button   ion-button outline icon-only round color="secondary" (click)="verMensajes5()"> \n\n                            <ion-icon name="logo-usd"> </ion-icon><ion-icon name="flag"> </ion-icon>\n\n                          </button>\n\n                        </ion-buttons>                             \n\n                      </ion-col>\n\n\n\n<!--                       <ion-col size="4" *ngIf="existe&&nego">             \n\n                        <ion-buttons >            \n\n                          <button   ion-button outline icon-only round color="secondary" (click)="personal()"> \n\n                            <ion-icon name="people"> </ion-icon>\n\n                          </button>\n\n                        </ion-buttons>    \n\n                      </ion-col>  revisarCh2  newch() -->\n\n\n\n                      <ion-col size="4" *ngIf="existe&&nego">                   \n\n                        <ion-buttons >            \n\n                          <button   ion-button outline icon-only round color="secondary" (click)="listarCl()"> \n\n                            <ion-icon name="people"> </ion-icon>\n\n                          </button>\n\n                        </ion-buttons>                             \n\n                      </ion-col>\n\n        \n\n                      <ion-col size="4" *ngIf="existe&&nego">                   \n\n                        <ion-buttons >            \n\n                          <button   ion-button outline icon-only round color="secondary" (click)="listarCh()"> \n\n                            <ion-icon name="car"> </ion-icon>\n\n                          </button>\n\n                        </ion-buttons>                             \n\n                      </ion-col>\n\n                    \n\n        \n\n        \n\n\n\n                        <!-- <button ion-fab *ngIf="gestor||nego" color="tertiary" (click)= "guardar3()" > <ion-icon name="clipboard"> </ion-icon></button>\n\n            -->\n\n\n\n            \n\n    <!--                   <ion-col size="4" *ngIf="existe&&nego">            \n\n                        <ion-buttons >            \n\n                          <button   ion-button outline icon-only round color="secondary" (click)="verMensajes2men()"> \n\n                            <ion-icon name="clipboard"> Hoy</ion-icon>\n\n                          </button>\n\n                        </ion-buttons>         \n\n                      </ion-col>              \n\n                      \n\n                      <ion-col size="4"  *ngIf="existe&&nego" >            \n\n                        <ion-buttons  >            \n\n                          <button  ion-button outline icon-only round color="secondary" (click)="verMensajes4men()"> \n\n                            <ion-icon name="bookmarks"> Historial</ion-icon>\n\n                          </button>\n\n                        </ion-buttons>         \n\n                      </ion-col>\n\n                        verMensajes4 \n\n    \n\n                      <ion-col size="4" *ngIf="existe&&cliente">            \n\n                        <ion-buttons  >            \n\n                          <button   ion-button outline icon-only round color="secondary" (click)="checked21()"> \n\n                            <ion-icon name="clipboard"> Mis pedidos</ion-icon>\n\n                          </button>\n\n                        </ion-buttons>         \n\n                      </ion-col>-->\n\n\n\n                      <ion-col size="4"  *ngIf="existe&&cliente" >            \n\n                    <!--     <ion-buttons  >            verMensajes2 (pedidos de hoy)\n\n                          <button  ion-button outline icon-only round color="secondary" (click)="verMensajes4()"> \n\n                            <ion-icon name="bookmarks"> Historial</ion-icon>\n\n                          </button>\n\n                        </ion-buttons>  -->        \n\n                      </ion-col>\n\n\n\n\n\n                      <ion-col size="4"  *ngIf="existe&&gestor" >            \n\n                        <ion-buttons  >            \n\n                          <button  ion-button outline icon-only round color="secondary" (click)="verMensajes8(id)"> \n\n                            <ion-icon name="bookmarks"> Historial</ion-icon>\n\n                          </button>\n\n                        </ion-buttons>         \n\n                      </ion-col>\n\n\n\n\n\n                      <ion-col size="4"  *ngIf="existe&&chofer" >  \n\n                        <h1> SALDO : {{ this.saldochof}} CUP</h1>\n\n\n\n                        <ion-buttons  >            \n\n                          <button  ion-button outline icon-only round color="secondary" (click)="verMensajes9(id)"> \n\n                            <ion-icon name="bookmarks"> Historial</ion-icon>\n\n                          </button>\n\n                        </ion-buttons>      \n\n\n\n                      </ion-col>\n\n\n\n                      <ion-col *ngIf="existe&&chofer" size="4">            \n\n                        <ion-buttons  >                \n\n                          <button color="secondary" ion-button outline icon-only round (click)="Clicked()"> \n\n                            <ion-icon name="create">  </ion-icon>\n\n                          </button>\n\n                        </ion-buttons>         \n\n                      </ion-col> \n\n\n\n                  </ion-row>\n\n            \n\n      </ion-card>  \n\n\n\n  </ion-content>\n\n\n\n  \n\n\n\n  <ion-content  *ngIf="existe" no-padding >\n\n\n\n    <ion-scroll scrollX="false" scrollY="true" style="width: 100%; height: 80%">\n\n    \n\n      <div *ngIf="fondo">\n\n        <h1> FONDO TOTAL : {{ this.total}} CUP</h1>\n\n      </div>\n\n    \n\n          <!-- parte para ver los usuarios -->\n\n      <div *ngIf="checked2">\n\n    \n\n        <div *ngIf="!fondo&&users5">\n\n          <h1> EN TOTAL : {{ this.totalCliente}} </h1>\n\n        </div>\n\n    \n\n    \n\n        <div *ngFor="let carro of users5" > \n\n          \n\n          <ion-card  >         \n\n            <!-- <img src="{{product.url}}" style="padding: 0px;width: 50%" class="imgRedonda">     *ngIf="!carro.tax"   -->\n\n            <ion-card-content>\n\n              \n\n                            <div   style="text-align:center" > \n\n                              <div >\n\n    \n\n                                \n\n                                <h2 >  <ion-icon color="energy" name="clipboard"> <b>Número : </b> {{carro.id}} </ion-icon></h2>\n\n                                <div  style="text-align:right" *ngIf="carro.dem&&carro.pri">\n\n                                  <button ion-button outline icon-only round (click)="openDialogo4(carro)"><ion-icon color="energy" name="logo-usd"> <b>Depósito : </b> {{carro.eda}} </ion-icon> </button>                   \n\n                                </div> \n\n                                \n\n                                <div  style="text-align:right" *ngIf="!carro.dem&&carro.pri">\n\n                                  <button ion-button outline icon-only round (click)="personalTransfor(carro)"><ion-icon color="energy" name="shuffle">  </ion-icon> </button>                   \n\n                                </div> \n\n    \n\n    \n\n                                <h2 ><b> <ion-icon  name="person"> </ion-icon> Nombre: </b> {{carro.nam}} </h2> \n\n                                <h2 > <b><ion-icon name="cart"> </ion-icon> Pedidos Cancelados: </b>{{carro.con}}</h2> \n\n                                 \n\n                                \n\n                                <h2> <b><ion-icon name="calendar"> </ion-icon> Fecha Inscripción: </b>{{carro.created_at}}</h2>     \n\n                                <h2> <b><ion-icon name="call"> </ion-icon> Teléfono: </b>{{ carro.tel}}</h2>\n\n    <!--                             <h2 *ngIf="vcorreo"><b><ion-icon  name="mail"> </ion-icon> Correo:</b> {{carro.mail}}</h2>\n\n     -->\n\n                              </div>\n\n                                \n\n                              <!-- borrar chofer o gestor -->\n\n                              <div  style="text-align:left" *ngIf="carro.dem&&carro.pri">\n\n                                <button ion-button outline icon-only round (click)="valorarchof(carro)"><ion-icon color="danger" name="warning"> </ion-icon> </button>                   \n\n                              </div> \n\n                              <div  style="text-align:left" *ngIf="carro.div">\n\n                                <button ion-button outline icon-only round (click)="valorargest(carro)"><ion-icon color="danger" name="warning">  </ion-icon> </button>                   \n\n                              </div> \n\n                              <!-- contactar a chofer o gestor -->\n\n                              <div *ngIf="carro.dem" style="text-align:right" >\n\n                                <button ion-button outline icon-only round (click)="what2(carro)"><ion-icon color="verde" name="logo-whatsapp"> </ion-icon> </button>                   \n\n                              </div>\n\n                            </div>                         \n\n    \n\n                            <ion-row align-items-center  > \n\n                              <ion-col *ngIf="!carro.dem&&carro.pri" size="4">    \n\n                                <div   style="text-align:center" > \n\n                                  <button ion-button outline icon-only round (click)="verMensajes7(carro.idt)"><ion-icon name="cart"> Buscar sus pedidos</ion-icon></button>                   \n\n                                </div>  \n\n                                <!-- <button ion-button outline icon-only round color="verde" (click)="whatp()"><ion-icon name="logo-whatsapp" item-start >  Comunicar</ion-icon> </button> -->                             \n\n                              </ion-col> \n\n                              <ion-col *ngIf="carro.div" size="4">    \n\n                                <div   style="text-align:center" > \n\n                                  <button ion-button outline icon-only round (click)="verMensajes8(carro.idt)"><ion-icon name="cart"> Buscar sus pedidos</ion-icon></button>                   \n\n                                </div>  \n\n                                <!-- <button ion-button outline icon-only round color="verde" (click)="whatp()"><ion-icon name="logo-whatsapp" item-start >  Comunicar</ion-icon> </button> -->                             \n\n                              </ion-col> \n\n                              <ion-col *ngIf="carro.dem&&carro.pri" size="4">    \n\n                                <div   style="text-align:center" > \n\n                                  <button ion-button outline icon-only round (click)="verMensajes9(carro.idt)"><ion-icon name="cart"> Buscar sus pedidos</ion-icon></button>                   \n\n                                </div>  \n\n                                <!-- <button ion-button outline icon-only round color="verde" (click)="whatp()"><ion-icon name="logo-whatsapp" item-start >  Comunicar</ion-icon> </button> -->                             \n\n                              </ion-col> \n\n                          </ion-row>                             \n\n                        \n\n            </ion-card-content>  \n\n          </ion-card> \n\n                              \n\n      \n\n          </div> \n\n      </div>\n\n    \n\n    \n\n        <!-- parte para ver los pedidos -->\n\n        <div>\n\n          <div *ngIf="!checked2">\n\n            <div  *ngIf="!cliente&&!textos">\n\n              <h2 > <b > Total neto=</b> {{total}} CUP  / <b > % Bruto =</b> {{porciento}} CUP </h2>  \n\n            </div>\n\n        \n\n            <div *ngFor="let carro of users4" > \n\n              <ion-card *ngIf="cards" >         \n\n                <!-- <img src="{{product.url}}" style="padding: 0px;width: 50%" class="imgRedonda">        \n\n      \n\n                \n\n                      <div *ngIf="carro.mensaje.substr(-3)==\'USD\'" style="background-color: #00bb2d;text-align:center">               \n\n                                                                    \n\n                        <ion-buttons  >                \n\n                          <button color="secondary" ion-button outline icon-only round  (click)="veruta(carro)"> \n\n                            <ion-icon name="pin"> Destino </ion-icon>\n\n                          </button>\n\n                          \n\n                        </ion-buttons>  \n\n                          \n\n                        </div>\n\n                        <div *ngIf="carro.mensaje.substr(-3)==\'EUR\'" style="background-color: #4B77BE;text-align:center">               \n\n                                                                \n\n                          <ion-buttons  >                \n\n                            <button  color="secondary" ion-button outline icon-only round  (click)="veruta(carro)"> \n\n                              <ion-icon name="pin"> Destino </ion-icon>\n\n                            </button>\n\n                            \n\n                          </ion-buttons>  \n\n                      \n\n                        </div>\n\n                        <div *ngIf="carro.mensaje.substr(-3)==\'CUP\'" style="text-align:center" >               \n\n                                                                    \n\n                          <ion-buttons  >                \n\n                            <button  color="secondary" ion-button outline icon-only round  (click)="veruta(carro)"> \n\n                              <ion-icon name="pin"> Destino </ion-icon>\n\n                            </button>\n\n                            \n\n                          </ion-buttons>  \n\n                          \n\n                        </div>\n\n                -->    \n\n      \n\n                <ion-card-content>\n\n                  <div *ngIf="carro.est==4">\n\n                    <h2> <ion-icon   color="danger" name="checkmark-circle"> <b> Pedido Cancelado </b></ion-icon>   </h2> \n\n                                                      \n\n                  </div> \n\n      \n\n                                <div  style="text-align:center" > \n\n                                            \n\n                                            <ion-icon name="car" color="energy"> Pedido número: <b> {{carro.id}} </b> </ion-icon>\n\n                                            <h2> <b><ion-icon name="calendar"> </ion-icon> Fecha: </b>{{carro.created_at}}</h2> \n\n   \n\n\n\n                                            \n\n                                            <h2><b><ion-icon color="energy" name="done-all"> </ion-icon> Total:</b> {{carro.total}}</h2>  \n\n                                           \n\n                                            <div *ngIf="!cliente">\n\n                                              <h2><b> {{carro.booleano}} % =</b>  {{carro.mensajeprincipal}}</h2>  \n\n                                            </div>\n\n    \n\n                                            \n\n                                            <div *ngIf="!chofer">\n\n                                              <button style="text-align:center" ion-button outline icon-only round (click)="verpedido(carro)"><ion-icon name="cart"> Detalles</ion-icon></button>   \n\n                                            </div>                                    \n\n                                    \n\n                                </div>\n\n                                    \n\n                </ion-card-content>  \n\n              </ion-card>                             \n\n            </div>  \n\n            \n\n    \n\n        </div>\n\n    \n\n      </div>\n\n    \n\n    \n\n      <div  *ngIf="existetel&&textos"  > \n\n                \n\n            <!-- parte de modificar los datos tipo texto -->\n\n            <ion-slides *ngIf="checked&&!btntax" #slides  style="height: 70%">\n\n                          \n\n          <!--         <ion-slide style="width: 100%">\n\n                                    \n\n                        \n\n                                    \n\n                        <ion-item *ngIf="aprovado" color="danger">\n\n                          \n\n                          <h2><b>Nos pondremos en contacto con usted</b> </h2>\n\n                          <h2><b>para activar el servicio.</b> </h2>\n\n                          <h2><b>Gracias por usar nuestra App.</b> </h2>\n\n                        </ion-item> \n\n                        \n\n                        <ion-item  >\n\n                        <h2><ion-icon name="person">  Nombre:</ion-icon> {{vnombre}} </h2>\n\n                        </ion-item>\n\n                        <ion-item  >\n\n                        <h2><ion-icon name="call">  Teléfono:</ion-icon>{{vtelefono}}</h2>\n\n                        </ion-item>      \n\n                        <ion-item  >\n\n                          <h2><ion-icon name="mail">  Correo:</ion-icon>{{vcorreo}}</h2>\n\n                          </ion-item>\n\n            \n\n                        <ion-item  >\n\n                        <ion-buttons right>  \n\n                        <button color="primary" ion-button  [style.display]="visible" ion-button (click)="next()"> \n\n                          <ion-icon  name="create">  Modificar mis datos  </ion-icon></button> \n\n                        </ion-buttons> \n\n                        </ion-item>\n\n      \n\n                    </ion-slide>\n\n            -->         \n\n                    \n\n                    <ion-slide style="width: 100%;height: 0%">\n\n                    <!--  <div style="position: absolute;top: 50%;left: 1px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n                        <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n                      </div>\n\n                      formulario para la actualizacion -->                \n\n                      <div style="right: 15px">               \n\n                        <form [formGroup]="myForm">\n\n                            <ion-item  >\n\n                                <ion-label floating><ion-icon name="person">  Nombre:</ion-icon> </ion-label>\n\n                                  <ion-input  formControlName="firstName" type="text"  [(ngModel)]="vnombre" [class.invalid]="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n                            </ion-item>            \n\n                            <ion-item *ngIf="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt)">\n\n                              <p>Por favor escriba su nombre.</p>\n\n                          </ion-item>\n\n                            <ion-item  > \n\n                                <ion-label floating> <ion-icon name="call">  Teléfono:</ion-icon> </ion-label>\n\n                              <ion-input formControlName="telefono" type="number"  [(ngModel)]="vtelefono" [class.invalid]="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n                          </ion-item>\n\n                          <ion-item *ngIf="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt)">\n\n                              <p>Por favor escriba un número válido.</p>\n\n                          </ion-item>\n\n                          <!-- \n\n                          <ion-item  > \n\n                            <ion-label floating> <ion-icon name="call">  Correo:</ion-icon> </ion-label>\n\n                          <ion-input formControlName="correo" type="text"  [(ngModel)]="vcorreo" [class.invalid]="!myForm.controls.correo.valid  && (myForm.controls.correo.dirty || submitAttempt) "></ion-input>\n\n                      </ion-item>\n\n                      <ion-item *ngIf="!myForm.controls.correo.valid  && (myForm.controls.correo.dirty || submitAttempt)">\n\n                          <p>Por favor escriba un correo válido.</p>\n\n                      </ion-item>\n\n             -->\n\n                        <ion-buttons right>\n\n                              <button   ion-button outline icon-only round color="secondary" [style.display]="visible" ion-button (click)="updateItem()"> <ion-icon name="refresh">  Actualizar Datos </ion-icon> </button>\n\n                        </ion-buttons>\n\n                        </form>\n\n                    </div>\n\n                  <!--    <div *ngIf="checked">\n\n                        <hr/>\n\n                        <br> \n\n                        <button ion-button color="danger" (click)="deleteUsuario()"><ion-icon name="remove">  Eliminar mi Usuario </ion-icon>  </button>\n\n                    </div> -->\n\n                  </ion-slide>                \n\n        \n\n            </ion-slides>\n\n        \n\n        <div  *ngIf="nego"  > \n\n            <!-- poner las tarifas de taxis --> \n\n            <ion-slides *ngIf="!checked&&btntax" #slides  style="height: 70%">\n\n                                  \n\n                      <ion-slide style="width: 100%"> 	\n\n                          <ion-item  >\n\n                          <h2 >  Tarifa según tipo de Vehículo </h2>\n\n                          </ion-item>      \n\n                        \n\n                          <ion-item  >\n\n                          <h2 ><ion-icon name="car">  Básico: </ion-icon> {{this.tarifa.auto}}</h2>\n\n                          </ion-item>\n\n                          <ion-item  >\n\n                          <h2 ><ion-icon name="car">  Moto: </ion-icon> {{this.tarifa.minivan}}</h2>\n\n                          </ion-item>\n\n                          <ion-item  >\n\n                            <h2 ><ion-icon name="car">  Microbús: </ion-icon> {{this.tarifa.microbus}}</h2>\n\n                            </ion-item>\n\n                            <ion-item  >\n\n                              <h2 >  Banderas </h2>\n\n                              </ion-item>      \n\n                            \n\n                              <ion-item  >\n\n                              <h2 ><ion-icon name="flag"> Bandera Básico: </ion-icon> {{this.tarifa.band_auto}}</h2>\n\n                              </ion-item>\n\n                              <ion-item  >\n\n                              <h2 ><ion-icon name="flag"> Bandera Moto: </ion-icon> {{this.tarifa.band_minivan}}</h2>\n\n                              </ion-item>\n\n                              <ion-item  >\n\n                                <h2 ><ion-icon name="flag"> Bandera Microbús: </ion-icon> {{this.tarifa.band_microbus}}</h2>\n\n                                </ion-item>\n\n                                <ion-item  >\n\n                                  <h2 >  Porciento del negocio </h2>\n\n                                  </ion-item> \n\n                                  <ion-item  >\n\n                                    <h2 > % Negocio:  {{this.tarifa.porciento}}</h2>\n\n                                    </ion-item>\n\n      \n\n                          <ion-item  >\n\n                            \n\n                          <ion-buttons right>  \n\n                          <button color="primary" ion-button  [style.display]="visible" ion-button (click)="next()"> \n\n                            <ion-icon  name="create">  Modificar los datos  </ion-icon></button> \n\n                          </ion-buttons> \n\n                          </ion-item>\n\n      \n\n                      </ion-slide>\n\n                      \n\n                      \n\n                      <ion-slide style="width: 100%">\n\n                        <div style="position: absolute;top: 50%;left: 1px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n                          <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n                        </div>\n\n                        <!-- formulario para la actualizacion -->                \n\n                        <div style="right: 15px">               \n\n                          <form [formGroup]="myForm2">\n\n                              <ion-item  >\n\n                                  <ion-label floating><ion-icon name="car">  Básico:</ion-icon> </ion-label>\n\n                                    <ion-input  formControlName="firstName" type="number"  [(ngModel)]="this.tarifa.auto" [class.invalid]="!myForm2.controls.firstName.valid  && (myForm2.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n                              </ion-item>            \n\n                              <ion-item *ngIf="!myForm2.controls.firstName.valid  && (myForm2.controls.firstName.dirty || submitAttempt)">\n\n                                <p>Por favor escriba un número válido.</p>\n\n                            </ion-item>\n\n                              <ion-item  > \n\n                                  <ion-label floating> <ion-icon name="car">  Moto:</ion-icon> </ion-label>\n\n                                <ion-input formControlName="telefono" type="number"  [(ngModel)]="this.tarifa.minivan" [class.invalid]="!myForm2.controls.telefono.valid  && (myForm2.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n                            </ion-item>\n\n                            <ion-item *ngIf="!myForm2.controls.telefono.valid  && (myForm2.controls.telefono.dirty || submitAttempt)">\n\n                                <p>Por favor escriba un número válido.</p>\n\n                            </ion-item>\n\n                              <ion-item  >\n\n                                    <ion-label floating><ion-icon name="car">  Microbús:</ion-icon> </ion-label>\n\n                                    <ion-input formControlName="correo" type="number" [(ngModel)]="this.tarifa.microbus" [class.invalid]="!myForm2.controls.correo.valid  && (myForm2.controls.correo.dirty || submitAttempt) "></ion-input>\n\n                              </ion-item>\n\n                            <ion-item *ngIf="!myForm2.controls.correo.valid  && (myForm2.controls.correo.dirty || submitAttempt)">\n\n                                <p>Por favor escriba un número válido.</p>\n\n                            </ion-item>\n\n                              \n\n                            <br>                  \n\n                              <ion-item  >\n\n                                <ion-label floating><ion-icon name="flag"> Bandera Básico:</ion-icon> </ion-label>\n\n                                  <ion-input  formControlName="bbasico" type="number"  [(ngModel)]="this.tarifa.band_auto" [class.invalid]="!myForm2.controls.bbasico.valid  && (myForm2.controls.bbasico.dirty || submitAttempt) "></ion-input>   \n\n                              </ion-item>            \n\n                              <ion-item *ngIf="!myForm2.controls.bbasico.valid  && (myForm2.controls.bbasico.dirty || submitAttempt)">\n\n                                <p>Por favor escriba un número válido.</p>\n\n                              </ion-item>\n\n                                <ion-item  > \n\n                                    <ion-label floating> <ion-icon name="flag"> Bandera Moto:</ion-icon> </ion-label>\n\n                                  <ion-input formControlName="bconfort" type="number"  [(ngModel)]="this.tarifa.band_minivan" [class.invalid]="!myForm2.controls.bconfort.valid  && (myForm2.controls.bconfort.dirty || submitAttempt) "></ion-input>\n\n                              </ion-item>\n\n                              <ion-item *ngIf="!myForm2.controls.bconfort.valid  && (myForm2.controls.bconfort.dirty || submitAttempt)">\n\n                                  <p>Por favor escriba un número válido.</p>\n\n                              </ion-item>\n\n                                <ion-item  >\n\n                                      <ion-label floating><ion-icon name="flag"> Bandera Microbús:</ion-icon> </ion-label>\n\n                                      <ion-input formControlName="bmicrobus" type="number" [(ngModel)]="this.tarifa.band_microbus" [class.invalid]="!myForm2.controls.bmicrobus.valid  && (myForm2.controls.bmicrobus.dirty || submitAttempt) "></ion-input>\n\n                                </ion-item>\n\n                              <ion-item *ngIf="!myForm2.controls.bmicrobus.valid  && (myForm2.controls.bmicrobus.dirty || submitAttempt)">\n\n                                  <p>Por favor escriba un número válido.</p>\n\n                              </ion-item>\n\n                              <br>                  \n\n                              <ion-item  >\n\n                                <ion-label floating><ion-icon name="flag"> % Negocio:</ion-icon> </ion-label>\n\n                                  <ion-input  formControlName="porciento" type="number"  [(ngModel)]="this.tarifa.porciento" [class.invalid]="!myForm2.controls.porciento.valid  && (myForm2.controls.porciento.dirty || submitAttempt) "></ion-input>   \n\n                              </ion-item>            \n\n                              <ion-item *ngIf="!myForm2.controls.porciento.valid  && (myForm2.controls.porciento.dirty || submitAttempt)">\n\n                                <p>Por favor escriba un número válido.</p>\n\n                              </ion-item>\n\n    \n\n                              <br> \n\n                              <ion-buttons right>\n\n                                    <button color="primary" [style.display]="visible" ion-button (click)="updateItem2()"> <ion-icon name="refresh">  Actualizar Datos  </ion-icon> </button>\n\n                                </ion-buttons>\n\n      \n\n                                \n\n                            <br> \n\n                              </form>\n\n                                </div>\n\n                              <!--  <div >\n\n                                  <hr/>\n\n                                  <br> \n\n                                  <button ion-button color="danger" (click)="updateItem3()"><ion-icon name="remove">  Eliminar Servicio de Taxi </ion-icon>  </button>\n\n                              </div> -->\n\n                        </ion-slide>                \n\n      \n\n            </ion-slides>          \n\n        </div>\n\n      </div>\n\n            \n\n    \n\n    \n\n    </ion-scroll>\n\n\n\n  </ion-content>\n\n\n\n\n\n\n\n\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\detailssss\detailssss.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_network__["a" /* Network */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_10__providers_global_global__["a" /* GlobalProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_14__ionic_storage__["b" /* Storage */]])
    ], DetailssssPage);
    return DetailssssPage;
}());

//# sourceMappingURL=detailssss.js.map

/***/ }),

/***/ 202:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DetallePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_in_app_browser__ = __webpack_require__(203);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};












/**
 * Generated class for the DetallePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
// @IonicPage()
var DetallePage = /** @class */ (function () {
    function DetallePage(navCtrl, navParams, gasolineraService, toastCtrl, loadingService, alertController, formBuilder, socialSharing, iab) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.gasolineraService = gasolineraService;
        this.toastCtrl = toastCtrl;
        this.loadingService = loadingService;
        this.alertController = alertController;
        this.formBuilder = formBuilder;
        this.socialSharing = socialSharing;
        this.iab = iab;
        this.cliente = false;
        this.textos = false;
        this.tarifa = {
            "moto": 0,
            "auto": 0,
            "minivan": 0,
            "microbus": 0,
            "band_moto": 0,
            "band_auto": 0,
            "band_minivan": 0,
            "band_microbus": 0,
            "porciento": 0,
            "gravamen": 0,
            "rebaja": 0,
            "radio": 0
        };
        this.tarifa2 = {
            "moto": 0,
            "auto": 0,
            "minivan": 0,
            "microbus": 0,
            "band_moto": 0,
            "band_auto": 0,
            "band_minivan": 0,
            "band_microbus": 0,
            "porciento": 0,
            "gravamen": 0,
            "rebaja": 0,
        };
        this.active_slide_index = 1;
        this.active_slide_index1 = 1;
        this.active_slide_index2 = 2;
        this.active_slide_index3 = 3;
        this.myForm2 = this.formBuilder.group({
            moto: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            firstName: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            correo: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bbasico: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bmoto: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bconfort: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bmicrobus: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            porciento: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            gravamen: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            rebaja: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            moto2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            firstName2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            telefono2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            correo2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bbasico2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bmoto2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bconfort2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            bmicrobus2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            mlc: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            usd: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            eur: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            rub: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            radio: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.autocomplete = "";
        this.totalmotos = 0;
        this.totalbasicos = 0;
        this.totalconfort = 0;
        this.totalminivan = 0;
        this.placeolder = "Buscar";
    }
    DetallePage.prototype.pageScrollers1 = function () {
        this.pageTops1.scrollToTop();
    };
    DetallePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DetallePage');
        this.getDate();
    };
    DetallePage.prototype.ionViewDidEnter = function () {
        this.user = this.navParams.get('user');
        console.log('didenter parametros: ' + JSON.stringify(this.user.parametros.parametros));
        this.tarifa.radio = this.user.parametros.parametros.radio;
        this.tarifa.moto = this.user.parametros.parametros.moto.costo;
        this.tarifa.band_moto = this.user.parametros.parametros.moto.bandera;
        this.tarifa.auto = this.user.parametros.parametros.basico.costo;
        this.tarifa.band_auto = this.user.parametros.parametros.basico.bandera;
        this.tarifa.minivan = this.user.parametros.parametros.confort.costo;
        this.tarifa.band_minivan = this.user.parametros.parametros.confort.bandera;
        this.tarifa.microbus = this.user.parametros.parametros.micro.costo;
        this.tarifa.band_microbus = this.user.parametros.parametros.micro.bandera;
        this.tarifa.porciento = this.user.parametros.parametros.porciento;
        this.tarifa.gravamen = this.user.parametros.parametros.gravamen;
        this.tarifa.rebaja = this.user.parametros.parametros.rebaja;
        /*     this.id = this.navParams.get('id');
            this.smoto=this.user.parametros.parametros.moto.act
            this.sbasico=this.user.parametros.parametros.basico.act
            this.sconfort=this.user.parametros.parametros.confort.act
         */
        console.log("tarifas modificadas:" + JSON.stringify(this.tarifa));
        /*  this.myForm2.patchValue({
           'moto': 1
       }); */
        var tarifa2obj;
        for (var _i = 0, _a = this.user.parametros.parametros.tarifa2; _i < _a.length; _i++) {
            var carro = _a[_i];
            tarifa2obj = carro;
        }
        console.log('tarifa2obj: ' + JSON.stringify(tarifa2obj.moto));
        this.tarifa2.moto = tarifa2obj.moto.costo;
        this.tarifa2.band_moto = tarifa2obj.moto.bandera;
        this.tarifa2.auto = tarifa2obj.basico.costo;
        this.tarifa2.band_auto = tarifa2obj.basico.bandera;
        this.tarifa2.minivan = tarifa2obj.confort.costo;
        this.tarifa2.band_minivan = tarifa2obj.confort.bandera;
        this.tarifa2.microbus = tarifa2obj.micro.costo;
        this.tarifa2.band_microbus = tarifa2obj.micro.bandera;
        this.tasas = this.user.parametros.parametros.monedas;
        for (var _b = 0, _c = this.tasas; _b < _c.length; _b++) {
            var carro = _c[_b];
            if (carro.nam == "MLC") {
                this.mlc = carro.val;
            }
            if (carro.nam == "EUR") {
                this.eur = carro.val;
            }
            if (carro.nam == "USD") {
                this.usd = carro.val;
            }
            if (carro.nam == "RUB") {
                this.rub = carro.val;
            }
        }
    };
    DetallePage.prototype.listarCl = function () {
        var _this = this;
        this.textos = false;
        this.cliente = true;
        this.total = 0;
        this.total2 = 0;
        this.porciento = 0;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataPersona5().then(function (result) {
            _this.loadingService.dismissLoading();
            _this.users5 = result;
            // carro.toString() console.log("resultado: "+result.body)
            // this.presentToast4("status: "+ result.status)
            console.log("users2: " + JSON.stringify(_this.users5));
            var a = JSON.stringify(_this.users5);
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.borrado) {
                    if (carro.apr) {
                        _this.total2++;
                    }
                }
            }
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
        });
    };
    DetallePage.prototype.listarCh = function () {
        var _this = this;
        // this.fondo=true
        // this.mensajeo=true 
        this.textos = false;
        this.cliente = false;
        this.total = 0;
        this.total2 = 0; //-1  
        this.porciento = 0;
        this.totalmotos = 0;
        this.totalbasicos = 0;
        this.totalconfort = 0;
        this.totalminivan = 0;
        // this.users4 = []
        // this.checked2=true
        //revisar conexion a internet
        this.loadingService.presentLoading();
        this.gasolineraService.getDataPersona6().then(function (result) {
            _this.loadingService.dismissLoading();
            _this.users5 = result;
            // carro.toString() console.log("resultado: "+result.body)
            // this.presentToast4("status: "+ result.status)
            console.log("users2: " + JSON.stringify(_this.users5));
            var a = JSON.stringify(_this.users5);
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.idt != "") {
                    if (!carro.borrado) {
                        if (carro.id != 1) {
                            if (carro.fondo) {
                                // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                                _this.total = +(_this.total + parseFloat(carro.fondo)).toFixed(2);
                                _this.total2++;
                            }
                        }
                    }
                    if (!carro.borrado) {
                        if (carro.id != 1) {
                            if (carro.tip == "1") {
                                _this.totalmotos++;
                            }
                            if (carro.tip == "2") {
                                _this.totalbasicos++;
                            }
                            if (carro.tip == "3") {
                                _this.totalconfort++;
                            }
                            if (carro.tip == "4") {
                                _this.totalminivan++;
                            }
                        }
                    }
                }
            }
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
        });
    };
    DetallePage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    //saldo al gestor
    DetallePage.prototype.openDialogo4 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        alert = this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: '¿Va ha agregar saldo al chofer? ',
                            inputs: [
                                {
                                    name: 'Saldo',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        //console.log('en string '+JSON.stringify(data)); //to see the object
                                        //console.log('data '+data);
                                        //console.log('data.telefono '+data.telefono); 
                                        console.log(Number.isInteger(parseInt(data.Saldo)));
                                        if (!Number.isInteger(parseInt(data.Saldo))) {
                                            _this.presentToast4("Debe escribir un número");
                                        }
                                        else {
                                            _this.saldo = +(carro.fondo);
                                            _this.saldo = +(_this.saldo + parseFloat(data.Saldo)).toFixed(2);
                                            //carro.eda = this.saldo 
                                            _this.what6(carro);
                                        }
                                        // 
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert.present()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //confirmacion despues de ver el mapa
    DetallePage.prototype.what6 = function (carro) {
        var _this = this;
        var i = {
            "fondo": this.saldo,
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateChofer(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.fondo = _this.saldo;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetallePage.prototype.apr = function (carro) {
        var _this = this;
        var i = {
            "apr": true,
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateChofer(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.apr = true;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetallePage.prototype.desapr = function (carro) {
        var _this = this;
        var i = {
            "apr": false,
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateChofer(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.apr = false;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetallePage.prototype.refresh = function (carro) {
        var _this = this;
        var i = {
            "con": 0,
            "est": false,
            "viaje": false,
            "idcl": "0",
            "idviaje": "0",
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateChofer(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.con = 0;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetallePage.prototype.mesactual = function (carro) {
        var _this = this;
        console.log("el id en hello: " + carro.id);
        this.textos = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataMesAcChof(this.dia1mesactual, this.dia2mesactual, carro.id).then(function (result) {
            _this.users5 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users5));
            _this.cliente = false;
            _this.porciento = 0;
            _this.total = 0;
            _this.total2 = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro_1 = _a[_i];
                if (carro_1.porc) {
                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                    if (carro_1.est == 2) {
                        _this.total = +(_this.total + parseFloat(carro_1.porc)).toFixed(2);
                        _this.total2++;
                    }
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    DetallePage.prototype.mesactual2 = function (carro) {
        var _this = this;
        console.log("el id en hello: " + carro.id);
        this.textos = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataMesAcClient(this.dia1mesactual, this.dia2mesactual, carro.id).then(function (result) {
            _this.users5 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(result);
            console.log("users2: " + JSON.stringify(_this.users5));
            _this.cliente = true;
            _this.porciento = 0;
            _this.total = 0;
            _this.total2 = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users5; _i < _a.length; _i++) {
                var carro_2 = _a[_i];
                if (carro_2.porc) {
                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                    if (carro_2.est == 2) {
                        _this.total = +(_this.total + parseFloat(carro_2.porc)).toFixed(2);
                        _this.total2++;
                    }
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    DetallePage.prototype.getDate = function () {
        var date = new Date();
        this.today = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);
        console.log(this.today);
        var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        console.log(('0' + firstDay.getDate()).slice(-2));
        console.log(('0' + lastDay.getDate()).slice(-2));
        this.dia1mesactual = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + firstDay.getDate()).slice(-2);
        this.dia2mesactual = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + lastDay.getDate()).slice(-2);
        console.log(this.dia1mesactual);
        console.log(this.dia2mesactual);
        var x = new Date();
        x.setDate(0); // 0 will result in the last day of the previous month (setting the date to last months last day)
        console.log(x);
        this.dia2mespasado = x.getFullYear() + '-' + ('0' + (x.getMonth() + 1)).slice(-2) + '-' + ('0' + x.getDate()).slice(-2);
        console.log(this.dia2mespasado);
        x.setDate(1); //  gets you the first day of that month 
        console.log(x);
        this.dia1mespasado = x.getFullYear() + '-' + ('0' + (x.getMonth() + 1)).slice(-2) + '-' + ('0' + x.getDate()).slice(-2);
        console.log(this.dia1mespasado);
    };
    DetallePage.prototype.what = function (carro) {
        // let message = " Pedido "  +'\n'+" Ruta: "+'\n'+ " Personas: " +'\n'+ " Hora: " +'\n'+ " Día: " +'\n'+" Equipaje: " +'\n'+" Mascotas: " +'\n'+ " Costo: ";
        // https://api.whatsapp.com/send?phone=919756054965&amp;text=I%20want%20to%20find%20out%20about%20your%20products
        var url = "https://api.whatsapp.com/send?phone=53" + carro + "&amp;text=I%20want%20to%20find%20out%20about%20your%20products";
        console.log('53' + carro);
        window.open(url, '_system');
        /*     const browser = this.iab.create(url);
          
            browser.show(); */
        // browser.clos
        /*       this.socialSharing.shareViaWhatsAppToReceiver( carro  ,' ', ' ' ).then(res => {
             console.log("success : " + res);
           }).catch(error => {
             console.log("failed : " + error);
           })  */
    };
    DetallePage.prototype.aprCl = function (carro) {
        var _this = this;
        var i = {
            "apr": true,
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateCliente(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.apr = true;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetallePage.prototype.desaprCl = function (carro) {
        var _this = this;
        var i = {
            "apr": false,
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateCliente(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.apr = false;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetallePage.prototype.hacerGest = function (carro) {
        var _this = this;
        var i = {
            "gest": true,
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateCliente(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.gest = true;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetallePage.prototype.quitarGest = function (carro) {
        var _this = this;
        var i = {
            "gest": false,
        };
        console.log(i);
        var id = carro.id;
        this.gasolineraService.updateCliente(i, id).then(function (result) {
            console.log(result);
            if (result[0].id == id) {
                carro.gest = false;
                _this.presentToast4('Los datos han sido actualizados');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    //para buscar palabra clave en negocios
    DetallePage.prototype.verMensajes5 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        alert = this.alertController.create({
                            subTitle: "<strong>¡Introduzca la contraseña!",
                            //  message: '', 
                            inputs: [
                                {
                                    name: 'Contraseña',
                                    placeholder: 'Aquí'
                                },
                            ],
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        console.log('en string ' + JSON.stringify(data.Contraseña)); //to see the object
                                        //console.log('data '+data);
                                        // console.log('data.telefono '+data);           
                                        //busca el id del telefono en la tabla persona 
                                        if (data.Contraseña == _this.user.parametros.parametros.pasw) {
                                            _this.textos = true;
                                            _this.users5 = [];
                                            console.log('didenter parametros: ' + JSON.stringify(_this.user.parametros.parametros.pasw));
                                        }
                                        /*             this.palabra = data.Contraseña;
                                          
                                                    if (this.carro.eda == this.palabra) {
                                                      this.presentToast4('Contraseña correcta' );
                                                     // this.Clicked2()
                                        
                                                    } else {
                                                      this.presentToast4('Contraseña incorrecta' );
                                                    }
                                           */
                                    }
                                }
                            ]
                        });
                        return [4 /*yield*/, alert.present()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetallePage.prototype.next = function () {
        this.slides.slideNext();
        this.pageScrollers1();
    };
    DetallePage.prototype.prev = function () {
        this.slides.slidePrev();
        this.pageScrollers1();
    };
    //editar los datos del usuario  ya sea taxista o no 
    DetallePage.prototype.updateItem2 = function () {
        var _this = this;
        if (!this.myForm2.valid) {
            this.presentToast4('Error en los datos ');
        }
        else {
            var monedas = [
                {
                    "nam": "MLC",
                    "val": this.mlc,
                    "flag": "mlc"
                },
                {
                    "nam": "USD",
                    "val": this.usd,
                    "flag": "us"
                },
                {
                    "nam": "EUR",
                    "val": this.eur,
                    "flag": "eu"
                },
                {
                    "nam": "RUB",
                    "val": this.rub,
                    "flag": "ru"
                }
            ];
            this.user.parametros.parametros.monedas = monedas;
            console.log("tarifas:" + JSON.stringify(this.user.parametros.parametros));
            if (this.tarifa.moto == 0) {
                this.user.parametros.parametros.moto.act = "false";
            }
            else {
                this.user.parametros.parametros.moto.act = "true";
            }
            if (this.tarifa.auto == 0) {
                this.user.parametros.parametros.basico.act = "false";
            }
            else {
                this.user.parametros.parametros.basico.act = "true";
            }
            if (this.tarifa.minivan == 0) {
                this.user.parametros.parametros.confort.act = "false";
            }
            else {
                this.user.parametros.parametros.confort.act = "true";
            }
            if (this.tarifa.microbus == 0) {
                this.user.parametros.parametros.micro.act = "false";
            }
            else {
                this.user.parametros.parametros.micro.act = "true";
            }
            this.user.parametros.parametros.moto.costo = this.tarifa.moto;
            this.user.parametros.parametros.moto.bandera = this.tarifa.band_moto;
            this.user.parametros.parametros.basico.costo = this.tarifa.auto;
            this.user.parametros.parametros.basico.bandera = this.tarifa.band_auto;
            this.user.parametros.parametros.confort.costo = this.tarifa.minivan;
            this.user.parametros.parametros.confort.bandera = this.tarifa.band_minivan;
            this.user.parametros.parametros.micro.costo = this.tarifa.microbus;
            this.user.parametros.parametros.micro.bandera = this.tarifa.band_microbus;
            this.user.parametros.parametros.porciento = this.tarifa.porciento;
            this.user.parametros.parametros.gravamen = this.tarifa.gravamen;
            this.user.parametros.parametros.rebaja = this.tarifa.rebaja;
            console.log("tarifas modificadas:" + JSON.stringify(this.user.parametros.parametros));
            var tarifa2 = [
                {
                    "nam": "Aeropuerto",
                    "moto": {
                        "act": "false",
                        "costo": this.tarifa2.moto,
                        "bandera": this.tarifa2.band_moto
                    },
                    "micro": {
                        "act": "true",
                        "costo": this.tarifa2.microbus,
                        "bandera": this.tarifa2.band_microbus
                    },
                    "basico": {
                        "act": "false",
                        "costo": this.tarifa2.auto,
                        "bandera": this.tarifa2.band_auto,
                    },
                    "existe": 1,
                    "confort": {
                        "act": "true",
                        "costo": this.tarifa2.minivan,
                        "bandera": this.tarifa2.band_minivan
                    },
                    "coordenadas": [
                        {
                            "lat": "22.9805853",
                            "lng": "-82.4235741"
                        },
                        {
                            "lat": "22.9848819",
                            "lng": "-82.4176306"
                        },
                        {
                            "lat": "22.9885956",
                            "lng": "-82.4120516"
                        },
                        {
                            "lat": "22.9946796",
                            "lng": "-82.4028678"
                        },
                        {
                            "lat": "22.9982745",
                            "lng": "-82.3975892"
                        },
                        {
                            "lat": "23.0000127",
                            "lng": "-82.3943276"
                        },
                        {
                            "lat": "23.0013558",
                            "lng": "-82.3922677"
                        },
                        {
                            "lat": "22.9981165",
                            "lng": "-82.3923535"
                        },
                        {
                            "lat": "23.0025409",
                            "lng": "-82.3981900"
                        },
                        {
                            "lat": "22.9993806",
                            "lng": "-82.4034257"
                        },
                        {
                            "lat": "22.9983535",
                            "lng": "-82.4111504"
                        },
                        {
                            "lat": "22.9936919",
                            "lng": "-82.4130387"
                        },
                        {
                            "lat": "22.9884771",
                            "lng": "-82.4186177"
                        }
                    ]
                }
            ];
            this.user.parametros.parametros.tarifa2 = tarifa2;
            this.user.parametros.parametros.radio = this.tarifa.radio;
            var i = {
                "parametros": this.user.parametros.parametros,
            };
            var id = 1;
            this.gasolineraService.updateParams(i, id).then(function (result) {
                // console.log(result);
                // let user = JSON.parse(result[0])
                // console.log("user : "+user);
                if (result[0].id == 1) {
                    _this.presentToast4('Información actualizada. ');
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
            // let result = this.gasolineraService.updateTaxis2(i);//api
            /*      this.gasolineraService.updateTaxis2(i) .then((result) => { // en la variable result esta lo que devuelve el servidor
                  console.log(" ver "+result.hello);
                  if(result.hello){
                    console.log("tarifas modificadas:"+JSON.stringify(i));
               
                    //this.detalles3=true
                    console.log(result);
                    this.prev()
              
                  }else{
                    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                  }
                }, err => {
                  console.log(err);
                  this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }); */
        }
    };
    DetallePage.prototype.updateSearchResults = function () {
        console.log(this.autocomplete); //search input will display
    };
    DetallePage.prototype.hideSearch = function () {
        this.autocomplete = "";
    };
    DetallePage.prototype.yourSearchFunction = function () {
        console.log(this.autocomplete); //search input will display
    };
    DetallePage.prototype.revisar = function (carro) {
        if (carro.borrado) {
            return false;
        }
        else {
            var a = this.autocomplete.toLowerCase();
            var b = carro.tel.toString();
            /*  if(this.cliente){
                b=carro.tel.toLowerCase()
             
             }else{
               b=carro.tel.toString()
             }
          */
            if (b.includes(a)) {
                return true;
            }
            else {
                //  return false
                var c = carro.nam.toLowerCase();
                if (c.includes(a)) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
    };
    DetallePage.prototype.openDialogo6 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡BORRAR USUARIO!",
                            message: '¿Usted desea borrar el usuario?',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        console.log(carro.id); //to see the object
                                        //  carro.borrado=true
                                        // console.log('en string '+JSON.stringify(data)); //to see the object
                                        var timestamp = new Date();
                                        console.log('en string ' + timestamp); //to see the object
                                        var i = {
                                            "idt": "Borrado: " + timestamp + " " + carro.idt,
                                            "borrado": true,
                                            "tel": "Borrado: " + timestamp + " " + carro.tel,
                                        };
                                        var id = carro.idt;
                                        _this.gasolineraService.updatePersonaS(i, id).then(function (result) {
                                            // console.log(result);
                                            // let user = JSON.parse(result[0])
                                            // console.log("user : "+user);
                                            if (result[0].id == carro.id) {
                                                carro.borrado = true;
                                                _this.presentToast4('El usuario ha sido eliminado. ');
                                                //  this.navCtrl.push(TaxisPage)
                                                // this.Clicked()  
                                            }
                                            else {
                                                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                                            }
                                        }, function (err) {
                                            console.log(err);
                                        });
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetallePage.prototype.openDialogo7 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡BORRAR CHOFER!",
                            message: '¿Usted desea borrar el chofer?',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        console.log(carro.id); //to see the object
                                        // carro.borrado=true
                                        // console.log('en string '+JSON.stringify(data)); //to see the object
                                        var timestamp = new Date();
                                        console.log('en string ' + timestamp); //to see the object
                                        var i = {
                                            "idt": "Borrado: " + timestamp + " " + carro.idt,
                                            "borrado": true,
                                            "fondo": 0,
                                            "tel": "123" + carro.tel
                                            // "tel": this.vtelefono , //+" la"
                                            // "mail": this.vcorreo  
                                            //  "nam": "MariasssS" , "tel": "7654321", "mail": "JpedroM@gmail.com"
                                        };
                                        var id = carro.idt;
                                        _this.gasolineraService.updateChoferS(i, id).then(function (result) {
                                            // console.log(result);
                                            // let user = JSON.parse(result[0])
                                            // console.log("user : "+user);
                                            if (result[0].id == carro.id) {
                                                carro.borrado = true;
                                                _this.presentToast4('El usuario ha sido eliminado. ');
                                                //  this.navCtrl.push(TaxisPage)
                                                // this.Clicked()                     
                                            }
                                            else {
                                                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                                            }
                                        }, function (err) {
                                            console.log(err);
                                        });
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])('slides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Slides */])
    ], DetallePage.prototype, "slides", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */])
    ], DetallePage.prototype, "pageTops1", void 0);
    DetallePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-detalle',template:/*ion-inline-start:"E:\14\gaso\src\pages\detalle\detalle.html"*/'<!--\n\n  Generated template for the DetallePage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header>\n\n\n\n  <ion-navbar>\n\n\n\n    <ion-row  align-items-center  > \n\n\n\n      <ion-col size="4" >                   \n\n        <ion-buttons >            \n\n          <button   ion-button outline icon-only round  (click)="verMensajes5()"> \n\n            <ion-icon name="logo-usd"> </ion-icon><ion-icon name="flag"> </ion-icon>\n\n          </button>\n\n        </ion-buttons>                             \n\n      </ion-col>\n\n\n\n<!--                       <ion-col size="4" *ngIf="existe&&nego">             \n\n        <ion-buttons >            \n\n          <button   ion-button outline icon-only round color="secondary" (click)="personal()"> \n\n            <ion-icon name="people"> </ion-icon>\n\n          </button>\n\n        </ion-buttons>    \n\n      </ion-col>  revisarCh2  newch() -->\n\n\n\n      <ion-col size="4" >                   \n\n        <ion-buttons >            \n\n          <button   ion-button outline icon-only round  (click)="listarCl()"> \n\n            <ion-icon name="people"> </ion-icon>\n\n          </button>\n\n        </ion-buttons>                             \n\n      </ion-col> \n\n\n\n      <ion-col size="4" >                   \n\n        <ion-buttons >            \n\n          <button   ion-button outline icon-only round  (click)="listarCh()"> \n\n            <ion-icon name="car"> </ion-icon>\n\n          </button>\n\n        </ion-buttons>                             \n\n      </ion-col>\n\n    \n\n       \n\n\n\n  </ion-row>\n\n\n\n\n\n  <ion-searchbar *ngIf="!textos"\n\n\n\n      class="border-round" lines="none"\n\n      \n\n      showCancelButton \n\n      \n\n      searchIcon="search" \n\n      animated\n\n      cancel-button-icon\n\n      placeholder="Buscar teléfono o nombre"\n\n      [(ngModel)]="autocomplete"\n\n\n\n      (ionCancel)="hideSearch()"\n\n\n\n      (search)="yourSearchFunction()" \n\n      \n\n      (ionInput)="updateSearchResults()">\n\n  </ion-searchbar>\n\n\n\n\n\n\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content > \n\n\n\n\n\n\n\n<ion-scroll scrollX="false" scrollY="true" style="width: 100%; height: 100%">\n\n    \n\n\n\n  <div  *ngIf="totalbasicos!=0">\n\n    <div  *ngIf="!cliente&&!textos">\n\n      <h6 > <b > Moto: </b> {{totalmotos}}  <b > Básico: </b> {{totalbasicos}} <b > Confort: </b> {{totalconfort}} <b > Micro: </b> {{totalminivan}}</h6>  \n\n      <h2 > <b > Neto =</b> {{total}} CUP  <b > Total =</b> {{total2}} </h2>  \n\n    </div>\n\n\n\n\n\n  </div>\n\n\n\n\n\n\n\n\n\n    <div  *ngIf="cliente&&!textos">\n\n      <h2 >  <b > Total =</b> {{total2}} </h2>  \n\n    </div>\n\n\n\n\n\n    <div *ngFor="let carro of users5" > \n\n      <div *ngIf="carro.id!=1&&carro.idt">\n\n        <ion-card *ngIf="revisar(carro)" >         \n\n          <!--  / <b > % Bruto =</b> {{porciento}} CUP <img src="{{product.url}}" style="padding: 0px;width: 50%" class="imgRedonda">     *ngIf="!carro.tax"   -->\n\n          <ion-card-content>\n\n            \n\n            <ion-row align-items-center  >\n\n      \n\n                <ion-col  size="4"  > \n\n                    <!-- aprobar chofer  -->\n\n                    <div  style="text-align:left" *ngIf="carro.fondo!=null&&carro.apr">\n\n                      <button ion-button outline icon-only round (click)="desapr(carro)"><ion-icon color="danger" name="warning"> </ion-icon> </button>                   \n\n                    </div> \n\n                    <div  style="text-align:left" *ngIf="carro.fondo!=null&&!carro.apr">\n\n                      <button ion-button outline icon-only round (click)="apr(carro)"><ion-icon color="verde" name="warning"> </ion-icon> </button>                   \n\n                    </div> \n\n\n\n                    <!-- aprobar  cliente -->\n\n                    <div  style="text-align:left" *ngIf="cliente&&carro.apr">\n\n                      <button ion-button outline icon-only round (click)="desaprCl(carro)"><ion-icon color="danger" name="warning"> </ion-icon> </button>                   \n\n                    </div> \n\n                    <div  style="text-align:left" *ngIf="cliente&&!carro.apr">\n\n                      <button ion-button outline icon-only round (click)="aprCl(carro)"><ion-icon color="verde" name="warning"> </ion-icon> </button>                   \n\n                    </div> \n\n\n\n                </ion-col>                         \n\n\n\n                <ion-col  size="4" >\n\n\n\n                  <div  style="text-align:center" *ngIf="cliente">\n\n                    <button ion-button outline icon-only round (click)="openDialogo6(carro)"><ion-icon color="danger" name="trash"> </ion-icon> </button>                   \n\n                  </div> \n\n\n\n                  <div  style="text-align:center" *ngIf="carro.fondo!=null">\n\n                    <button ion-button outline icon-only round (click)="openDialogo7(carro)"><ion-icon color="danger" name="trash"> </ion-icon> </button>                   \n\n                  </div> \n\n                </ion-col>  \n\n\n\n\n\n                <ion-col  size="4" >\n\n                  <div  style="text-align:right" >\n\n                    <button ion-button outline icon-only round (click)="what(carro.tel)"><ion-icon color="verde" name="logo-whatsapp"> </ion-icon> </button>                   \n\n                  </div> \n\n                </ion-col>          \n\n            </ion-row>\n\n        \n\n\n\n\n\n\n\n            <div   style="text-align:center" > \n\n                            <div >\n\n\n\n                              \n\n                              <h2 >  <ion-icon color="energy" name="clipboard"> <b>Número : </b> {{carro.id}} </ion-icon></h2>\n\n                            \n\n                              <div  style="text-align:center" *ngIf="carro.tip==1">\n\n                                <h2 >   <b>Moto </b> </h2>                          \n\n                              </div>\n\n                              \n\n                              <div  style="text-align:center" *ngIf="carro.tip==2">\n\n                                <h2 >   <b>Básico </b> </h2>                          \n\n                              </div> \n\n                              <div  style="text-align:center" *ngIf="carro.tip==3">\n\n                                <h2 >   <b>Confort </b> </h2>                          \n\n                              </div> \n\n                              <div  style="text-align:center" *ngIf="carro.tip==4">\n\n                                <h2 >   <b>Micro </b> </h2>                          \n\n                              </div> \n\n                              \n\n                              \n\n                              <div  style="text-align:right" *ngIf="carro.fondo!=null">\n\n                                <button ion-button outline icon-only round (click)="openDialogo4(carro)"><ion-icon color="energy" name="logo-usd"> <b>Depósito : </b> {{carro.fondo}} </ion-icon> </button>                   \n\n                              </div> \n\n                              \n\n\n\n\n\n                              <h2 ><b> <ion-icon  name="person"> </ion-icon> Nombre: </b> {{carro.nam}} </h2> \n\n                              <h2 > <b><ion-icon name="cart"> </ion-icon> Pedidos Cancelados: </b>{{carro.con}}</h2> \n\n                              \n\n                              \n\n                              <h2> <b><ion-icon name="calendar"> </ion-icon> Fecha Inscripción: </b>{{carro.created_at}}</h2>     \n\n                              <h2> <b><ion-icon name="call"> </ion-icon> Teléfono: </b>{{ carro.tel}}</h2>\n\n                              <h2><b><ion-icon  name="mail"> </ion-icon> Correo:</b> {{carro.mail}}</h2>\n\n                              <div  *ngIf="carro.indicativo!=null">\n\n                              <h2><b><ion-icon  name="car"> </ion-icon> Indicativo:</b> {{carro.indicativo}}</h2>\n\n                              </div>\n\n                            </div>\n\n                              \n\n                          \n\n                            <div  style="text-align:left" *ngIf="carro.fondo">\n\n                              <button ion-button outline icon-only round (click)="refresh(carro)"><ion-icon color="energy" name="refresh">  </ion-icon> </button>                   \n\n                            </div> \n\n\n\n                            <!-- aprobar  gestor -->\n\n                            <div  style="text-align:left" *ngIf="cliente&&carro.gest">\n\n                              <button ion-button outline icon-only round (click)="quitarGest(carro)"><ion-icon color="danger" name="key"> </ion-icon> </button>                   \n\n                            </div> \n\n                            <div  style="text-align:left" *ngIf="cliente&&!carro.gest">\n\n                              <button ion-button outline icon-only round (click)="hacerGest(carro)"><ion-icon color="verde" name="key"> </ion-icon> </button>                   \n\n                            </div> \n\n\n\n                          </div>                         \n\n\n\n\n\n                          \n\n                          <ion-row align-items-center  > \n\n                            <ion-col  size="4">    \n\n                              <div *ngIf="!cliente"  style="text-align:center" > \n\n                                <button ion-button outline icon-only round (click)="mesactual(carro)"><ion-icon name="cart"> Buscar sus pedidos</ion-icon></button>                   \n\n                              </div>  \n\n                              <!-- <button ion-button outline icon-only round color="verde" (click)="whatp()"><ion-icon name="logo-whatsapp" item-start >  Comunicar</ion-icon> </button> -->                             \n\n                              <div *ngIf="cliente"  style="text-align:center" > \n\n                                <button ion-button outline icon-only round (click)="mesactual2(carro)"><ion-icon name="cart"> Buscar sus pedidos</ion-icon></button>                   \n\n                              </div> \n\n                            </ion-col> \n\n                          \n\n                        </ion-row>                             \n\n                      \n\n          </ion-card-content>  \n\n        </ion-card> \n\n      </div>  \n\n\n\n            \n\n      <div *ngIf="!carro.idt&&carro.dat">\n\n        <ion-card  >         \n\n         \n\n          <ion-card-content>\n\n            <div  style="text-align:center" *ngIf="carro.tip==1">\n\n              <h2 >   <b>Moto </b> </h2>                          \n\n            </div>\n\n            \n\n            <div  style="text-align:center" *ngIf="carro.tip==2">\n\n              <h2 >   <b>Básico </b> </h2>                          \n\n            </div> \n\n            <div  style="text-align:center" *ngIf="carro.tip==3">\n\n              <h2 >   <b>Confort </b> </h2>                          \n\n            </div> \n\n            <div  style="text-align:center" *ngIf="carro.tip==4">\n\n              <h2 >   <b>Micro </b> </h2>                          \n\n            </div> \n\n  \n\n            <div *ngIf="carro.est==4">\n\n              <h2> <ion-icon   color="danger" name="checkmark-circle"> <b> Pedido Cancelado </b></ion-icon>   </h2>                                     \n\n            </div> \n\n            <div *ngIf="carro.est==3">\n\n              <h2> <ion-icon   color="azu" name="checkmark-circle"> <b> Visto por la Agencia </b></ion-icon>   </h2>                                     \n\n            </div> \n\n            <div *ngIf="carro.est==2">\n\n              <h2> <ion-icon   color="energy" name="checkmark-circle"> <b> Realizado </b></ion-icon>   </h2>                                     \n\n            </div> \n\n            <div *ngIf="carro.est==1"> \n\n              <h2> <ion-icon   color="verde" name="checkmark-circle"> <b> Sin atender </b></ion-icon>   </h2>                                     \n\n            </div> \n\n                          <div  style="text-align:center" > \n\n                                      \n\n                                      <ion-icon name="car" color="energy"> Pedido número: <b> {{carro.id}} </b> </ion-icon>\n\n                                      <h2> <b><ion-icon name="calendar"> </ion-icon> Fecha: </b>{{carro.created_at}}</h2> \n\n  \n\n  \n\n                                      \n\n                                      <h2><b><ion-icon color="energy" name="logo-usd"> </ion-icon> Total:</b> {{carro.total}}</h2>  \n\n  \n\n                                      <h2><b>  % =</b>  {{carro.porc}}</h2>  \n\n                                      \n\n  \n\n                                      <h2 ><ion-icon name="done-all"  color="energy"> </ion-icon><b> Origen: {{carro.dat.origename}}</b> </h2>                            \n\n                                      <h2 ><ion-icon name="locate"  color="energy"> </ion-icon><b> Destino: {{carro.dat.destinoname}}</b> </h2>  \n\n  \n\n                                                \n\n                                      <h2 ><ion-icon name="person"  color="energy"> </ion-icon><b> Cliente: {{carro.dat.nom}}</b> </h2>                            \n\n                                      <h2 ><ion-icon name="call"  color="energy"> </ion-icon><b> Teléfono: {{carro.dat.telpedido}}</b> </h2>  \n\n  \n\n                                      <div *ngIf="carro.est==2">\n\n                                        <div *ngIf="carro.historial!=null">\n\n                                          <h2 ><ion-icon name="clipboard"  color="energy"> </ion-icon><b>  {{carro.historial}}</b> </h2>                                     \n\n                                        </div>  \n\n                                      </div>\n\n\n\n                                       <div *ngIf="cliente">\n\n                                        <h2 ><ion-icon name="car"  color="energy"> </ion-icon><b> Chofer Número: {{carro.idch}}</b> </h2>                                     \n\n                                      </div>                                   \n\n                              \n\n                          </div>\n\n                              \n\n          </ion-card-content>  \n\n        </ion-card> \n\n      </div>\n\n\n\n  \n\n      </div> \n\n\n\n\n\n\n\n  <div  *ngIf="textos"  > \n\n    \n\n    <div   > \n\n        <!-- poner las tarifas de taxis *ngIf="!checked&&btntax"--> \n\n        <ion-slides  #slides  style="height: 70%">\n\n                              \n\n                  <ion-slide style="width: 100%"> 	\n\n                      <ion-item  color="energy">\n\n                      <h2 >  Tarifas según tipo de Vehículo </h2>\n\n                      </ion-item>      \n\n                      <ion-item  >\n\n                        <h2 ><ion-icon color="energy" name="car">  Moto: </ion-icon> {{this.tarifa.moto}}</h2>\n\n                        </ion-item>                    \n\n                      <ion-item  >\n\n                      <h2 ><ion-icon color="energy" name="car">  Básico: </ion-icon> {{this.tarifa.auto}}</h2>\n\n                      </ion-item>\n\n                      <ion-item  >\n\n                      <h2 ><ion-icon color="energy" name="car">  Confort: </ion-icon> {{this.tarifa.minivan}}</h2>\n\n                      </ion-item>\n\n                      <ion-item  >\n\n                        <h2 ><ion-icon color="energy" name="car">  Microbús: </ion-icon> {{this.tarifa.microbus}}</h2>\n\n                        </ion-item>\n\n                        <ion-item color="energy"  >\n\n                          <h2 >  Banderas </h2>\n\n                          </ion-item>  \n\n\n\n                          <ion-item  >\n\n                            <h2 ><ion-icon color="energy" name="flag"> Bandera Moto: </ion-icon> {{this.tarifa.band_moto}}</h2>\n\n                            </ion-item>                        \n\n                          <ion-item  >\n\n                          <h2 ><ion-icon color="energy" name="flag"> Bandera Básico: </ion-icon> {{this.tarifa.band_auto}}</h2>\n\n                          </ion-item>\n\n                          <ion-item  >\n\n                          <h2 ><ion-icon color="energy" name="flag"> Bandera Confort: </ion-icon> {{this.tarifa.band_minivan}}</h2>\n\n                          </ion-item>\n\n                          <ion-item  >\n\n                            <h2 ><ion-icon color="energy" name="flag"> Bandera Microbús: </ion-icon> {{this.tarifa.band_microbus}}</h2>\n\n                            </ion-item>\n\n<!--                             <ion-item  >\n\n                              <h2 >  Porciento del negocio </h2>\n\n                              </ion-item>  -->\n\n                              <ion-item color="danger" >\n\n                                <h2 > % del Negocio:  {{this.tarifa.porciento}}</h2>\n\n                                </ion-item>\n\n                                <ion-item color="danger" >\n\n                                  <h2 > % de gravamen:  {{this.tarifa.gravamen}}</h2>\n\n                                  </ion-item>\n\n                                  <ion-item color="danger" >\n\n                                    <h2 > % de rebaja:  {{this.tarifa.rebaja}}</h2>\n\n                                    </ion-item>\n\n                                              \n\n                        <ion-item color="verde" >\n\n                          <h2 >  Tarifas Especiales </h2>\n\n                          </ion-item>      \n\n                          <ion-item  >\n\n                            <h2 ><ion-icon color="verde" name="car">  Moto: </ion-icon> {{this.tarifa2.moto}}</h2>\n\n                            </ion-item>                    \n\n                          <ion-item  >\n\n                          <h2 ><ion-icon color="verde" name="car">  Básico: </ion-icon> {{this.tarifa2.auto}}</h2>\n\n                          </ion-item>\n\n                          <ion-item  >\n\n                          <h2 ><ion-icon color="verde" name="car">  Confort: </ion-icon> {{this.tarifa2.minivan}}</h2>\n\n                          </ion-item>\n\n                          <ion-item  >\n\n                            <h2 ><ion-icon color="verde" name="car">  Microbús: </ion-icon> {{this.tarifa2.microbus}}</h2>\n\n                            </ion-item>\n\n                            <ion-item color="verde" >\n\n                              <h2 >  Banderas Especiales </h2>\n\n                              </ion-item>  \n\n    \n\n                              <ion-item  >\n\n                                <h2 ><ion-icon color="verde" name="flag"> Bandera Moto: </ion-icon> {{this.tarifa2.band_moto}}</h2>\n\n                                </ion-item>                        \n\n                              <ion-item  >\n\n                              <h2 ><ion-icon color="verde" name="flag"> Bandera Básico: </ion-icon> {{this.tarifa2.band_auto}}</h2>\n\n                              </ion-item>\n\n                              <ion-item  >\n\n                              <h2 ><ion-icon color="verde" name="flag"> Bandera Confort: </ion-icon> {{this.tarifa2.band_minivan}}</h2>\n\n                              </ion-item>\n\n                              <ion-item  >\n\n                                <h2 ><ion-icon color="verde" name="flag"> Bandera Microbús: </ion-icon> {{this.tarifa2.band_microbus}}</h2>\n\n                                </ion-item>\n\n\n\n                                <ion-item color="azu" >\n\n                                  <h2 >  Tasas de cambio </h2>\n\n                                  </ion-item>      \n\n                                  <ion-item  >\n\n                                    <h2 ><img src="assets/imgs/flags/mlc.png" style="width: 2%; height: 2%;padding-left: 5px; "> MLC: {{this.mlc}}</h2>\n\n                                    </ion-item>                    \n\n                                  <ion-item  >\n\n                                  <h2 ><img src="assets/imgs/flags/us.png" style="width: 2%; height: 2%;padding-left: 5px; "> USD: {{this.usd}}</h2>\n\n                                  </ion-item>\n\n                                  <ion-item  >\n\n                                  <h2 ><img src="assets/imgs/flags/eu.png" style="width: 2%; height: 2%;padding-left: 5px; "> EUR: {{this.eur}}</h2>\n\n                                  </ion-item>\n\n                                  <ion-item  >\n\n                                    <h2 ><img src="assets/imgs/flags/ru.png" style="width: 2%; height: 2%;padding-left: 5px; "> RUB: {{this.rub}}</h2>\n\n                                    </ion-item>\n\n\n\n                                    <ion-item color="tertiary" >\n\n                                      <h2 >  Cobertura choferes ( en metros) </h2>\n\n                                      </ion-item> \n\n                                      <ion-item  >\n\n                                        <h2 ><ion-icon color="tertiary" name="flag"> Cobertura: </ion-icon> {{this.tarifa.radio}}</h2>\n\n                              \n\n                                      </ion-item>\n\n\n\n                      <ion-buttons right>  \n\n                      <button color="primary" ion-button  [style.display]="visible" ion-button (click)="next()"> \n\n                        <ion-icon  name="create">  Modificar los datos  </ion-icon></button> \n\n                      </ion-buttons> \n\n                      \n\n  \n\n                  </ion-slide>\n\n                  \n\n                  \n\n                  <ion-slide style="width: 100%">\n\n                    <div style="position: absolute;top: 50%;left: 1px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n                      <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n                    </div>\n\n                    <!-- formulario para la actualizacion value="{{this.tarifa.moto}}" -->                \n\n                    <div style="right: 15px">               \n\n                      <form [formGroup]="myForm2">\n\n                      \n\n                        <ion-item  >\n\n                            <ion-label floating><ion-icon name="car">  Moto:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="moto" type="number"  [(ngModel)]="this.tarifa.moto" [class.invalid]="!myForm2.controls.moto.valid  && (myForm2.controls.moto.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.moto.valid  && (myForm2.controls.moto.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                         \n\n                          <ion-item  >\n\n                              <ion-label floating><ion-icon name="car">  Básico:</ion-icon> </ion-label>\n\n                                <ion-input   formControlName="firstName" type="number"  [(ngModel)]="this.tarifa.auto" [class.invalid]="!myForm2.controls.firstName.valid  && (myForm2.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.firstName.valid  && (myForm2.controls.firstName.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n\n\n                          <ion-item  > \n\n                              <ion-label floating> <ion-icon name="car">  Confort:</ion-icon> </ion-label>\n\n                            <ion-input   formControlName="telefono" type="number"  [(ngModel)]="this.tarifa.minivan" [class.invalid]="!myForm2.controls.telefono.valid  && (myForm2.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n                        </ion-item>\n\n                        <ion-item *ngIf="!myForm2.controls.telefono.valid  && (myForm2.controls.telefono.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                          <ion-item  >\n\n                                <ion-label floating><ion-icon name="car">  Microbús:</ion-icon> </ion-label>\n\n                                <ion-input   formControlName="correo" type="number" [(ngModel)]="this.tarifa.microbus" [class.invalid]="!myForm2.controls.correo.valid  && (myForm2.controls.correo.dirty || submitAttempt) "></ion-input>\n\n                          </ion-item>\n\n                        <ion-item *ngIf="!myForm2.controls.correo.valid  && (myForm2.controls.correo.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                          \n\n                        <br>                  \n\n                        \n\n                        <ion-item  >\n\n                          <ion-label floating><ion-icon name="flag"> Bandera Moto:</ion-icon> </ion-label>\n\n                            <ion-input    formControlName="bmoto" type="number"  [(ngModel)]="this.tarifa.band_moto" [class.invalid]="!myForm2.controls.bmoto.valid  && (myForm2.controls.bmoto.dirty || submitAttempt) "></ion-input>   \n\n                        </ion-item>            \n\n                        <ion-item *ngIf="!myForm2.controls.bmoto.valid  && (myForm2.controls.bmoto.dirty || submitAttempt)">\n\n                          <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                      \n\n\n\n                          <ion-item  >\n\n                            <ion-label floating><ion-icon name="flag"> Bandera Básico:</ion-icon> </ion-label>\n\n                              <ion-input    formControlName="bbasico" type="number"  [(ngModel)]="this.tarifa.band_auto" [class.invalid]="!myForm2.controls.bbasico.valid  && (myForm2.controls.bbasico.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.bbasico.valid  && (myForm2.controls.bbasico.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                          </ion-item>\n\n                        \n\n                          <ion-item  > \n\n                                <ion-label floating> <ion-icon name="flag"> Bandera Confort:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="bconfort" type="number"  [(ngModel)]="this.tarifa.band_minivan" [class.invalid]="!myForm2.controls.bconfort.valid  && (myForm2.controls.bconfort.dirty || submitAttempt) "></ion-input>\n\n                          </ion-item>\n\n                          <ion-item *ngIf="!myForm2.controls.bconfort.valid  && (myForm2.controls.bconfort.dirty || submitAttempt)">\n\n                              <p>Por favor escriba un número válido.</p>\n\n                          </ion-item>\n\n                            <ion-item  >\n\n                                  <ion-label floating><ion-icon name="flag"> Bandera Microbús:</ion-icon> </ion-label>\n\n                                  <ion-input   formControlName="bmicrobus" type="number" [(ngModel)]="this.tarifa.band_microbus" [class.invalid]="!myForm2.controls.bmicrobus.valid  && (myForm2.controls.bmicrobus.dirty || submitAttempt) "></ion-input>\n\n                            </ion-item>\n\n                          <ion-item *ngIf="!myForm2.controls.bmicrobus.valid  && (myForm2.controls.bmicrobus.dirty || submitAttempt)">\n\n                              <p>Por favor escriba un número válido.</p>\n\n                          </ion-item>\n\n                          <br>                  \n\n                          <ion-item  >\n\n                            <ion-label floating><ion-icon name="flag"> % del Negocio:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="porciento" type="number"  [(ngModel)]="this.tarifa.porciento" [class.invalid]="!myForm2.controls.porciento.valid  && (myForm2.controls.porciento.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.porciento.valid  && (myForm2.controls.porciento.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                          </ion-item> \n\n                          <ion-item  >\n\n                            <ion-label floating><ion-icon name="flag"> % de gravamen:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="gravamen" type="number"  [(ngModel)]="this.tarifa.gravamen" [class.invalid]="!myForm2.controls.gravamen.valid  && (myForm2.controls.gravamen.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.gravamen.valid  && (myForm2.controls.gravamen.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                          </ion-item> \n\n                          <ion-item  >\n\n                            <ion-label floating><ion-icon name="flag"> % de rebaja:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="rebaja" type="number"  [(ngModel)]="this.tarifa.rebaja" [class.invalid]="!myForm2.controls.rebaja.valid  && (myForm2.controls.rebaja.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.rebaja.valid  && (myForm2.controls.rebaja.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                          </ion-item> \n\n\n\n                          <br> \n\n                          <ion-item color="verde" >\n\n                            <h2 >  Tarifas Especiales </h2>\n\n                            </ion-item>  \n\n\n\n                          <ion-item  color="verde">\n\n                            <ion-label floating><ion-icon name="car">  Moto:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="moto2" type="number2"  [(ngModel)]="this.tarifa2.moto" [class.invalid]="!myForm2.controls.moto2.valid  && (myForm2.controls.moto2.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.moto2.valid  && (myForm2.controls.moto2.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                         \n\n                          <ion-item color="verde" >\n\n                              <ion-label floating><ion-icon name="car">  Básico:</ion-icon> </ion-label>\n\n                                <ion-input   formControlName="firstName2" type="number"  [(ngModel)]="this.tarifa2.auto" [class.invalid]="!myForm2.controls.firstName2.valid  && (myForm2.controls.firstName2.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.firstName2.valid  && (myForm2.controls.firstName2.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n\n\n                          <ion-item  color="verde"> \n\n                              <ion-label floating> <ion-icon name="car">  Confort:</ion-icon> </ion-label>\n\n                            <ion-input   formControlName="telefono2" type="number"  [(ngModel)]="this.tarifa2.minivan" [class.invalid]="!myForm2.controls.telefono2.valid  && (myForm2.controls.telefono2.dirty || submitAttempt) "></ion-input>\n\n                        </ion-item>\n\n                        <ion-item *ngIf="!myForm2.controls.telefono2.valid  && (myForm2.controls.telefono2.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                          <ion-item  color="verde">\n\n                                <ion-label floating><ion-icon name="car">  Microbús:</ion-icon> </ion-label>\n\n                                <ion-input   formControlName="correo2" type="number" [(ngModel)]="this.tarifa2.microbus" [class.invalid]="!myForm2.controls.correo2.valid  && (myForm2.controls.correo2.dirty || submitAttempt) "></ion-input>\n\n                          </ion-item>\n\n                        <ion-item *ngIf="!myForm2.controls.correo2.valid  && (myForm2.controls.correo2.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                          \n\n                        <br>                  \n\n                        \n\n                        <ion-item color="verde" >\n\n                          <ion-label floating><ion-icon name="flag"> Bandera Moto:</ion-icon> </ion-label>\n\n                            <ion-input    formControlName="bmoto2" type="number"  [(ngModel)]="this.tarifa2.band_moto" [class.invalid]="!myForm2.controls.bmoto2.valid  && (myForm2.controls.bmoto2.dirty || submitAttempt) "></ion-input>   \n\n                        </ion-item>            \n\n                        <ion-item *ngIf="!myForm2.controls.bmoto2.valid  && (myForm2.controls.bmoto2.dirty || submitAttempt)">\n\n                          <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                      \n\n\n\n                          <ion-item  color="verde">\n\n                            <ion-label floating><ion-icon name="flag"> Bandera Básico:</ion-icon> </ion-label>\n\n                              <ion-input    formControlName="bbasico2" type="number"  [(ngModel)]="this.tarifa2.band_auto" [class.invalid]="!myForm2.controls.bbasico2.valid  && (myForm2.controls.bbasico2.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.bbasico2.valid  && (myForm2.controls.bbasico2.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                          </ion-item>\n\n                        \n\n                          <ion-item  color="verde"> \n\n                                <ion-label floating> <ion-icon name="flag"> Bandera Confort:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="bconfort2" type="number"  [(ngModel)]="this.tarifa2.band_minivan" [class.invalid]="!myForm2.controls.bconfort2.valid  && (myForm2.controls.bconfort2.dirty || submitAttempt) "></ion-input>\n\n                          </ion-item>\n\n                          <ion-item *ngIf="!myForm2.controls.bconfort2.valid  && (myForm2.controls.bconfort2.dirty || submitAttempt)">\n\n                              <p>Por favor escriba un número válido.</p>\n\n                          </ion-item>\n\n                            <ion-item  color="verde">\n\n                                  <ion-label floating><ion-icon name="flag"> Bandera Microbús:</ion-icon> </ion-label>\n\n                                  <ion-input   formControlName="bmicrobus2" type="number" [(ngModel)]="this.tarifa2.band_microbus" [class.invalid]="!myForm2.controls.bmicrobus2.valid  && (myForm2.controls.bmicrobus2.dirty || submitAttempt) "></ion-input>\n\n                            </ion-item>\n\n                          <ion-item *ngIf="!myForm2.controls.bmicrobus2.valid  && (myForm2.controls.bmicrobus2.dirty || submitAttempt)">\n\n                              <p>Por favor escriba un número válido.</p>\n\n                          </ion-item>\n\n                          <br>      \n\n                        \n\n                          <ion-item color="azu" >\n\n                            <h2 >  Tasas de cambio </h2>\n\n                            </ion-item>  \n\n\n\n                          <ion-item  >\n\n                            <ion-label color="azu" floating><ion-icon name="logo-usd">  MLC:</ion-icon> </ion-label>\n\n                              <ion-input   formControlName="mlc" type="number2"  [(ngModel)]="this.mlc" [class.invalid]="!myForm2.controls.mlc.valid  && (myForm2.controls.mlc.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.mlc.valid  && (myForm2.controls.mlc.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                         \n\n                          <ion-item  >\n\n                              <ion-label color="azu" floating><ion-icon name="logo-usd">  USD:</ion-icon> </ion-label>\n\n                                <ion-input   formControlName="usd" type="number"  [(ngModel)]="this.usd" [class.invalid]="!myForm2.controls.usd.valid  && (myForm2.controls.usd.dirty || submitAttempt) "></ion-input>   \n\n                          </ion-item>            \n\n                          <ion-item *ngIf="!myForm2.controls.usd.valid  && (myForm2.controls.usd.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n\n\n                          <ion-item  > \n\n                              <ion-label color="azu" floating> <ion-icon name="logo-usd">  EUR:</ion-icon> </ion-label>\n\n                            <ion-input   formControlName="eur" type="number"  [(ngModel)]="this.eur" [class.invalid]="!myForm2.controls.eur.valid  && (myForm2.controls.eur.dirty || submitAttempt) "></ion-input>\n\n                        </ion-item>\n\n                        <ion-item *ngIf="!myForm2.controls.eur.valid  && (myForm2.controls.eur.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                          <ion-item  >\n\n                                <ion-label color="azu" floating><ion-icon name="logo-usd">  RUB:</ion-icon> </ion-label>\n\n                                <ion-input   formControlName="rub" type="number" [(ngModel)]="this.rub" [class.invalid]="!myForm2.controls.rub.valid  && (myForm2.controls.rub.dirty || submitAttempt) "></ion-input>\n\n                          </ion-item>\n\n                        <ion-item *ngIf="!myForm2.controls.rub.valid  && (myForm2.controls.rub.dirty || submitAttempt)">\n\n                            <p>Por favor escriba un número válido.</p>\n\n                        </ion-item>\n\n                          \n\n                        <br>                  \n\n                        <ion-item  >\n\n                          <ion-label floating><ion-icon name="flag"> Cobertura Choferes:</ion-icon> </ion-label>\n\n                            <ion-input   formControlName="radio" type="number"  [(ngModel)]="this.tarifa.radio" [class.invalid]="!myForm2.controls.radio.valid  && (myForm2.controls.radio.dirty || submitAttempt) "></ion-input>   \n\n                        </ion-item>            \n\n                        <ion-item *ngIf="!myForm2.controls.radio.valid  && (myForm2.controls.radio.dirty || submitAttempt)">\n\n                          <p>Por favor escriba un número válido.</p>\n\n                        </ion-item> \n\n                          \n\n                        <br>                  \n\n                        \n\n                          <ion-buttons right>\n\n                                <button color="primary" [style.display]="visible" ion-button (click)="updateItem2()"> <ion-icon name="refresh">  Actualizar Datos  </ion-icon> </button>\n\n                            </ion-buttons>\n\n  \n\n                            \n\n                        <br> \n\n                      </form>\n\n                    </div>\n\n                          <!--  <div >\n\n                              <hr/>\n\n                              <br> \n\n                              <button ion-button color="danger" (click)="updateItem3()"><ion-icon name="remove">  Eliminar Servicio de Taxi </ion-icon>  </button>\n\n                          </div> -->\n\n                    </ion-slide>                \n\n  \n\n        </ion-slides>          \n\n    </div>\n\n  </div>\n\n        \n\n\n\n\n\n</ion-scroll>\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\detalle\detalle.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_in_app_browser__["a" /* InAppBrowser */]])
    ], DetallePage);
    return DetallePage;
}());

//# sourceMappingURL=detalle.js.map

/***/ }),

/***/ 21:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadingServiceProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/*
  Generated class for the LoadingServiceProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var LoadingServiceProvider = /** @class */ (function () {
    function LoadingServiceProvider(loadingCtrl, toastCtrl) {
        this.loadingCtrl = loadingCtrl;
        this.toastCtrl = toastCtrl;
    }
    LoadingServiceProvider.prototype.presentLoading2 = function () {
        this.loader = this.loadingCtrl.create({
            spinner: 'dots',
            content: "Cargando...",
            cssClass: 'my-loading-class',
        });
        this.loader.present();
    };
    /*
    
        <div >
          <div >
             <img src="assets/imgs/icono512.png" />
          </div>
        </div>
    */
    LoadingServiceProvider.prototype.presentLoading = function () {
        this.loader = this.loadingCtrl.create({
            spinner: 'dots',
            content: "\n      <p style=\"color:#f2b632;\">Conectando, por favor espere...</p>",
            cssClass: 'my-loading-class',
            duration: 50000
        });
        this.loader.present();
    };
    LoadingServiceProvider.prototype.presentLoading3 = function () {
        this.loader = this.loadingCtrl.create({});
        this.loader.present();
    };
    LoadingServiceProvider.prototype.presentLoading4 = function () {
        this.loader = this.loadingCtrl.create({
            spinner: 'dots',
            content: "\n      <p style=\"color:#f2b632;\">Buscando sus datos...</p>",
            cssClass: 'my-loading-class',
            duration: 50000
        });
        this.loader.present();
    };
    /*
      // content: "Cargando...<ion-spinner name="dots"> </ion-spinner> "<img src="assets/libs/leaflet/images/home1.ico" />
        spinner: 'hide',
        content: `
        <div class="custom-spinner-container">
          <div class="custom-spinner-box">
             <img src="assets/libs/leaflet/images/home1.ico" />
          </div>
        </div>`,
        cssClass: 'my-loading-class',
        duration: 50000
    */
    LoadingServiceProvider.prototype.dismissLoading = function () {
        this.loader.dismiss();
    };
    LoadingServiceProvider.prototype.presentError = function (error) {
        if (error === void 0) { error = ''; }
        var toast = this.toastCtrl.create({
            message: (error === '') ? 'No hay conexión a Internet.' : error,
            duration: 4000,
            position: 'middle',
            cssClass: 'custom-class'
        });
        toast.present();
    };
    LoadingServiceProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["B" /* Injectable */])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */]])
    ], LoadingServiceProvider);
    return LoadingServiceProvider;
}());

//# sourceMappingURL=loading-service.js.map

/***/ }),

/***/ 225:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 225;

/***/ }),

/***/ 269:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 269;

/***/ }),

/***/ 27:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GasolineraServiceProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_global_global__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loading_service_loading_service__ = __webpack_require__(21);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





/*
  Generated class for the GasolineraServiceProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var httpOptions = {
    headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpHeaders */]({
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
    }),
};
var httpOptions3 = {
    headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpHeaders */]({
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlnaHJwaG52dGZ4Z21xb2VjeXFsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDg1NjE5MjAsImV4cCI6MjAyNDEzNzkyMH0.f1wuaH4SG_IpHdgHryarqIJvQpsEvlBBRahWvxS7c2A',
        'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlnaHJwaG52dGZ4Z21xb2VjeXFsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDg1NjE5MjAsImV4cCI6MjAyNDEzNzkyMH0.f1wuaH4SG_IpHdgHryarqIJvQpsEvlBBRahWvxS7c2A',
    }),
};
var httpOptions4 = {
    headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpHeaders */]({
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlnaHJwaG52dGZ4Z21xb2VjeXFsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDg1NjE5MjAsImV4cCI6MjAyNDEzNzkyMH0.f1wuaH4SG_IpHdgHryarqIJvQpsEvlBBRahWvxS7c2A',
        'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlnaHJwaG52dGZ4Z21xb2VjeXFsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDg1NjE5MjAsImV4cCI6MjAyNDEzNzkyMH0.f1wuaH4SG_IpHdgHryarqIJvQpsEvlBBRahWvxS7c2A',
        'Prefer': 'return=representation'
    }),
};
var httpOptions2 = {
    headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpHeaders */]({ 'Content-Type': 'text/html; charset=UTF-8',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'DELETE, POST, GET, OPTIONS, PUT, HEAD',
        'Access-Control-Allow-Headers': 'Content-Type' })
};
var GasolineraServiceProvider = /** @class */ (function () {
    function GasolineraServiceProvider(http, toastCtrl, global, loadingService) {
        this.http = http;
        this.toastCtrl = toastCtrl;
        this.global = global;
        this.loadingService = loadingService;
        this.baseUrl = 'https://arcane-journey-25634.herokuapp.com';
        this.lru = '';
        this.lru2 = '';
        console.log('Hello GasolineraServiceProvider Provider');
        this.lru = this.global.foto;
        console.log('variable lru: ', this.lru);
        this.lru2 = this.global.foto3;
        console.log('variable lru2: ', this.lru2);
        // this.lru="http://localhost/habanaservicentroService/public" //"https://www.dondeando.nat.cu/public"
    }
    GasolineraServiceProvider.prototype.cargarGasolinera = function (lat, lng) {
        var position = { 'lat': lat, 'lng': lng };
        // return this.http.get(this.lru + 'taxis/data.json');
        return this.http.post(this.lru + 'taxis/positions', position);
    };
    // APIS DE HABANA SERVICENTRO
    //PARA LA TABLA DE LAS FOTOS
    //para regresar todas fotos de la base de datos ordenadas por destacadas y con paginacion  
    // para regresar todos los post que contengan una palabra en especifico de la tabla ofertas, con paginado 
    /* getCategoria(item,item2) {
      return this.http.get(this.lru+'/api/buscarcategor/'+item+'?page='+item2)
    } */
    //obtiene todas las fotos borradas
    GasolineraServiceProvider.prototype.getDataFotoDel = function () {
        return this.http.get(this.lru + '/api/datafotodel');
    };
    //para borrar un item de la tabla taxis 
    GasolineraServiceProvider.prototype.deleteFotoBorrada = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/deletefotoborr', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //para destacar una foto
    GasolineraServiceProvider.prototype.HabanaServicentro = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/habanaservi', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Operación realizada');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalInscripcionPersonal=false
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalInscripcionPersonal=false                      
        });
        return result;
    };
    //para actualizar los datos tipo texto de una foto
    //para quitar poner en el mapa
    GasolineraServiceProvider.prototype.updateFotoAdmin = function (item) {
        var _this = this;
        var result;
        this.http.put(this.lru + '/api/dataxi/updateadminfoto', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Los datos de la foto han sido actualizados');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalInscripcionPersonal=false
            }
            return result;
        });
        //return result;
    };
    //para poner foto perfil en lista
    GasolineraServiceProvider.prototype.ponerPerfil = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/dataxi/perfil', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //para destacar una foto
    GasolineraServiceProvider.prototype.ponerDestacados = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/destacados', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Operación realizada');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalInscripcionPersonal=false
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalInscripcionPersonal=false                      
        });
        return result;
    };
    //para obtener todos los campos de un idt
    GasolineraServiceProvider.prototype.getFotoNego2 = function (item) {
        return this.http.get(this.lru + '/api/fotosnego2/' + item);
    };
    //para borrar una foto de un id
    GasolineraServiceProvider.prototype.deleteFoto = function (item) {
        var _this = this;
        var result;
        this.loadingService.presentLoading();
        this.http.put(this.lru + '/api/bor/fotorrar', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(result.hello);
            if (result.hello) {
                _this.presentToast4('El anuncio fue borrado, por favor recarge su sección para confirmar');
                _this.global.globalBorrarPersona = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalBorrarPersona = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            //this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalBorrarPersona=false 
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //para actualizar una foto de un id
    GasolineraServiceProvider.prototype.actualizarVisible = function (item) {
        var _this = this;
        // con una promesa  
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.post(_this.lru + '/api/actualizarvisible', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.actualizarInvisib = function (item) {
        var _this = this;
        // con una promesa  
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.post(_this.lru + '/api/actualizarinvisible', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.actualizarFoto = function (item) {
        var _this = this;
        var result;
        this.loadingService.presentLoading();
        this.http.put(this.lru + '/api/actualizarfot', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su anuncio ha sido actualizado, revise su sección personal para administrarlo');
                //this.global.globalModificacionAnuncio='Su anuncio ha sido actualizado, revise su sección personal para administrarlo'
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalModificacionAnuncio='No se ha podido realizar la operación, revise su conexión a internet'
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalModificacionAnuncio='No se ha podido realizar la operación, revise su conexión a internet'
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //para crear un post o subir una foto
    GasolineraServiceProvider.prototype.subirfoto = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.post(this.lru + '/api/tabla-foto/register ', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(JSON.stringify(result));
            if (result.hello) {
                _this.presentToast4('Su anuncio ha sido publicado, revise su sección personal para administrarlo');
                _this.global.globalPublicacionAnuncio = 'Su anuncio ha sido publicado, revise su sección personal para administrarlo';
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalPublicacionAnuncio = 'No se ha podido realizar la operación, revise su conexión a internet';
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalPublicacionAnuncio = 'No se ha podido realizar la operación, revise su conexión a internet';
            _this.loadingService.dismissLoading();
        });
    };
    //para la tablaofertas ////////////////////////////////////////////////////////////////////////////
    //crea una fila en la tabla persona que sera un nuevo anuncio 
    GasolineraServiceProvider.prototype.createPersona2 = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.post(this.lru + '/api/dataxi/createper2', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(JSON.stringify(result));
            if (result.hello) {
                _this.presentToast4('Su anuncio ha sido publicado, revise su sección personal para administrarlo');
                _this.global.globalPublicacionAnuncio = 'Su anuncio ha sido publicado, revise su sección personal para administrarlo';
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalPublicacionAnuncio = 'No se ha podido realizar la operación, revise su conexión a internet';
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalPublicacionAnuncio = 'No se ha podido realizar la operación, revise su conexión a internet';
            _this.loadingService.dismissLoading();
        });
    };
    //para borrar a una persona o anuncio
    GasolineraServiceProvider.prototype.deleteAnuncio = function (item) {
        var _this = this;
        var result;
        this.loadingService.presentLoading();
        this.http.put(this.lru + '/api/userborrar', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(result.hello);
            if (result.hello) {
                _this.presentToast4('El anuncio fue borrado, por favor recarge su sección para confirmar');
                _this.global.globalBorrarPersona = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalBorrarPersona = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            //this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalBorrarPersona=false 
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    // para actualizar un anuncio
    GasolineraServiceProvider.prototype.actualizarAnuncio = function (item) {
        var _this = this;
        var result;
        this.loadingService.presentLoading();
        this.http.put(this.lru + '/api/actualizaranun', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su anuncio ha sido actualizado, revise su sección personal para administrarlo');
                //this.global.globalModificacionAnuncio='Su anuncio ha sido actualizado, revise su sección personal para administrarlo'
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalModificacionAnuncio='No se ha podido realizar la operación, revise su conexión a internet'
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalModificacionAnuncio='No se ha podido realizar la operación, revise su conexión a internet'
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //para sobrescribir el idt del usuario, o que el mismo se borre
    GasolineraServiceProvider.prototype.actualizarAnuncio2 = function (item) {
        var _this = this;
        var result;
        this.loadingService.presentLoading();
        this.http.put(this.lru + '/api/actualizaranun2', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su usuario ha sido eliminado, puede volverse a inscribir cuando lo desee');
                //this.global.globalModificacionAnuncio='Su anuncio ha sido actualizado, revise su sección personal para administrarlo'
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalModificacionAnuncio='No se ha podido realizar la operación, revise su conexión a internet'
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalModificacionAnuncio='No se ha podido realizar la operación, revise su conexión a internet'
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //para poner un usuario nuevo en la tabla persona
    /*  crearClienteOferta(item):any {
     this.loadingService.presentLoading();
       let result:any;
       this.http.put(this.lru+'/api/usercrear',JSON.stringify(item),   httpOptions )
       .subscribe(data =>{
       this.result = data;
       if(this.result.hello){
       //this.presentToast4('Su usuario ha sido publicado, revise su sección personal para administrarlo');
       this.global.globalInscripcionPersonal=true
     } else{
      this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
      this.global.globalInscripcionPersonal=false
      }
      this.loadingService.dismissLoading();
   }, (err) => {
    console.log(err);
   this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
   this.global.globalInscripcionPersonal=false
   this.loadingService.dismissLoading();
   });
       return result;
     }  */
    //para la tabla persona ////////////////////////////////////////////////////////////////////////////
    // para regresar todos los post, con paginado
    GasolineraServiceProvider.prototype.getDataOfertas = function (item) {
        return this.http.get(this.lru + '/api/dataofertas?page=' + item);
    };
    // para regresar todos los post de un usuario en especifico en la tabla ofertas 
    GasolineraServiceProvider.prototype.getDataOferta = function (item) {
        return this.http.get(this.lru + '/api/datauser/' + item);
    };
    // para regresar un anuncio de un usuario en especifico en la tabla ofertas 
    GasolineraServiceProvider.prototype.getAnuncio = function (item) {
        return this.http.get(this.lru + '/api/datanuncio/' + item);
    };
    // busca los negocios a partir de su nombre completo
    GasolineraServiceProvider.prototype.getNegocio = function (item) {
        return this.http.get(this.lru + '/api/datanegonam/' + item);
    };
    // para regresar todos los post que contengan una palabra en especifico de la tabla ofertas, con paginado 
    GasolineraServiceProvider.prototype.getPalabra = function (item, item2) {
        return this.http.get(this.lru + '/api/buscapalab/' + item + '?page=' + item2);
    };
    // para regresar todos los post que contengan una palabra en especifico de la tabla ofertas, con paginado 
    GasolineraServiceProvider.prototype.getCategoria = function (item, item2) {
        return this.http.get(this.lru + '/api/buscarcategor/' + item + '?page=' + item2);
    };
    // para buscar todos las personas
    GasolineraServiceProvider.prototype.getDataPersonas = function () {
        return this.http.get(this.lru + '/api/datapersona');
    };
    //retorna todos los anuncios con pri=false es decir a todos los anuncios visibles
    GasolineraServiceProvider.prototype.getTodosLosAnuncios = function () {
        return this.http.get(this.lru + '/api/todosanucios');
    };
    //para retornar todos los datos de la base de datos con pri en true es decir todos los usuarios nuevos
    GasolineraServiceProvider.prototype.getDataPersonasNew = function () {
        return this.http.get(this.lru + '/api/dataperfalse');
    };
    //para retornar todos los datos de la base de datos con dem en true es decir todos los usuarios que ya pagaron
    GasolineraServiceProvider.prototype.getDataPersonasRegis = function () {
        return this.http.get(this.lru + '/api/datapertrue');
    };
    //para retornar todos los datos de los usuarios que se han borrado
    GasolineraServiceProvider.prototype.getDataPersonasDel = function () {
        return this.http.get(this.lru + '/api/userborr');
    };
    // para dar de alta a usuario  en la tabla personal
    GasolineraServiceProvider.prototype.updatePersonAdmin2 = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataper/updateadmin2', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.ok) {
                // this.presentToast4('Su anuncio ha sido publicado, revise su sección personal para administrarlo');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                // this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');     
                // this.global.globalInscripcionPersonal=false
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            // this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalInscripcionPersonal=false  
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    GasolineraServiceProvider.prototype.destacar = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataper/destaca', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.ok) {
                _this.presentToast4('El anuncio ha sido destacado, recarge los anuncios para confirmar');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalInscripcionPersonal=false
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalInscripcionPersonal=false  
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    GasolineraServiceProvider.prototype.bloquearpersona = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataper/destaca2', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.ok) {
                _this.presentToast4('El usuario a sido modificado');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalInscripcionPersonal=false
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalInscripcionPersonal=false  
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //para dar de alta baja a una persona
    GasolineraServiceProvider.prototype.updatePersonAdmin = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/updateadminpersonas', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.ok) {
                _this.presentToast4('Su usuarios ha sido aprovado, ya lo puede administrar');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalInscripcionPersonal=false
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalInscripcionPersonal=false                      
        });
        return result;
    };
    //para borrar a una persona
    GasolineraServiceProvider.prototype.deleteperso = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/deleteperson', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.ok) {
                _this.presentToast4('Su anuncio ha sido borrado, recarge para confirmar');
                // this.global.globalInscripcionPersonal=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                // this.global.globalInscripcionPersonal=false
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalInscripcionPersonal=false                      
        });
        return result;
    };
    // para buscar a un usuario en especifico en la tabla persona
    GasolineraServiceProvider.prototype.getDataPersona = function (item) {
        return this.http.get(this.lru + '/api/datapersona/' + item);
    };
    /* getDataPersona2(item) {
      return this.http.get(this.lru+'/api/datapersona2/'+item)
     }
     */
    GasolineraServiceProvider.prototype.getDataPersona3 = function (item) {
        return this.http.get(this.lru + '/api/datapersona3/' + item);
    };
    //actualiza los datos del GPS de la persona
    GasolineraServiceProvider.prototype.updatePersonaGps = function (item) {
        //this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/updategpsper', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        }, function (err) {
            console.log(err);
        });
        return result;
    };
    //actualiza una fila de la tabla persona
    GasolineraServiceProvider.prototype.updatePersona = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/updateper', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su datos han sido actualizados');
                _this.global.globalActualizaPersona = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalActualizaPersona = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalActualizaPersona = false;
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //crea una fila en la tabla persona
    /* createPersona(item):any {
      this.loadingService.presentLoading();
      let result:any;
      this.http.post(this.lru+'/api/dataxi/createper',JSON.stringify(item), httpOptions)
      .subscribe(data =>{
        result = data;
        console.log(JSON.stringify(result));
        if(result.hello){
         this.presentToast4('Su usuario ha sido creado, por favor cierre y abra la App');
         this.global.globalInscripcion="Su usuario ha sido creado, por favor cierre y abra la App"
         this.global.globalImagen="assets/imgs/loginok.png"
      } else{
        this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
        this.global.globalInscripcion="No se ha podido realizar la operación, revise su conexión a internet"
        this.global.globalImagen="assets/imgs/loginnook.png"
       }
       this.loadingService.dismissLoading();
    }, (err) => {
     console.log(err);
     this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
     this.global.globalInscripcion="No se ha podido realizar la operación, revise su conexión a internet"
     this.global.globalImagen="assets/imgs/loginnook.png"
      this.loadingService.dismissLoading();
    });
    
      return result;
    }
     */
    //inicio yavoy
    //crea una fila en la tabla persona
    GasolineraServiceProvider.prototype.createPersonaYavoy = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.post(this.lru + '/api/dataxi/createperyavoy', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(JSON.stringify(result));
            if (result.hello) {
                _this.presentToast4('Su usuario ha sido creado, por favor cierre y abra la App');
                _this.global.globalInscripcion = "Su usuario ha sido creado";
                _this.global.globalImagen = "assets/imgs/loginok.png";
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalInscripcion = "No se ha podido realizar la operación, revise su conexión a internet";
                _this.global.globalImagen = "assets/imgs/loginnook.png";
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            _this.global.globalInscripcion = "No se ha podido realizar la operación, revise su conexión a internet";
            _this.global.globalImagen = "assets/imgs/loginnook.png";
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //fin yavoy
    //para bloquear al boton de buscar celular 
    GasolineraServiceProvider.prototype.bloquear = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/bloquear', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    // api de las casitas de administracion /////////////////////////////////////////////////////////////////////
    GasolineraServiceProvider.prototype.getDataCasitas = function () {
        return this.http.get(this.lru + '/api/datacasita');
    };
    //actualiza los datos por el administrador
    GasolineraServiceProvider.prototype.updateCasitasCount = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/updatecountcasitas', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    // api de los mensajes ////////////////////////////////////
    GasolineraServiceProvider.prototype.getMensajes = function () {
        return this.http.get(this.lru + '/api/mensaje');
    };
    //para borrar un item de la tabla taxis 
    GasolineraServiceProvider.prototype.deleteMensaje = function (item) {
        var result;
        this.http.put(this.lru + '/api/mensaje/deleteperson', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    GasolineraServiceProvider.prototype.getMensajesreal = function () {
        return this.http.get(this.lru + '/api/mensajereal');
    };
    GasolineraServiceProvider.prototype.getMensajesprueb = function () {
        return this.http.get(this.lru + '/api/mensajeprueb');
    };
    GasolineraServiceProvider.prototype.revisar3 = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/mensajerealtodos', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                // this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getMensajesPerso = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedicompr/' + item);
    };
    GasolineraServiceProvider.prototype.getMensajesCancel2 = function () {
        return this.http.get(this.lru + '/api/mensajecancel');
    };
    // para ver los pedidos de los usuarios personales
    GasolineraServiceProvider.prototype.getMensajesCancel3 = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedianper/' + item); //  datapersonapedi
    };
    GasolineraServiceProvider.prototype.getMensajesCancel4 = function () {
        return this.http.get(this.lru + '/api/userblacklis');
    };
    GasolineraServiceProvider.prototype.getMensajesCancel5 = function () {
        return this.http.get(this.lru + '/api/userblacklisHab');
    };
    GasolineraServiceProvider.prototype.getMensajesNegoPass3 = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimespaper/' + item); //  datapersonapedi
    };
    //api para los taxis /////////////////////////////////////////////////////////////////////////////
    // para regresar todos los post que contengan una palabra en especifico de la tabla ofertas, con paginado 
    GasolineraServiceProvider.prototype.getPalabraNegos = function (item, item2) {
        return this.http.get(this.lru + '/api/buscapalabnego/' + item + '?page=' + item2);
    };
    //regresa todos los campos de un neg especifico
    GasolineraServiceProvider.prototype.getDataNegocio = function (item) {
        // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item) 
        return this.http.get(this.lru + '/api/datanego/' + item);
    };
    //obtiene todos los campos de la tabla taxis con apr=false
    GasolineraServiceProvider.prototype.getDataTaxis = function () {
        //return this.http.get('https://arcane-journey-25634.herokuapp.com/api/dataxi'); 
        return this.http.get(this.lru + '/api/dataxi');
    };
    //obtiene todos los campos de la tabla taxis con apr=true
    GasolineraServiceProvider.prototype.getDataTaxis2 = function () {
        //return this.http.get('https://arcane-journey-25634.herokuapp.com/api/dataxi2'); 
        return this.http.get(this.lru + '/api/dataxifal');
    };
    //obtiene todos los campos de la tabla taxis Registrados
    GasolineraServiceProvider.prototype.getDataTaxisRegis = function () {
        return this.http.get(this.lru + '/api/dataxitrue');
    };
    // para buscar a un usuario en especifico en la tabla taxista a partir del id
    GasolineraServiceProvider.prototype.getDataUser = function (item) {
        return this.http.get(this.lru + '/api/datacasita2/' + item);
    };
    //buscar un usuario a partir del id del telefono
    GasolineraServiceProvider.prototype.getDataUserTax = function (item) {
        return this.http.get(this.lru + '/api/datacasita3/' + item);
    };
    //buscar un usuario a partir del id del telefono
    GasolineraServiceProvider.prototype.getDataUserTax2 = function (item) {
        return this.http.get(this.lru + '/api/datacasita4/' + item);
    };
    //cuenta las llamadas
    GasolineraServiceProvider.prototype.updateTaxisCount = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/updatecount', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //cuenta los sms
    GasolineraServiceProvider.prototype.updateSMSCount = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/updatecountsms', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //cuenta las busquedas de un usuario
    GasolineraServiceProvider.prototype.updateSearchCount = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/updatecountsearch', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //para quitar poner en el mapa
    GasolineraServiceProvider.prototype.updateTaxisAdmin = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/updateadmin', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //para dar de alta a usuario
    GasolineraServiceProvider.prototype.updateTaxisAdmin2 = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/updateadmin2', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //actualiza una fila de la tabla taxi
    GasolineraServiceProvider.prototype.updateTaxis = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/update', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su datos han sido actualizados');
                _this.global.globalActualizaNego = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalActualizaNego = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalActualizaNego = false;
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //actualiza una fila de la tabla taxi
    GasolineraServiceProvider.prototype.updateTaxis4 = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/updatetas', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su datos han sido actualizados');
                _this.global.globalActualizaNego = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalActualizaNego = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalActualizaNego = false;
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    // api de los servicentros ///////////////////////////////////////////////////////////////////////////////////
    GasolineraServiceProvider.prototype.getData = function () {
        return this.http.get(this.lru + '/api/data');
    };
    GasolineraServiceProvider.prototype.update = function (item) {
        var result;
        this.http.put(this.lru + '/api/data/update', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //cargar el mensaje de la segunda api ///////////////////////////////////////////////////////////////
    //prueba para los servicentros
    GasolineraServiceProvider.prototype.getMensaje = function () {
        return this.http.get(this.lru + '/api/mensaje');
    };
    GasolineraServiceProvider.prototype.updateMensaje = function (item) {
        var result;
        this.http.put(this.lru + '/api/mensaje/update', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    GasolineraServiceProvider.prototype.updateMensajeRate = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/rate', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // para dejar un mensaje desde el about, desde mas anuncios y desde destacar
    GasolineraServiceProvider.prototype.createMensaje = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/mensaje/create', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(JSON.stringify(result.hello));
            if (result.hello) {
                _this.presentToast4("Gracias por enviarnos su mensaje le responderemos lo antes posible");
                //this.global.globalAboutDestacarMasAnucios="Gracias por enviarnos su mensaje le responderemos lo antes posible"
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                //this.global.globalAboutDestacarMasAnucios="No se ha podido realizar la operación, revise su conexión a internet"
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalAboutDestacarMasAnucios="No se ha podido realizar la operación, revise su conexión a internet"
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    // para dejar un mensaje desde el about, desde mas anuncios y desde destacar
    GasolineraServiceProvider.prototype.createMensaje2 = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/mensaje/createped', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            console.log(JSON.stringify(result.hello));
            if (result.hello) {
                _this.presentToast4("Gracias por enviarnos su mensaje le responderemos lo antes posible");
                //this.global.globalAboutDestacarMasAnucios="Gracias por enviarnos su mensaje le responderemos lo antes posible"
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                //this.global.globalAboutDestacarMasAnucios="No se ha podido realizar la operación, revise su conexión a internet"
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            //this.global.globalAboutDestacarMasAnucios="No se ha podido realizar la operación, revise su conexión a internet"
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    GasolineraServiceProvider.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 6000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    GasolineraServiceProvider.prototype.revisar = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/revisar', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //aceptar pedido
    GasolineraServiceProvider.prototype.createPedido = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createped2', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //aceptar pedido nego
    GasolineraServiceProvider.prototype.createPedidoNeg = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createpedneg', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //cancelar pedido nego
    GasolineraServiceProvider.prototype.cancelPedidoNeg = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createcan', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //cancelar pedido por el cliente
    GasolineraServiceProvider.prototype.cancelPedidoNeg2 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createcancliente', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //cancelar pedido nego
    GasolineraServiceProvider.prototype.listaNeg = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/actualizaranun3', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.listaNegHab = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/actualizaranun4', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.listaNegQuit = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/listanegfal', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.listaNegQuitHab = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/listanegfalHab', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //el nego marca el pediod como pagado al gestor
    GasolineraServiceProvider.prototype.createPedidoGestor = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createpedgest', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //ponerle saldo al chofer
    GasolineraServiceProvider.prototype.createPedidoSaldo = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createpedsald', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //transformar cliente a al chofer
    GasolineraServiceProvider.prototype.createClientChof = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createclitochof', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //Marca el pedido como visto
    GasolineraServiceProvider.prototype.createPedidoVisto = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createpedvisto', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // plantilla
    // inicio parte predeterminada
    //4-hacer pedido taxi
    GasolineraServiceProvider.prototype.createMensaje4 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createpedtax', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //5-hacer pedido real de P
    GasolineraServiceProvider.prototype.createMensaje3 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createped', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //7-mensajero tomar pedido del negocio
    GasolineraServiceProvider.prototype.createMensajero = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/mensaje/createmensa', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //8- busca a todos los clientes del negocio
    GasolineraServiceProvider.prototype.getDataNegocioPlanUser = function (item) {
        // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item) 
        return this.http.get(this.lru + '/api/datanegoplanuser/' + item);
    };
    //9-busca a los clientes del negocio que mas piden
    GasolineraServiceProvider.prototype.getDataNegocioPlanUserMas = function (item) {
        // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item) 
        return this.http.get(this.lru + '/api/datanegoplanusermas/' + item);
    };
    //10-busca a todos los mensajeros del negocio
    GasolineraServiceProvider.prototype.getDataNegocioPlanUserMensa = function (item) {
        // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item) 
        return this.http.get(this.lru + '/api/datanegoplanmensa/' + item);
    };
    //12-busca los clientes en LN
    GasolineraServiceProvider.prototype.getDataNegocioPlanUserLn = function (item) {
        // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item) 
        return this.http.get(this.lru + '/api/datanegoplanuserln/' + item);
    };
    //fin parte predeterminada
    //para obtener todos los campos destacados de la tabla, las ofertas
    GasolineraServiceProvider.prototype.getFotoEstrella = function () {
        return this.http.get(this.lru + '/api/todasfotos');
    };
    GasolineraServiceProvider.prototype.getFotoEstrella2 = function (item) {
        return this.http.get(this.lru + '/api/todasfotosdes/' + item);
    };
    //para tomar todas las fotos del negocio visibles o no
    GasolineraServiceProvider.prototype.getFotoNegoTodas = function (item) {
        return this.http.get(this.lru + '/api/fotosnegotodas/' + item);
    };
    //para obtener todas las fotos visibles
    GasolineraServiceProvider.prototype.getFotoNego = function (item) {
        return this.http.get(this.lru + '/api/fotosnego/' + item);
    };
    //cuenta las veces que se ven los detalles de un negocio, los productos
    GasolineraServiceProvider.prototype.updateTaxisCountView = function (item) {
        var result;
        this.http.put(this.lru + '/api/dataxi/updatecountnego', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
        });
        return result;
    };
    //actualiza una fila de la tabla taxi a partir del id (elimina/pone el servicio de taxis )
    GasolineraServiceProvider.prototype.updateTaxis3 = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/updatetax', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su datos han sido actualizados. Por favor reinicie para tomar los cambios');
                _this.global.globalActualizaNego = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalActualizaNego = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalActualizaNego = false;
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //actualiza una fila de la tabla taxi a partir del id (actualiza las tarifas de los taxis)
    GasolineraServiceProvider.prototype.updateTaxis2 = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/updatetip', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su datos han sido actualizados');
                _this.global.globalActualizaNego = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalActualizaNego = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalActualizaNego = false;
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //actualiza una fila de la tabla taxi (elimina/pone pago con usd, euro)
    GasolineraServiceProvider.prototype.updateTaxis5 = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/updatediv', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Su datos han sido actualizados. Por favor reinicie para tomar los cambios');
                _this.global.globalActualizaNego = true;
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                _this.global.globalActualizaNego = false;
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet ');
            _this.global.globalActualizaNego = false;
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //actualiza los datos del GPS (cerrar/abrir el nego)
    GasolineraServiceProvider.prototype.updateTaxisGps = function (item) {
        /*  let result:any;
           this.http.put(this.lru+'/api/dataxi/updategps',JSON.stringify(item),   httpOptions )
          .subscribe(data =>{
                result = data;
           }); */
        var _this = this;
        //return result;
        //promesa
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.put(_this.lru + '/api/dataxi/updategps', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //para que el negocio sepa si hay un pedido nuevo (activado desde el GPS)
    GasolineraServiceProvider.prototype.revisar2 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/datapersonapedimes4/' + item, httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                // this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //actualiza los datos del GPS, situando al negocio por primera vez en el mapa
    GasolineraServiceProvider.prototype.updateTaxisGpsNego = function (item) {
        var _this = this;
        var result;
        this.http.put(this.lru + '/api/dataxi/updategpsnego', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            if (result.hello) {
                _this.presentToast4('Coordenada GPS fijada ');
            }
        });
        return result;
    };
    //busca todos los pedidos del mes de productos
    GasolineraServiceProvider.prototype.getMensajesNego = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimes/' + item); //  datapersonapedi
    };
    //busca todos los pedidos del mes pasado de productos
    GasolineraServiceProvider.prototype.getMensajesNegoPass = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimespa/' + item); //  datapersonapedi
    };
    //busca todos los pedidos de prueba en el negocio
    GasolineraServiceProvider.prototype.getMensajesNego4 = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimes3/' + item); //  datapersonapedi
    };
    //busca todos los pedidos cancelados del negocio
    GasolineraServiceProvider.prototype.getMensajesCancel = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedian/' + item); //  datapersonapedi
    };
    //inicio 
    // inscribirse
    GasolineraServiceProvider.prototype.createPersona = function (item) {
        var _this = this;
        // con una promesa  
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.post(_this.lru + '/api/dataxi/createper', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // inscribirse
    GasolineraServiceProvider.prototype.createPersonaCH = function (item) {
        var _this = this;
        // con una promesa  
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.post(_this.lru + '/api/dataxi/createperch', JSON.stringify(item), httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //regresa todos los campos de un neg especifico
    /* getDataNegocioPlan(item) {
      // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item)
      return this.http.get(this.lru+'/api/datanegoplan/'+item)
     }
     */
    //busca todos los pedidos del dia del negocio
    GasolineraServiceProvider.prototype.getMensajesNego2 = function (item) {
        // return this.http.get(this.lru+'/api/datapersonapedimes2/'+item);//  datapersonapedi
        return this.http.get(this.lru2 + '/v1/pedidos?created_at=eq.2023-12-23&idch=eq.1&select=*'); //  datapersonapedi
    };
    //busca todos los pedidos de taxis del mes pasado
    GasolineraServiceProvider.prototype.getMensajesNegoPassTax = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimespatax/' + item); //  datapersonapedi
    };
    //busca todos los pedidos del mes de taxis
    GasolineraServiceProvider.prototype.getMensajesNegoTax = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimestax/' + item); //  datapersonapedi
    };
    //busca todos los pedidos del mes de taxis
    GasolineraServiceProvider.prototype.getMensajesNegoTaxPend = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimestaxpend/' + item); //  datapersonapedi
    };
    //crea una fila en la tabla taxis convirtiendo un cliente en gestor
    GasolineraServiceProvider.prototype.create = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.post(this.lru + '/api/dataxi/create2', JSON.stringify(item), {
            headers: { 'Content-Type': 'application/json' },
            observe: 'response'
        }).subscribe(function (data) {
            result = data;
            console.log(JSON.stringify(result.ok));
            if (result.ok) {
                _this.presentToast4('El usuario ha sido creado, por favor reinicie la búsqueda');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
            _this.loadingService.dismissLoading();
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
        });
        return result;
    };
    //para borrar un item de la tabla taxis (gestor)
    GasolineraServiceProvider.prototype.delete = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/delete', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            _this.loadingService.dismissLoading();
            if (result.hello) {
                _this.presentToast4('Usuario eliminado');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        });
        return result;
    };
    //para borrar un item de la tabla persona (chofer) 
    GasolineraServiceProvider.prototype.deleteCh = function (item) {
        var _this = this;
        this.loadingService.presentLoading();
        var result;
        this.http.put(this.lru + '/api/dataxi/deletechofe', JSON.stringify(item), httpOptions)
            .subscribe(function (data) {
            result = data;
            _this.loadingService.dismissLoading();
            if (result.hello) {
                _this.presentToast4('Usuario eliminado');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        });
        return result;
    };
    // predeterminadas
    // predeterminadas
    // 1 -
    GasolineraServiceProvider.prototype.revisar4 = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            console.log("ver la hora: " + _this.lru + '/api/hora/hs/todovia');
            _this.http.get(_this.lru + '/api/hora/hs/todovia', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
                _this.global.global4 = false;
            }, function (err) {
                console.log("no hay conexion: " + err);
                _this.loadingService.dismissLoading();
                // reject(err.json());
                _this.global.global4 = true;
                _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            });
        });
    };
    // 2 -
    GasolineraServiceProvider.prototype.revisarC = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/userclient', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // 3 -
    GasolineraServiceProvider.prototype.revisarCh = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/userchof', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // 4 -
    GasolineraServiceProvider.prototype.revisarCh2 = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/userchofsal', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // 5 -
    GasolineraServiceProvider.prototype.revisarG = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/usergest', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // 6 - ver pedidos de hoy cliente (activado por botones y por GPS en el caso del cliente si tiene al menos un pedido)
    GasolineraServiceProvider.prototype.getMensajesNego32 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/datapersonapedimes2per/' + item, httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                // this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // 7 - historial de pedidos del cliente en el mes
    GasolineraServiceProvider.prototype.getMensajesNego3 = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimesper/' + item); //  datapersonapedi
    };
    // 8 - historial de pedidos del gestor en el mes
    GasolineraServiceProvider.prototype.getMensajesNego3men = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimesmen/' + item); //  datapersonapedi
    };
    // 9 - buscar pedidos de prueba
    GasolineraServiceProvider.prototype.getMensajesNego5 = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimes3per/' + item); //  datapersonapedi
    };
    // 10 - busca todos los pedidos de un cliente especifico (en laravel)
    /*  getDataNegocioPlanUserMasPedi(item) {
      // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item)
      return this.http.get(this.lru+'/api/datanegoplanusermaspedibala/'+item)
     } */
    // 10 -
    //busca todos los pedidos de un chofer en el mes  
    GasolineraServiceProvider.prototype.getDataPersona2 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.http.get(_this.lru + '/api/datapersona2/' + item, httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // 11 - ver pedidos de hoy aceptados por el nego
    //busca todos los pedidos de un chofer en el mes 
    GasolineraServiceProvider.prototype.getDataNegocioPlanUserMasMensa = function (item) {
        // return this.http.get('https://arcane-journey-25634.herokuapp.com/api/datanego/'+item) 
        return this.http.get(this.lru + '/api/datanegoplanusermasmensa/' + item);
    };
    // 12 - ver pedidos de hoy aceptados por el nego
    GasolineraServiceProvider.prototype.getMensajesNego31men = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimes2permen/' + item); //  datapersonapedi
    };
    // 13 -
    GasolineraServiceProvider.prototype.revisarA = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru + '/api/useradm', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // 14- busca un pedido en específico
    GasolineraServiceProvider.prototype.getMensajesNego2especifi = function (item) {
        return this.http.get(this.lru + '/api/datapersonapedimes2especifibala/' + item); //  datapersonapedi
    };
    //fin
    // reverse geocoding
    // https://nominatim.openstreetmap.org/reverse.php?lat=23.113581950347523&lon=-82.36658334732057&zoom=18&format=jsonv2
    GasolineraServiceProvider.prototype.getDataPersona22 = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading3();
            var url = 'https://nominatim.openstreetmap.org/reverse.php?lat=';
            _this.http.get(url + item + '&lon=' + item2 + '&zoom=18&format=jsonv2', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPersona23 = function (item) {
        var _this = this;
        console.log("FUNCIONA " + item);
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading3(); 
            // https://nominatim.openstreetmap.org/search.php?street=san+mariano&country=Cuba&format=jsonv2
            var url = 'https://nominatim.openstreetmap.org/search.php?street=';
            // item = "san+mariano"
            // 
            _this.http.get(url + item + '&country=Cuba&format=jsonv2', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // api 
    //busca todos los pedidos de un chofer en el mes ,
    GasolineraServiceProvider.prototype.revisar5 = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.get('/public/api/hora/hs/todovia', httpOptions)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
                _this.global.global4 = false;
            }, function (err) {
                console.log("no hay conexion: " + err);
                _this.loadingService.dismissLoading();
                // reject(err.json());
                _this.global.global4 = true;
                _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
            });
        });
    };
    // '
    GasolineraServiceProvider.prototype.getDataHoy = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=eq.' + item + '&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPen = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&est=eq.1&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataCan = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&est=eq.4&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataCanPass = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&est=eq.4&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataMesAc = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&est=eq.2&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataMesAcProv = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&est=eq.3&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataMesPasProv = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&prov=eq.1&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataMesPas = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&est=eq.2&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataMesAcChof = function (item, item2, item3) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item);
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/pedidos?created_at=lte.' + item2 + '&created_at=gte.' + item + '&idch=eq.' + item3 + '&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataMesAcClient = function (item, item2, item3) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función" + item + item2);
            //this.presentToast4("llego a la función " + item)created_at=lte.'+item2+'&created_at=gte.'+item+'&
            _this.http.get(_this.lru2 + '/v1/pedidos?idcl=eq.' + item3 + '&select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPersona4 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función");
            //this.presentToast4("llego a la función " + item)
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru2 + '/v1/clientes?select=*,parametros(parametros),id(*)&idt=eq.' + item + '', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                _this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPersona5 = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función");
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/clientes?select=*&order=id', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPersona6 = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función");
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/choferes?select=*&order=fondo', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPersona8 = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función");
            //this.presentToast4("llego a la función " + item)
            _this.http.get(_this.lru2 + '/v1/choferes?select=*&order=fondo', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                // this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPersona9 = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función");
            //this.presentToast4("llego a la función " + item)
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru2 + '/v1/clientes?select=*,parametros(parametros),id(*)&idt=eq.' + item + '&tel=eq.' + item2 + '', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                _this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPersona10 = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("llego a la función");
            //this.presentToast4("llego a la función " + item)
            _this.loadingService.presentLoading();
            _this.http.get(_this.lru2 + '/v1/clientes?select=*,parametros(parametros),id(*)&tel=eq.' + item + '', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.global.global4 = false;
                _this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err);
                _this.global.global4 = true;
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataTrabajando = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading3();  
            console.log("llego a la función");
            // this.presentToast4("llego a la función")
            _this.http.get(_this.lru2 + '/v1/choferes?est=eq.true&apr=eq.true&viaje=eq.false&select=*', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.getDataPedido = function (item) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading3();   '/rest/v1/pedidos?created_at=eq.'+created_at+'&idcl=eq.'+item+'&select=*,choferes(*)' 
            console.log("llego a la función");
            // this.presentToast4("llego a la función")
            _this.http.get(_this.lru2 + '/v1/pedidos?id=eq.' + item + '&select=*,choferes(*)', httpOptions3)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // inscribirse
    GasolineraServiceProvider.prototype.createPersonaClient = function (item) {
        var _this = this;
        // con una promesa  
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.post(_this.lru2 + '/v1/clientes', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                console.log("data : " + data);
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err.error);
                if (err.error.code == 23505) {
                    _this.presentToast4('El teléfono o la contraseña ya existen en el sistema, verifique los datos ');
                }
                _this.loadingService.dismissLoading();
                console.log(err);
                // reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.createSMS = function (item) {
        var _this = this;
        // con una promesa  
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.post(_this.lru2 + '/v1/recuperacion', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                console.log("data : " + data);
                resolve(data); // devuelve la respuesta a la llamada de la API  
                _this.loadingService.dismissLoading();
            }, function (err) {
                console.log(err.error);
                /*        if (err.error.code==23505){
                        this.presentToast4('El teléfono o la contraseña ya existen en el sistema, verifique los datos ');
                      }
                 */
                _this.loadingService.dismissLoading();
                console.log(err);
                // reject(err.json());
            });
        });
    };
    //actualiza una fila de la tabla persona
    GasolineraServiceProvider.prototype.updatePersonaS = function (item, id) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.patch(_this.lru2 + '/v1/clientes?idt=eq.' + id + '', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.updateChoferS = function (item, id) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.patch(_this.lru2 + '/v1/choferes?idt=eq.' + id + '', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //actualiza una fila de la tabla persona
    GasolineraServiceProvider.prototype.updateParams = function (item, id) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.patch(_this.lru2 + '/v1/parametros?id=eq.' + id + '', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //actualiza una fila de la tabla persona
    GasolineraServiceProvider.prototype.updateChofer = function (item, id) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.patch(_this.lru2 + '/v1/choferes?id=eq.' + id + '', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    //actualiza una fila de la tabla persona
    GasolineraServiceProvider.prototype.updateCliente = function (item, id) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.patch(_this.lru2 + '/v1/clientes?id=eq.' + id + '', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                //  reject(err.json());
                if (err.error.code == 23505) {
                    _this.presentToast4('Los datos introducidos ya existen en el sistema, por favor modifíquelos e inténtelo de nuevo. ');
                }
            });
        });
    };
    GasolineraServiceProvider.prototype.createOrder = function (item) {
        var _this = this;
        // con una promesa  
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.post(_this.lru2 + '/v1/pedidos', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.updatePedido = function (item, id) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.loadingService.presentLoading();
            _this.http.patch(_this.lru2 + '/v1/pedidos?id=eq.' + id + '', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                _this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                _this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider.prototype.updatePedido2 = function (item, id) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading();
            _this.http.patch(_this.lru2 + '/v1/pedidos?id=eq.' + id + '', JSON.stringify(item), httpOptions4)
                .subscribe(function (data) {
                resolve(data); // devuelve la respuesta a la llamada de la API     
                //  this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                // this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    // reverse geocoding
    // https://nominatim.openstreetmap.org/reverse.php?lat=23.113581950347523&lon=-82.36658334732057&zoom=18&format=jsonv2
    GasolineraServiceProvider.prototype.get2DataPersona = function (item, item2) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            // this.loadingService.presentLoading3();
            var url = 'https://nominatim.openstreetmap.org/reverse.php?lat=';
            _this.http.get(url + item + '&lon=' + item2 + '&zoom=18&format=jsonv2', httpOptions)
                .subscribe(function (data) {
                console.log("funcion 2");
                resolve(data); // devuelve la respuesta a la llamada de la API     
                // this.loadingService.dismissLoading();
            }, function (err) {
                // console.log(err);
                //  this.loadingService.dismissLoading();
                reject(err.json());
            });
        });
    };
    GasolineraServiceProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["B" /* Injectable */])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_global_global__["a" /* GlobalProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */]])
    ], GasolineraServiceProvider);
    return GasolineraServiceProvider;
}());

//# sourceMappingURL=gasolinera-service.js.map

/***/ }),

/***/ 314:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TabsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__inicio_inicio__ = __webpack_require__(179);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var TabsPage = /** @class */ (function () {
    //tab1Root =InicioPage ;
    //tab2Root =MovilesPage ;
    // tab2Root = GasolineraPage;
    // tab1Root = TaxisPage ;// HomePage ;//  
    // tab2Root = ClasificadosPage;
    // tab2Root =  MenuPage ;
    function TabsPage(events, navCtrl) {
        this.events = events;
        this.navCtrl = navCtrl;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__inicio_inicio__["a" /* InicioPage */]);
    }
    TabsPage.prototype.myMethod = function () {
        //alert('Este es el mensaje de alerte del tab.');
        this.events.publish('user:created', Date.now());
    };
    TabsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({template:/*ion-inline-start:"E:\14\gaso\src\pages\tabs\tabs.html"*/'<ion-tabs color="primary" ng-hide>\n\n  \n\n<!--   <ion-tab [root]="tab1Root" tabTitle="Inicio" tabIcon="home"></ion-tab> \n\n   <ion-tab [root]="tab2Root" tabTitle="Móvil" tabIcon="pin"></ion-tab> \n\n   <ion-tab [root]="tab3Root" tabTitle="Anuncios" tabIcon="people" (ionSelect)="myMethod()" ></ion-tab>  \n\n \n\n    \n\n   <ion-tab color="light" [root]="tab2Root" tabTitle="Anuncios" tabIcon="megaphone" ></ion-tab> \n\n   <ion-tab color="light" [root]="tab2Root" tabTitle="Ofertas" tabIcon="star-outline"></ion-tab>   \n\n -->\n\n   <ion-tab color="light" [root]="tab1Root" tabTitle="TaBuena" ></ion-tab> \n\n</ion-tabs>  \n\n'/*ion-inline-end:"E:\14\gaso\src\pages\tabs\tabs.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Events */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */]])
    ], TabsPage);
    return TabsPage;
}());

//# sourceMappingURL=tabs.js.map

/***/ }),

/***/ 34:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GlobalProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/*
  Generated class for the GlobalProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var GlobalProvider = /** @class */ (function () {
    function GlobalProvider(http) {
        this.http = http;
        //variables globales
        //parte de los anuncios
        this.compglob = [];
        this.globalCarro = {};
        this.global3 = false;
        this.global4 = false;
        this.loadMap = true;
        this.gpsfix = true;
        this.foto = '/public'; // "proxyUrl": "http://localhost/habanaservicentroService/public" "proxyUrl": "https://www.dondeando.nat.cu/public" usado para tomar el identificador de una foto local 
        // public foto: string =''  
        this.foto2 = '';
        this.foto3 = 'https://yghrphnvtfxgmqoecyql.supabase.co/rest';
        // this.constante1()
        this.constante2(); //usado para tomar el identificador de una foto
        // this.constante3()     //usado para tomar el identificador de una foto de i                
        // this.constante4()
    }
    GlobalProvider.prototype.constante1 = function () {
        var key = 'myyu?44qthfqmtxy4mfgfsfxjw{nhjsywtXjw{nhj4uzgqnh4';
        var textToChars2 = function (text) { return text.split('').map(function (c) { return c.charCodeAt(0); }); };
        var IV = textToChars2(key);
        for (var _i = 0, IV_1 = IV; _i < IV_1.length; _i++) {
            var carro = IV_1[_i];
            var c = carro - 5;
            var b = String.fromCharCode(c);
            this.foto = this.foto + b; //variable con el identificador de la foto
        }
    };
    GlobalProvider.prototype.constante2 = function () {
        var key = 'myyux?44|||3itsijfsit3sfy3hz4xytwflj4fuu4uzgqnh4nrfljs4';
        var textToChars2 = function (text) { return text.split('').map(function (c) { return c.charCodeAt(0); }); };
        var IV = textToChars2(key);
        for (var _i = 0, IV_2 = IV; _i < IV_2.length; _i++) {
            var carro = IV_2[_i];
            var c = carro - 5;
            var b = String.fromCharCode(c);
            this.foto2 = this.foto2 + b;
        }
    };
    GlobalProvider.prototype.constante3 = function () {
        var key = 'myyux?44|||3itsijfsit3sfy3hz4uzgqnh4';
        var textToChars2 = function (text) { return text.split('').map(function (c) { return c.charCodeAt(0); }); };
        var IV = textToChars2(key);
        for (var _i = 0, IV_3 = IV; _i < IV_3.length; _i++) {
            var carro = IV_3[_i];
            var c = carro - 5;
            var b = String.fromCharCode(c);
            this.foto = this.foto + b;
        }
    };
    GlobalProvider.prototype.constante4 = function () {
        var key = 'iuuqt;00zklcbzbqfdquo{t{s{bm/tvqbcbtf/dp0sftu';
        var textToChars2 = function (text) { return text.split('').map(function (c) { return c.charCodeAt(0); }); };
        var IV = textToChars2(key);
        console.log("foto IV: " + IV);
        for (var _i = 0, IV_4 = IV; _i < IV_4.length; _i++) {
            var carro = IV_4[_i];
            var c = carro - 1;
            var b = String.fromCharCode(c);
            this.foto3 = this.foto3 + b;
        }
        // console.log("foto3: "+this.foto3)
        /*
           for (let carro of IV) {
             let c=carro +5
           let b=String.fromCharCode(c)
           foto=foto+b
           } */
        // console.log("foto3: "+this.foto3)
    };
    GlobalProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["B" /* Injectable */])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */]])
    ], GlobalProvider);
    return GlobalProvider;
}());

//# sourceMappingURL=global.js.map

/***/ }),

/***/ 356:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_unique_device_id__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_global_global__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};











var AdminPage = /** @class */ (function () {
    function AdminPage(navCtrl, navParams, gasolineraService, loadingService, uniqueDeviceID, alertController, toastCtrl, socialSharing, device, global) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.gasolineraService = gasolineraService;
        this.loadingService = loadingService;
        this.uniqueDeviceID = uniqueDeviceID;
        this.alertController = alertController;
        this.toastCtrl = toastCtrl;
        this.socialSharing = socialSharing;
        this.device = device;
        this.global = global;
        this.vista = 'mapa';
        this.carros = [];
        this.users = [];
        this.carros2 = []; // para encima y debajo del promedio de llamadas
        this.carros3 = []; // para encima y debajo del promedio de las busquedas de un idt
        this.users2 = []; // solo para mostrar los anuncios de uns persona en especifico
        this.users3 = []; // para mostrar los mensajes de Destacar, Mas anuncios y el About
        this.fotos = [];
        this.res = this.navParams.get('res'); // objeto con los datos del negocio
    }
    AdminPage.prototype.ionViewDidLoad = function () {
        this.personaDel = false;
        this.fotoborrada = false;
        this.ctrlParental = false;
        this.vadmin = false;
        // this.cargarTaxisDisponibles(); 
        this.buscaper = false;
        this.buscaper2 = false;
        //this.tomarID();
        this.maxllama = 0;
        this.maxsms = 0;
        this.cantUsuarios = 0;
        this.cantUsuariosBusqueda = 0;
        this.llamaProm = 0;
        this.visitas = 0;
        this.visitasProm = 0;
        this.comparar = false;
        this.debajo = true;
        this.debajo2 = false;
        this.buscarPersona = false;
        this.mensaje = false;
        this.mensajeros = false;
        this.negocios = false;
        this.promBusquedasControl = 0;
        this.visita = false;
        this.siteName = '';
        this.shareImageNi = this.global.foto2 + '7WUGI64hXRnJaXlo03FYqojWJJ5RW9RH99ErQ5IW.png';
    };
    AdminPage.prototype.controlParental = function () {
        this.ctrlParental = true;
        this.cargarPersonasRegistradas();
    };
    AdminPage.prototype.verMensajes = function () {
        var _this = this;
        this.personaDel = false;
        this.debajo2 = false;
        this.ctrlParental = false;
        this.mensaje = true;
        this.presentToast4('ver mensajes');
        this.loadingService.presentLoading();
        this.gasolineraService.getMensajes().subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.mensaje) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    // borra a un taxista
    AdminPage.prototype.borrarMensaje = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: 'Oprima Si, si desea eliminar al mensaje.</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": carro.id,
                                        };
                                        var result = _this.gasolineraService.deleteMensaje(i);
                                        //let index = this.datasource.source.indexOf(item);
                                        //this.datasource.source.splice(index,1);
                                        console.log(result);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AdminPage.prototype.verMensajes3 = function () {
        var _this = this;
        console.log("res " + this.res);
        this.gasolineraService.getDataNegocioPlanUser(this.res).subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            // this.porciento=0
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                /*   if(carro.apr){
                   this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                  } */
                if (carro.nam) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    AdminPage.prototype.hacermensa = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '¿Usted desea crear un Negocio de este usuario?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Sí',
                                    handler: function () {
                                        var i = {
                                            "id": carro.id,
                                            "idt": carro.idt,
                                            "nam": carro.nam,
                                            "lat": "23.08851803",
                                            "lng": "-82.49170739",
                                            "est": true,
                                            "cha": "Venta de productos",
                                            "mod": "no",
                                            "tel": carro.tel,
                                            "cor": carro.cor,
                                            "eda": "1000",
                                            //"lla":0,
                                            "apr": false,
                                            "ini": "Período de Prueba",
                                            "ven": "Período de Prueba",
                                            "tax": true,
                                            "dem": true,
                                            "neg": "1",
                                            "tar": "no",
                                            "fot": 70,
                                            // "created_at":"2019-11-30 00:02:10",
                                            // "updated_at":"2019-11-30 00:02:10"
                                            "ntf": false,
                                            "res": carro.res,
                                        };
                                        console.log("variable : " + i);
                                        var result = _this.gasolineraService.create(i); //api
                                        console.log("resultado : " + result);
                                        console.log(result);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AdminPage.prototype.what = function (carro) {
        var message = " Hola, usted se ha registrado correctamente en la App Mi mensajero. Si lo desea puede unirse a nuestro grupo de WhatsApp con el siguiente enlace:";
        this.socialSharing.shareViaWhatsAppToReceiver("53" + carro.tel, message, this.shareImageNi, "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9").then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    AdminPage.prototype.guardar = function (item) {
        if (item.lat == 0) {
            this.presentToast4('El usuario no posee coordenadas');
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */], { item: item });
        }
    };
    AdminPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    AdminPage.prototype.buscarUsuario = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.debajo2 = false;
                        return [4 /*yield*/, this.alertController.create({
                                subTitle: "<strong>¡Buscar anuncios!",
                                message: 'Introduce el número Identificador del celular',
                                inputs: [
                                    {
                                        name: 'telefono',
                                        placeholder: 'Número Identificador'
                                    },
                                ],
                                buttons: [
                                    {
                                        text: 'No',
                                        role: 'cancel',
                                        handler: function (blah) {
                                        }
                                    }, {
                                        text: 'Si',
                                        handler: function (data) {
                                            // console.log(JSON.stringify(data)); //to see the object
                                            //console.log(data);
                                            //console.log(data.telefono);
                                            //this.telefono=data.telefono;
                                            //this.sendTextMessage();     
                                            //busca el id del telefono en la tabla persona
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getDataUserTax(data.telefono).subscribe(function (response) {
                                                _this.nuevos = false;
                                                _this.comparar = false;
                                                _this.carros = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                console.log(response);
                                                _this.loadingService.dismissLoading();
                                            }, function (error) {
                                                _this.loadingService.presentError();
                                                _this.loadingService.dismissLoading();
                                            });
                                        }
                                    }
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AdminPage.prototype.buscarUsuario2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.personaDel = false;
                        this.debajo2 = false;
                        this.ctrlParental = false;
                        this.mensaje = false;
                        return [4 /*yield*/, this.alertController.create({
                                subTitle: "<strong>¡Buscar anuncios!",
                                message: 'Introduce el número Identificador del celular',
                                inputs: [
                                    {
                                        name: 'telefono',
                                        placeholder: 'Número Identificador'
                                    },
                                ],
                                buttons: [
                                    {
                                        text: 'No',
                                        role: 'cancel',
                                        handler: function (blah) {
                                        }
                                    }, {
                                        text: 'Si',
                                        handler: function (data) {
                                            // console.log(JSON.stringify(data)); //to see the object
                                            //console.log(data);
                                            //console.log(data.telefono);
                                            //this.telefono=data.telefono;
                                            //this.sendTextMessage();     
                                            //busca el id del telefono en la tabla persona
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getDataPersona(data.telefono).subscribe(function (response) {
                                                _this.nuevos = true;
                                                _this.buscarPersona = true;
                                                //this.comparar=false
                                                _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                console.log(response);
                                                _this.cantUsuarios = 0;
                                                for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                                                    var carro = _a[_i];
                                                    if (!carro.pri) {
                                                        _this.cantUsuarios++;
                                                    }
                                                    else {
                                                        _this.cantUsuarios++;
                                                    }
                                                }
                                                _this.loadingService.dismissLoading();
                                            }, function (error) {
                                                _this.loadingService.presentError();
                                                _this.loadingService.dismissLoading();
                                            });
                                        }
                                    }
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AdminPage.prototype.buscarAnuncio = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.personaDel = false;
                        this.debajo2 = false;
                        this.ctrlParental = false;
                        this.mensaje = false;
                        return [4 /*yield*/, this.alertController.create({
                                subTitle: "<strong>¡Buscar un anuncio!",
                                message: 'Introduce el número del Anuncio',
                                inputs: [
                                    {
                                        name: 'telefono',
                                        placeholder: 'Número Identificador'
                                    },
                                ],
                                buttons: [
                                    {
                                        text: 'No',
                                        role: 'cancel',
                                        handler: function (blah) {
                                        }
                                    }, {
                                        text: 'Si',
                                        handler: function (data) {
                                            // console.log(JSON.stringify(data)); //to see the object
                                            //console.log(data);
                                            //console.log(data.telefono);
                                            //this.telefono=data.telefono;
                                            //this.sendTextMessage();     
                                            //busca el id del telefono en la tabla persona
                                            _this.loadingService.presentLoading();
                                            _this.gasolineraService.getAnuncio(data.telefono).subscribe(function (response) {
                                                _this.nuevos = true;
                                                _this.buscarPersona = true;
                                                //this.comparar=false
                                                _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                console.log(response);
                                                _this.cantUsuarios = 0;
                                                for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                                                    var carro = _a[_i];
                                                    if (!carro.pri) {
                                                        _this.cantUsuarios++;
                                                    }
                                                    else {
                                                        _this.cantUsuarios++;
                                                    }
                                                }
                                                _this.loadingService.dismissLoading();
                                            }, function (error) {
                                                _this.loadingService.presentError();
                                                _this.loadingService.dismissLoading();
                                            });
                                        }
                                    }
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    // actualizacion por parte del administrador
    // borra a una persona
    AdminPage.prototype.deleteItem2 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: 'Oprima Si, si desea eliminar a su usuario.</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //  cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": carro.id,
                                        };
                                        var result = _this.gasolineraService.deleteperso(i);
                                        //let index = this.datasource.source.indexOf(item);
                                        //this.datasource.source.splice(index,1);
                                        console.log(result);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AdminPage.prototype.bloquear = function (carro) {
        var i = {
            "id": carro.id,
            "blo": this.aprov,
        };
        var result = this.gasolineraService.bloquear(i);
    };
    // borra a un taxista
    AdminPage.prototype.deleteItem = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: 'Oprima Si, si desea eliminar a su usuario.</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": carro.id,
                                        };
                                        var result = _this.gasolineraService.delete(i);
                                        //let index = this.datasource.source.indexOf(item);
                                        //this.datasource.source.splice(index,1);
                                        console.log(result);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    // actualizacion por parte del administrador para aprovar o desaprovar a un taxista
    AdminPage.prototype.updateItemAdmin = function (carro) {
        var i = {
            "id": carro.id,
            //"idt":"d9999a",
            //"nam":"Alexander",
            //"lat":"23.06974254",//.06974254
            //"lng":"-82.46458121",//.46458121
            //"est":this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            "apr": this.aprov,
        };
        var result = this.gasolineraService.updateTaxisAdmin(i); //api
        console.log(result);
    };
    // para pasar a una persona a cliente
    AdminPage.prototype.updateItemAdmin2 = function (carro) {
        var i = {
            "id": carro.id,
            //"idt":"d9999a",
            //"nam":"Alexander",
            //"lat":"23.06974254",//.06974254
            //"lng":"-82.46458121",//.46458121
            //"est":this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            //"apr":this.aprov,
            "ini": this.id,
            //"ven":"2019-11-30 00:02:10",
            //"tax":false,
            "dem": this.aprov,
        };
        var result = this.gasolineraService.updatePersonAdmin2(i); //api
        console.log(result);
    };
    // para des bloquear la opcion de busqueda
    AdminPage.prototype.desbloquear = function (carro) {
        var i = {
            "id": carro.id,
            "apr": false,
        };
        var result = this.gasolineraService.bloquearpersona(i); //api
        console.log(result);
    };
    // para bloquear la opcion de busqueda
    AdminPage.prototype.bloquear2 = function (carro) {
        var i = {
            "id": carro.id,
            "apr": true,
        };
        var result = this.gasolineraService.bloquearpersona(i); //api
        console.log(result);
    };
    // para pasar a una persona a cliente
    AdminPage.prototype.destacar = function (carro) {
        var i = {
            "id": carro.id,
            //"idt":"d9999a",
            //"nam":"Alexander",
            //"lat":"23.06974254",//.06974254
            //"lng":"-82.46458121",//.46458121
            //"est":this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            //"apr":this.aprov,
            "ini": this.id,
            //"ven":"2019-11-30 00:02:10",
            //"tax":false,
            "des": this.aprov,
        };
        var result = this.gasolineraService.destacar(i); //api
        console.log(result);
    };
    // para poner-quitar a una persona en el mapa, dar de alta-baja
    AdminPage.prototype.updateItemAdmin4 = function (carro) {
        var i = {
            "id": carro.id,
            //"idt":"d9999a",
            //"nam":"Alexander",
            //"lat":"23.06974254",//.06974254
            //"lng":"-82.46458121",//.46458121
            //"est":this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            "apr": this.aprov,
        };
        var result = this.gasolineraService.updatePersonAdmin(i); //api
        console.log(result);
    };
    AdminPage.prototype.desaprovado = function () {
        this.aprov = false;
    };
    AdminPage.prototype.aprova = function () {
        this.aprov = true;
    };
    AdminPage.prototype.tomarID = function () {
        //this.id= "d9d58a44-08a6-df2b"  
        /*  this.uniqueDeviceID.get()
        .then((uuid: any) => this.id = uuid.substring(0,6))
        .catch((error: any) => console.log(error));
      */
        this.id = this.device.uuid.substring(0, 6);
    };
    //para buscar todas las personas que se han borrado
    AdminPage.prototype.getUsuariosBorrados = function () {
        var _this = this;
        this.personaDel = true;
        this.debajo2 = false;
        this.ctrlParental = false;
        this.mensaje = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataPersonasDel().subscribe(function (response) {
            _this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.cantUsuarios = 0;
            //this.buscaper2=false 
            _this.nuevos = true; //para la vista
            _this.buscarPersona = false; //para la vista
            for (var _i = 0, _a = _this.users; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.dem) {
                    _this.cantUsuarios++;
                }
                if (carro.dem) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    //para buscar todas las personas
    AdminPage.prototype.getDataUserPersonas = function () {
        var _this = this;
        this.personaDel = false;
        this.debajo2 = false;
        this.ctrlParental = false;
        this.mensaje = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataPersonasNew().subscribe(function (response) {
            _this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.cantUsuarios = 0;
            //this.buscaper2=false 
            _this.buscarPersona = false; //para la vista
            _this.nuevos = true; //para la vista
            _this.buscarPersona = false; //para la vista
            for (var _i = 0, _a = _this.users; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.dem) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    AdminPage.prototype.cargarPersonasRegistradas = function () {
        var _this = this;
        this.personaDel = false;
        this.debajo2 = false;
        this.ctrlParental = false;
        this.mensaje = false;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataPersonasNew().subscribe(//getDataPersonasRegis
        function (response) {
            _this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.cantUsuarios = 0;
            _this.cantUsuariosBusqueda = 0;
            _this.cantBusquedas = 0;
            //this.buscaper2=false//para la vista
            _this.buscarPersona = true; //para la vista
            _this.nuevos = false; //para la vista
            for (var _i = 0, _a = _this.users; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.dem) {
                    _this.cantUsuarios++;
                }
                if (carro.bus > 0) {
                    _this.ctrlParental = true;
                    _this.cantUsuariosBusqueda++;
                    _this.cantBusquedas = _this.cantBusquedas + carro.bus;
                }
            }
            _this.promBusquedasControl = _this.cantUsuariosBusqueda / _this.cantBusquedas;
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    //para buscar todas las personas
    AdminPage.prototype.contarAnuncios = function () {
        var _this = this;
        this.personaDel = false;
        this.debajo2 = false;
        this.ctrlParental = false;
        this.mensaje = false;
        this.nuevos = true;
        this.loadingService.presentLoading();
        this.buscaper2 = false;
        this.gasolineraService.getTodosLosAnuncios().subscribe(function (response) {
            _this.nuevos = true;
            _this.buscarPersona = true;
            _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.cantUsuarios = 0;
            for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.pri) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    //Cargar taxis disponibles
    AdminPage.prototype.cargarTaxisDisponibles = function () {
        var _this = this;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataTaxis2().subscribe(function (response) {
            _this.carros = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.comparar = false;
            _this.buscaper2 = false;
            //buscar si existe el ID en el JSON 
            for (var _i = 0, _a = _this.carros; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.ida == _this.id) {
                    _this.vadmin = true;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    //busca las busquedas de idt por encima y por debajo del promedio
    AdminPage.prototype.cargarEncimaPro2 = function () {
        var _this = this;
        this.debajo2 = true;
        this.ctrlParental = true;
        this.mensaje = true;
        this.gasolineraService.getDataPersonasNew().subscribe(//getDataPersonasRegis
        function (response) {
            _this.carros3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.debajo2 = true;
            _this.debajo = true;
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    AdminPage.prototype.cargarDebajoPro2 = function () {
        var _this = this;
        this.debajo2 = true;
        this.ctrlParental = true;
        this.mensaje = true;
        this.gasolineraService.getDataPersonasNew().subscribe(//getDataPersonasRegis
        function (response) {
            _this.carros3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.debajo2 = false;
            _this.debajo = false;
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    //busaca las llamadas por encima y por debajo del promedio
    AdminPage.prototype.cargarEncimaPro = function () {
        var _this = this;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataTaxisRegis().subscribe(function (response) {
            _this.carros2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion    
            _this.buscaper2 = false;
            _this.comparar = true;
            _this.debajo = true;
            _this.visita = false;
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    // carga a las visitas que esten por encima del promedio
    AdminPage.prototype.cargarDebajoPro = function () {
        var _this = this;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataTaxisRegis().subscribe(function (response) {
            _this.carros2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion    
            _this.buscaper2 = false;
            _this.comparar = true;
            _this.debajo = false;
            _this.visita = false;
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    //Cargar taxis de Clientes
    AdminPage.prototype.cargarTaxisRegis = function () {
        var _this = this;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataTaxisRegis().subscribe(function (response) {
            _this.carros = response; //Posiciones objeto con la informacion del carro, chofer y la posicion    
            _this.buscaper2 = false;
            //buscar si existe el ID en el JSON 
            //sacar el promedio de la cantidad de llamadas
            _this.maxllama = 0;
            _this.maxsms = 0;
            _this.cantUsuarios = 0;
            _this.llamaProm = 0;
            _this.visitas = 0;
            for (var _i = 0, _a = _this.carros; _i < _a.length; _i++) {
                var carro = _a[_i];
                _this.cantUsuarios++;
                _this.maxsms = _this.maxsms + carro.sms;
                _this.maxllama = _this.maxllama + carro.lla;
                _this.visitas = _this.visitas + carro.vis;
                if (carro.ida == _this.id) {
                    _this.vadmin = true;
                }
            }
            _this.llamaProm = _this.maxllama / _this.cantUsuarios;
            _this.visitasProm = _this.visitas / _this.cantUsuarios;
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    AdminPage.prototype.cargarTaxisRegistrados = function () {
        this.fotoborrada = false;
        this.nuevos = false;
        this.mensajeros = false;
        this.negocios = false;
        this.cargarTaxisRegis();
    };
    AdminPage.prototype.cargarTaxisNuevos = function () {
        this.fotoborrada = false;
        this.nuevos = true;
        this.cargarTaxisDisponibles();
    };
    AdminPage.prototype.cargarTaxisRegistrados2 = function () {
        this.fotoborrada = false;
        this.nuevos = false;
        this.mensajeros = false;
        this.negocios = true;
        this.cargarTaxisRegis();
    };
    AdminPage.prototype.cargarTaxisRegistrados3 = function () {
        this.fotoborrada = false;
        this.nuevos = false;
        this.mensajeros = true;
        this.negocios = false;
        this.cargarTaxisRegis();
    };
    AdminPage.prototype.fotosboradas = function () {
        this.nuevos = false;
        this.mensajeros = false;
        this.negocios = false;
        this.fotoborrada = true;
        this.cargarfotos();
    };
    AdminPage.prototype.borrarfoto = function (carro) {
        var i = {
            "id": carro.id,
        };
        var result = this.gasolineraService.deleteFotoBorrada(i);
        //let index = this.datasource.source.indexOf(item);
        //this.datasource.source.splice(index,1);
        console.log(result);
    };
    AdminPage.prototype.cargarfotos = function () {
        var _this = this;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataFotoDel().subscribe(function (response) {
            _this.fotos = response; //Posiciones objeto con la informacion del carro, chofer y la posicion    
            _this.buscaper2 = false;
            //buscar si existe el ID en el JSON 
            //sacar el promedio de la cantidad de llamadas     
            /*    for (let carro of this.fotos) {
                 
              } */
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    // actualizacion por parte del administrador para aprovar o desaprovar a un taxista
    AdminPage.prototype.updateItemAdmin3 = function (carro) {
        var i = {
            "id": carro.id,
            //"idt":"d9999a",
            //"nam":"Alexander",
            //"lat":"23.06974254",//.06974254
            //"lng":"-82.46458121",//.46458121
            //"est":this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            "apr": false,
            //"ini":"2019-11-30 00:02:10",
            //"ven":"2019-11-30 00:02:10",
            //"tax":false,
            "dem": this.aprov,
            // "created_at":"2019-11-30 00:02:10",
            // "updated_at":"2019-11-30 00:02:10"
            "ida": this.id,
        };
        var result = this.gasolineraService.updateTaxisAdmin2(i); //api
        console.log(result);
    };
    AdminPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-admin',template:/*ion-inline-start:"E:\14\gaso\src\pages\admin\admin.html"*/'<ion-header> \n\n  <ion-navbar color="primary">\n\n    <ion-title>Usuarios  </ion-title>\n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n\n\n\n\n<ion-content padding>\n\n  <ion-buttons > \n\n    <button  ion-button block   icon-only color="verde"  (click)="verMensajes3()" >\n\n      <ion-icon name="person"> </ion-icon>  Clientes     \n\n    </button>  \n\n  </ion-buttons> \n\n\n\n  \n\n  <div *ngFor="let carro of users3" > \n\n    <ion-card  >         \n\n        <!-- <img src="{{product.url}}" style="padding: 0px;width: 50%" class="imgRedonda">        -->\n\n        <ion-card-content > \n\n          \n\n\n\n             <div >\n\n\n\n              <div  style="text-align:center"> \n\n                  <h2>  <b><ion-icon name="person"> </ion-icon> Nombre: </b> {{carro.nam}} </h2> \n\n                  <h2><b> <ion-icon name="call"> </ion-icon> Teléfono: </b> {{carro.tel}} </h2>     \n\n                  <h2> <b><ion-icon name="mail"> </ion-icon> Correo: </b>{{carro.cor}}</h2> \n\n                  <h2> <b><ion-icon name="mail"> </ion-icon> Pedidos: </b>{{carro.con}}</h2>                         \n\n              </div>\n\n\n\n              <ion-row align-items-center padding >                      \n\n                  <ion-col size="4" *ngIf="carro.pri">                            \n\n                    <button  ion-button clear item-end (click)="hacermensa(carro)"><ion-icon name="build"></ion-icon></button>\n\n\n\n                  </ion-col> \n\n\n\n              </ion-row>\n\n\n\n          </div>\n\n                \n\n        </ion-card-content>  \n\n     </ion-card> \n\n                          \n\n </div> \n\n  \n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\admin\admin.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_unique_device_id__["a" /* UniqueDeviceID */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__["a" /* Device */],
            __WEBPACK_IMPORTED_MODULE_8__providers_global_global__["a" /* GlobalProvider */]])
    ], AdminPage);
    return AdminPage;
}());

//# sourceMappingURL=admin.js.map

/***/ }),

/***/ 357:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WelcomePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_unique_device_id__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__ = __webpack_require__(86);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};


//import { UniqueDeviceID } from '@ionic-native/unique-device-id';
//import {BackgroundGeolocation, BackgroundGeolocationConfig,BackgroundGeolocationResponse,BackgroundGeolocationEvents} from "@ionic-native/background-geolocation";
//import { HTTP } from "@ionic-native/http";









/**
 * Generated class for the WelcomePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var WelcomePage = /** @class */ (function () {
    function WelcomePage(navCtrl, navParams, uniqueDeviceID, formBuilder, 
        // private http: HTTP,
        // private backgroundGeolocation: BackgroundGeolocation,
        toastCtrl, //mensaje cada vez que el location trabaja
        gasolineraService, geoLocation, loadingService, device) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.uniqueDeviceID = uniqueDeviceID;
        this.formBuilder = formBuilder;
        this.toastCtrl = toastCtrl;
        this.gasolineraService = gasolineraService;
        this.geoLocation = geoLocation;
        this.loadingService = loadingService;
        this.device = device;
        this.toggle = true;
        this.myForm = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].maxLength(200), __WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].minLength(6), __WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].maxLength(10), __WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_5__angular_forms__["f" /* Validators */].required])],
        });
    }
    WelcomePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad WelcomePage');
        this.localizar();
        this.tomarID();
        this.newMsg = " ";
        this.newMsg2 = " ";
        this.id = '';
    };
    WelcomePage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    // lo nuevo
    WelcomePage.prototype.tomarID = function () {
        //this.id= "d9d58a44-08a6-df2b"  
        /*     this.uniqueDeviceID.get()
           .then((uuid: any) => this.id = uuid.substring(0,6))
           .catch((error: any) => console.log(error)); */
        this.id = this.device.uuid.substring(0, 6);
    };
    WelcomePage.prototype.localizar = function () {
        var _this = this;
        this.geoLocation.getCurrentPosition().then(function (resp) {
            _this.lat = resp.coords.latitude;
            _this.lon = resp.coords.longitude;
        }).catch(function (error) {
            console.log('Error getting location', error);
        });
    };
    WelcomePage.prototype.next = function () {
        this.slides.slideNext();
    };
    WelcomePage.prototype.prev = function () {
        this.slides.slidePrev();
    };
    WelcomePage.prototype.abrir = function () {
    };
    WelcomePage.prototype.enviamsg = function () {
        if (!this.myForm.valid) {
            this.presentToast4('Error en los datos ');
        }
        else {
            //this.presentToast4('Todo bien');   
            // this.loadingService.presentLoading()
            //let i = { "id": this.gasolineraProvider.tempdata.id,"name": name.value };
            var i = {
                "mensaje": this.vtelefono,
                "booleano": this.id + ' : ' + this.lat + ' ,' + this.lon,
                "mensajeprincipal": this.newMsg2,
            };
            this.result = this.gasolineraService.createMensaje(i); //api
            //let index = this.gasolineraProvider.source.indexOf(this.gasolineraProvider.tempdata);
            //this.gasolineraProvider.source[index] = i;
            console.log(i);
            this.toggle = false;
            //this.presentToast4(JSON.stringify(this.result)); //JSON.stringify(result)
            this.presentToast4('Gracias por enviarnos su mensaje le responderemos lo antes posible');
            // this.loadingService.dismissLoading();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])('slides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Slides */]
        //para escribir mensaje
        )
    ], WelcomePage.prototype, "slides", void 0);
    WelcomePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-welcome',template:/*ion-inline-start:"E:\14\gaso\src\pages\welcome\welcome.html"*/'<!--\n\n  Generated template for the WelcomePage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header class="bar-positive">\n\n  <ion-navbar color="primary" style="padding: 0px;">\n\n\n\n    <ion-title>\n\n      <ion-icon name="contact"> Autor </ion-icon> \n\n        </ion-title>\n\n        \n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n\n\n<ion-content padding id="welcome">  \n\n  \n\n  \n\n  <div >  \n\n      <h1>Mi Mensajero</h1>  \n\n      <h3>  Versión  3.0 Oficial</h3>  \n\n      <img src="assets/imgs/servimovil.png"  class="logo" >\n\n         </div>\n\n  \n\n\n\n   \n\n<!-- \n\n  <ion-slides #slides autoplay="1000" loop="true"  speed="3000" style="height: 70%">\n\n\n\n\n\n    <ion-slide style="width: 100%">\n\n      <img src="assets/imgs/comunidad.png" style="padding: 0px;" class="imgRedonda">\n\n\n\n      <p style="padding: 20px;">Formar parte  de la comunidad de choferes  </p>\n\n      <div style="position: absolute;top: 50%;left: 16px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n          <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n        </div>\n\n        <div style="position: absolute;top: 50%;right: 16px;font-size: 25px;z-index: 2;" (click)="next()">\n\n          <ion-icon name="arrow-forward" color="primary"></ion-icon>\n\n        </div>\n\n    </ion-slide>\n\n\n\n    <ion-slide style="width: 100%">\n\n      <img src="assets/imgs/compartir2.png" style="padding: 0px;" class="imgRedonda">\n\n\n\n      <div class="ion-text-justify" >\n\n      <p style="padding: 20px;">Conocer y compartir en tiempo real la disponibilidad del combustible en los servicentros de la capital</p>\n\n    </div>\n\n    <div style="position: absolute;top: 50%;left: 16px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n        <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n      </div>\n\n      <div style="position: absolute;top: 50%;right: 16px;font-size: 25px;z-index: 2;" (click)="next()">\n\n        <ion-icon name="arrow-forward" color="primary"></ion-icon>\n\n      </div>\n\n\n\n    </ion-slide>\n\n\n\n    \n\n    <ion-slide style="width: 100%" >\n\n      <img src="assets/imgs/telefono.png" style="padding: 20px;" class="imgRedonda">\n\n      <p style="padding: 20px;"> Llamar por teléfono al servicentro deseado </p>\n\n      <div style="position: absolute;top: 50%;left: 16px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n          <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n        </div>\n\n        <div style="position: absolute;top: 50%;right: 16px;font-size: 25px;z-index: 2;" (click)="next()">\n\n          <ion-icon name="arrow-forward" color="primary"></ion-icon>\n\n        </div>\n\n    </ion-slide>\n\n    \n\n    <ion-slide style="width: 100%" >\n\n      <img src="assets/imgs/3.jpg" style="padding: 20px;" class="imgRedonda">\n\n      <p style="padding: 20px;"> Conocer los servicentros más cercanos </p>\n\n      <div style="position: absolute;top: 50%;left: 16px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n          <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n        </div>\n\n        <div style="position: absolute;top: 50%;right: 16px;font-size: 25px;z-index: 2;" (click)="next()">\n\n          <ion-icon name="arrow-forward" color="primary"></ion-icon>\n\n        </div>\n\n    </ion-slide>\n\n\n\n      \n\n      <ion-slide style="width: 100%">\n\n        <img src="assets/imgs/5.jpg" style="padding: 0px;" class="imgRedonda">\n\n\n\n        <p style="padding: 20px;">Inscribirte fácilmente en el sistema  </p>\n\n        <div style="position: absolute;top: 50%;left: 16px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n            <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n          </div>\n\n          <div style="position: absolute;top: 50%;right: 16px;font-size: 25px;z-index: 2;" (click)="next()">\n\n            <ion-icon name="arrow-forward" color="primary"></ion-icon>\n\n          </div>\n\n      </ion-slide>\n\n      \n\n      <ion-slide style="width: 100%">\n\n        <img src="assets/imgs/remolque.png" style="padding: 0px;" class="imgRedonda">\n\n\n\n        <p style="padding: 20px;">Enviar tus coordenadas a los amigos para que vayan a buscarte  </p>\n\n        <div style="position: absolute;top: 50%;left: 16px;font-size: 25px;z-index: 2;" (click)="prev()">\n\n            <ion-icon name="arrow-back" color="primary"></ion-icon>\n\n          </div>\n\n          <div style="position: absolute;top: 50%;right: 16px;font-size: 25px;z-index: 2;" (click)="next()">\n\n            <ion-icon name="arrow-forward" color="primary"></ion-icon>\n\n          </div>\n\n      </ion-slide> \n\n\n\n  </ion-slides>\n\n -->\n\n      \n\n      <div style="text-align:center" >\n\n      <p>Esta aplicación ha sido desarrollada por Ing.Dalexi González Madruga, de conjunto con Lic.Tamara Rendón Portelles. </p>\n\n\n\n       <p>Los datos aquí utilizados son de dominio público y  todo el código es propiedad del autor. </p>\n\n       <br/>\n\n       <p>  Si desea una APP para proteger sus valores como vehículos, celulares, etc puede utilizar:</p>\n\n       <br/> \n\n       <p></p>\n\n       <a href="https://dondeandoblog.wordpress.com/"><h2>DondeAndo </h2> </a><a href="https://www.apklis.cu/es/application/"><img src="assets/imgs/da.png"  class="logo2" >  </a>\n\n       <br/> \n\n  \n\n      <p>  Si desea una APP para ahorrar combustible en La Habana puede utilizar:</p>\n\n       <br/> \n\n       <p></p>\n\n       <a href="https://cubapk.com/store/com.habanaservicentro.com"><h2>Habana Servicentro </h2> </a><a href="https://www.apklis.cu/application/"><img src="assets/imgs/gasolinera.png"  class="logo2" >  </a>\n\n       <br/>\n\n       \n\n       <p> Puede visitar nuestro grupo de Facebook con el  botón siguiente:</p>\n\n       <br/>\n\n       <ion-buttons  >\n\n         <button  ion-button small   icon-only color="primary"  (click)="abrir()" > \n\n           <ion-icon name="logo-facebook" > </ion-icon>       \n\n         </button> \n\n        </ion-buttons>\n\n\n\n       <br/> \n\n  \n\n      <div *ngIf=\'toggle\'> </div>\n\n\n\n                <p> Puede enviarnos su mensaje desde la entrada siguiente:</p>\n\n                <br/>\n\n\n\n            <form [formGroup]="myForm"> \n\n               <ion-item  > \n\n                    <ion-label position="floating"><ion-icon name="call">  Teléfono </ion-icon></ion-label>\n\n                  <ion-input formControlName="telefono" type="number"  [(ngModel)]="vtelefono" [class.invalid]="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n            </ion-item>\n\n\n\n            <ion-item *ngIf="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt)">\n\n                <p>Por favor escriba un número válido.</p>\n\n            </ion-item> \n\n            \n\n            <ion-item  >\n\n                    <ion-label position="floating"><ion-icon name="create">  Mensaje </ion-icon></ion-label>\n\n                      <ion-textarea  formControlName="firstName" type="text"  [(ngModel)]="newMsg2" [class.invalid]="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt) "></ion-textarea>   \n\n                </ion-item>              \n\n   \n\n                <ion-item *ngIf="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt)">\n\n                  <p>Por favor escriba su mensaje.</p>\n\n                 \n\n              </ion-item>\n\n\n\n                <button  right ion-button   color="primary"  (click)="enviamsg()" >\n\n                  <ion-icon name="send"> Enviar Mensaje </ion-icon>                  \n\n                </button> \n\n               \n\n          </form>\n\n       \n\n\n\n       \n\n   <!--     <ion-col size="10" >\n\n                      <ion-textarea formControlName="firstName" type="text" [(ngModel)]="newMsg2" class="message-input" placeholder="Nuevo Mensaje para el frente" >  </ion-textarea>\n\n                  </ion-col>\n\n     -->\n\n      \n\n<!-- \n\n      <h3> contacto: contactolocalizadorgps@gmail.com </h3>   \n\n   <ion-buttons  >\n\n    <button  ion-button small   icon-only color="primary"  (click)="abrir()" >\n\n      Grupo: <ion-icon name="logo-facebook" > </ion-icon>\n\n       \n\n    </button> \n\n   </ion-buttons> -->\n\n      \n\n      </div>\n\n\n\n      \n\n  <div *ngIf="quitarslider">\n\n   \n\n\n\n    <ion-slide style="width: 100%">\n\n      <img src="assets/imgs/4.jpg" style="padding: 0px;" class="imgRedonda">\n\n      <div class="ion-text-justify" >\n\n      <p style="padding: 20px;">Reservar un viaje desde la comodidad de su teléfono</p>\n\n    </div>\n\n    </ion-slide>\n\n\n\n    <ion-slide style="width: 100%">\n\n      <img src="assets/imgs/1.jpg" style="padding: 20px;" class="imgRedonda">\n\n      <p style="padding: 20px;">Contactar al taxista más cercano</p>\n\n    </ion-slide>\n\n\n\n    <ion-slide style="width: 100%" >\n\n      <img src="assets/imgs/2.jpg" style="padding: 20px;" class="imgRedonda">\n\n      <p style="padding: 20px;">Seguir su trayectoria en tiempo real</p>\n\n    </ion-slide>\n\n\n\n  </div>\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\welcome\welcome.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_unique_device_id__["a" /* UniqueDeviceID */],
            __WEBPACK_IMPORTED_MODULE_5__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_6__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_device__["a" /* Device */]])
    ], WelcomePage);
    return WelcomePage;
}());

//# sourceMappingURL=welcome.js.map

/***/ }),

/***/ 358:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HolaPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ruta_ruta__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_global_global__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};









/**
 * Generated class for the HolaPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
//@IonicPage()
var HolaPage = /** @class */ (function () {
    function HolaPage(navCtrl, navParams, gasolineraService, loadingService, toastCtrl, alertController, socialSharing, global) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.gasolineraService = gasolineraService;
        this.loadingService = loadingService;
        this.toastCtrl = toastCtrl;
        this.alertController = alertController;
        this.socialSharing = socialSharing;
        this.global = global;
        this.admin = false;
        this.carr = false;
        this.pedido = {
            "id": " ",
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " ",
            "ven": " "
        };
        //para recibir datos con un pop(), en este caso el tipo de icono desde la pagina taxis
        this.dataFromOtherPage = null;
        this.callback = function (data) {
            _this.dataFromOtherPage = data;
            if (_this.dataFromOtherPage.ok) {
                _this.cambiacolor = true;
                _this.envio = _this.dataFromOtherPage.envio;
                _this.total = +(_this.subtotal + _this.envio).toFixed(2);
                _this.ruta = _this.dataFromOtherPage.ruta;
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage);
        };
        //para recibir datos con un pop(), en este caso el tipo de icono desde la pagina taxis
        this.dataFromOtherPage2 = null;
        this.callback2 = function (data) {
            _this.dataFromOtherPage2 = data;
            if (_this.dataFromOtherPage2.ok) {
                _this.detalles2 = true;
                // this.envio=this.dataFromOtherPage.envio
                // this.total=+(this.subtotal+this.envio).toFixed(2)
                _this.ruta = _this.dataFromOtherPage2.ruta;
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage2);
        };
        this.detalles2 = true;
        this.detalles3 = false;
        this.enviarcompra = false;
        this.enviarvende = false;
        this.pedidocan = false;
        this.carro = this.navParams.get('carro'); // objeto con los datos del negocio
        this.admin = this.navParams.get('bol'); // objeto con los datos del negocio
    }
    HolaPage.prototype.ionViewDidLoad = function () {
        console.log(this.admin);
    };
    HolaPage.prototype.verMensajes = function () {
        var _this = this;
        this.carr = false;
        // this.detalles2=false
        this.detalles3 = false;
        this.enviarcompra = true;
        this.gasolineraService.getMensajesreal().subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.mensaje) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HolaPage.prototype.verMensajesPrueb = function () {
        var _this = this;
        this.carr = false;
        // this.detalles2=false
        this.detalles3 = false;
        this.enviarcompra = false;
        this.gasolineraService.getMensajesprueb().subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.mensaje) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HolaPage.prototype.verMensajesCancel = function () {
        var _this = this;
        this.carr = false;
        // this.detalles2=false
        this.detalles3 = false;
        this.enviarcompra = false;
        this.gasolineraService.getMensajesCancel2().subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.mensaje) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HolaPage.prototype.verListaNeg = function () {
        var _this = this;
        this.carr = false;
        // this.detalles2=false
        this.detalles3 = false;
        this.enviarcompra = false;
        this.gasolineraService.getMensajesCancel4().subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.mensaje) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HolaPage.prototype.verListaNeg2 = function () {
        var _this = this;
        this.carr = false;
        // this.detalles2=false
        this.detalles3 = false;
        this.enviarcompra = false;
        this.gasolineraService.getMensajesCancel5().subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cantUsuarios = 0;
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.mensaje) {
                    _this.cantUsuarios++;
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    HolaPage.prototype.verCompra = function (carro) {
    };
    HolaPage.prototype.quitarln = function (carro) {
        var _this = this;
        if (carro.hab) {
            this.presentToast4('Usuario quitado de lista negra');
            console.log(carro.id);
            var i = { "id": carro.id
                // "pos":"quitado de lista negra",
            };
            this.gasolineraService.listaNegQuitHab(i)
                .then(function (result) {
                console.log(result);
                if (result.hello) {
                    _this.presentToast4('Usuario quitado de lista negra');
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
        else {
            var i = { "id": carro.id,
                "pos": "quitado de lista negra",
            };
            this.gasolineraService.listaNegQuit(i)
                .then(function (result) {
                console.log(result);
                if (result.hello) {
                    _this.presentToast4('Usuario quitado de lista negra');
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
    };
    HolaPage.prototype.verpedido = function (carro) {
        this.enviarvende = carro.esp;
        this.enviarcompra = carro.apr;
        this.pedidocan = carro.can;
        this.detalles = true;
        this.detalles3 = true;
        this.carr = true;
        this.carrito = [];
        this.carrito = JSON.parse(carro.prd);
        //console.log(this.carrito);
        //console.log(carro.prd);
        this.subtotal = 0;
        for (var _i = 0, _a = this.carrito; _i < _a.length; _i++) {
            var casita = _a[_i];
            this.subtotal = +(this.subtotal + casita.subtotal).toFixed(2);
        }
        this.pedido = JSON.parse(carro.dat);
        // this.pedidoTel = JSON.parse(carro.dat.telneg); 
        this.id = carro.id;
    };
    HolaPage.prototype.verpedido3 = function () {
        this.detalles2 = true;
        this.pedido;
        console.log(this.pedido);
        //abrir pagina de mapa para mostrar solamente la ruta, no retornar algo ni calcular nuevo
    };
    HolaPage.prototype.trackByIdx = function (index, product) {
        return index;
    };
    HolaPage.prototype.verpedido2 = function (carro) {
        this.detalles = false;
        this.carr = true;
        this.pedido = JSON.parse(carro.dat);
        console.log(this.pedido);
        //console.log(carro.prd);
    };
    HolaPage.prototype.borrar = function (carro) {
        var i = {
            "id": carro.id,
        };
        var result = this.gasolineraService.deleteMensaje(i);
    };
    HolaPage.prototype.revisar = function () {
        var _this = this;
        //revisar conexion a internet
        this.gasolineraService.revisar()
            .then(function (result) {
            console.log(result);
            if (result == 200) {
                _this.presentToast4('Pedido realizado');
            }
            else {
                //    this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');  
            }
        }, function (err) {
            console.log(err);
        });
        //fin prueba
    };
    HolaPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 6000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    HolaPage.prototype.what2 = function () {
        var _this = this;
        var i = { "id": this.id,
        };
        //console.log(this.pedido.tel);
        this.presentToast4('Pedido en proceso ' + this.pedido.tel);
        this.gasolineraService.createPedido(i)
            .then(function (result) {
            if (result.hello) {
                _this.enviarvende = true;
                _this.enviarcompra = true;
                //confirmacion para el pedido de 
                /*    let message = "Su pedido ha sido aceptado ";
                  this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                    console.log("success : " + res);
                  }).catch(error => {
                    console.log("failed : " + error);
                  })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HolaPage.prototype.what3 = function () {
        this.presentToast4('Usted ha hecho el pedido ' + this.pedido.id);
        // enviar pedido al Vendedor como una segunda opcion
        /*    let message = "Su pedido ha sido aceptado ";
          this.socialSharing.shareViaWhatsAppToReceiver("this.pedido.tel",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
            console.log("success : " + res);
          }).catch(error => {
            console.log("failed : " + error);
          })  */
    };
    HolaPage.prototype.what4 = function () {
        // enviar pedido al Vendedor aviso de pedido 
        this.presentToast4('Su negocio tiene el pedido ' + this.pedido.id);
        /*    let message = "Su pedido ha sido aceptado ";
          this.socialSharing.shareViaWhatsAppToReceiver("this.pedido.telneg",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
            console.log("success : " + res);
          }).catch(error => {
            console.log("failed : " + error);
          })  */
    };
    //confirmacion despues de ver el mapa
    HolaPage.prototype.what5 = function () {
        var _this = this;
        var i = { "id": this.id,
        };
        this.gasolineraService.createPedido(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido aceptado');
                _this.detalles3 = true;
                // confirmacion del pedido inicial
                /*    let message = "Su pedido ha sido aceptado ";
                  this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                    console.log("success : " + res);
                  }).catch(error => {
                    console.log("failed : " + error);
                  })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    //confirmacion despues de ver el mapa
    HolaPage.prototype.cancel = function () {
        var _this = this;
        var i = { "id": this.id,
        };
        this.gasolineraService.cancelPedidoNeg(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.presentToast4('Pedido cancelado');
                _this.detalles3 = true;
                _this.pedidocan = true;
                // confirmacion del pedido inicial
                /*    let message = "Su pedido ha sido aceptado ";
                  this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
                    console.log("success : " + res);
                  }).catch(error => {
                    console.log("failed : " + error);
                  })  */
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    HolaPage.prototype.openDialogo2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'Usted realmente desea cancelar el pedido ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (blah) {
                                        _this.cancel();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HolaPage.prototype.calculadora = function () {
        var carro = {
            "curPos": this.pedido,
        };
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__ruta_ruta__["a" /* RutaPage */], { carro: carro, callback: this.callback2 }); //
    };
    HolaPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-hola',template:/*ion-inline-start:"E:\14\gaso\src\pages\hola\hola.html"*/'<!--\n\n  Generated template for the HolaPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header>\n\n\n\n  <ion-navbar color="primary">\n\n    <ion-title> {{carro.nam}} </ion-title>\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content padding>\n\n  \n\n\n\n  <ion-row *ngIf="admin" align-items-center padding >   \n\n    <ion-col size="4">                    \n\n      <ion-buttons > \n\n        <button  ion-button block   icon-only color="primary"  (click)="verMensajesCancel()" >\n\n          <ion-icon name="clipboard"> </ion-icon> Cancelados   \n\n        </button>  \n\n      </ion-buttons>          \n\n  </ion-col>\n\n\n\n  <ion-col size="4">                    \n\n    <ion-buttons > \n\n      <button  ion-button block   icon-only color="dark"  (click)="verListaNeg()" >\n\n        <ion-icon name="clipboard">  </ion-icon>  Lista Negra Msg       \n\n      </button>  \n\n    </ion-buttons>          \n\n</ion-col>\n\n\n\n\n\n<ion-col size="4">                    \n\n  <ion-buttons > \n\n    <button  ion-button block   icon-only color="dark"  (click)="verListaNeg2()" >\n\n      <ion-icon name="clipboard">  </ion-icon>  Lista Negra Hab       \n\n    </button>  \n\n  </ion-buttons>          \n\n</ion-col>\n\n</ion-row>\n\n\n\n\n\n  <ion-row *ngIf="admin" align-items-center padding >                           \n\n        <ion-col size="4">            \n\n            <ion-buttons  > \n\n              <button  ion-button block   icon-only color="energy"  (click)="verMensajesPrueb()" >\n\n                <ion-icon name="clipboard"></ion-icon> De Prueba\n\n              </button>  \n\n            </ion-buttons>         \n\n        </ion-col> \n\n        \n\n        <ion-col size="4">                    \n\n            <ion-buttons > \n\n              <button  ion-button block   icon-only color="primary"  (click)="verMensajes()" > \n\n                <ion-icon name="clipboard">  </ion-icon> Reales        \n\n              </button>  \n\n            </ion-buttons>          \n\n        </ion-col>   \n\n </ion-row>      \n\n\n\n\n\n<br>\n\n\n\n\n\n    <!-- parte de los mensajes a los adminstradores -->\n\n    <div>       \n\n      \n\n      <div *ngIf="!carr">\n\n        <h2 ><b>Cantidad de Pedidos:</b> {{cantUsuarios}}</h2>\n\n        <br>\n\n        <div *ngFor="let carro of users3" > \n\n              <ion-card >         \n\n                <!-- <img src="{{product.url}}" style="padding: 0px;width: 50%" class="imgRedonda">        -->\n\n                <ion-card-content > \n\n                         \n\n                        <div  style="text-align:center"> \n\n\n\n                          <div  *ngIf="carro.lsn" > \n\n\n\n                            <h2>  <b><ion-icon name="clipboard"> </ion-icon> ID: </b> {{carro.id}} </h2>                          \n\n                            <h2>  <b><ion-icon name="clipboard"> </ion-icon> IDT: </b> {{carro.idt}} </h2>                                                    \n\n                            <h2>  <b><ion-icon name="clipboard"> </ion-icon> Nombre: </b> {{carro.nam}} </h2>                                                    \n\n                            <h2>  <b><ion-icon name="clipboard"> </ion-icon> Tele: </b> {{carro.tel}} </h2> \n\n                          </div>\n\n\n\n                          <div  *ngIf="!carro.lsn" (click)="verpedido(carro)">\n\n                            <h2 *ngIf="!carro.hab">  <b><ion-icon name="clipboard"> </ion-icon> Pedido desde Mi Mensajero </b>  </h2> \n\n                            <h2 *ngIf="carro.hab">  <b><ion-icon name="clipboard"> </ion-icon> Pedido desde Habana Servicentro </b></h2> \n\n                            <h2 *ngIf="!carro.pru">  <b><ion-icon name="clipboard"> </ion-icon> Pedido Prueba: </b> {{carro.id}} </h2> \n\n                            <h2 *ngIf="carro.pru"><b> <ion-icon name="clipboard"> </ion-icon> Pedido Real: </b> {{carro.id}} </h2>     \n\n                            <h2> <b><ion-icon name="clock"> </ion-icon> Entrega en: </b>{{carro.ent}}</h2> \n\n                            <h2><b><ion-icon name="logo-usd"> </ion-icon> Total:</b> {{carro.mensaje}}</h2>\n\n                            <h2><b>10 % :</b> {{carro.mensajeprincipal}}</h2> \n\n                          </div>\n\n\n\n                        </div>\n\n\n\n                        <ion-row align-items-center padding >  \n\n\n\n<!--                           <ion-col *ngIf="!carro.esp" size="4">\n\n                            <ion-fab middle end >  \n\n                             \n\n                              <button *ngIf="carro.pru" ion-button color="verde" clear item-end (click)="what2(carro)"><ion-icon name="logo-whatsapp"></ion-icon></button>                             \n\n                           \n\n                            </ion-fab>\n\n                          </ion-col> \n\n                          <ion-col *ngIf="carro.esp" size="4">\n\n                            <ion-fab middle end >  \n\n                            \n\n                              <button *ngIf="carro.pru" ion-button color="danger" clear item-end (click)="what2(carro)"><ion-icon name="logo-whatsapp"></ion-icon></button>                             \n\n                             \n\n                            </ion-fab>\n\n                          </ion-col>  \n\n -->                       \n\n                          <ion-col size="4" >\n\n                            <ion-fab middle end *ngIf="carro.lsn">  \n\n                              <button ion-button clear item-end ><ion-icon name="cart"></ion-icon></button>                    \n\n                            </ion-fab>\n\n                          </ion-col> \n\n\n\n                          <ion-col size="4" >\n\n                            <ion-fab middle end *ngIf="!carro.lsn">  \n\n                              <button ion-button clear item-end (click)="verpedido(carro)"><ion-icon name="cart"></ion-icon></button>                    \n\n                            </ion-fab>\n\n                          </ion-col> \n\n \n\n                          <!-- -->\n\n                          <ion-col size="4">\n\n                            <ion-fab middle end >  \n\n                              <button ion-button clear item-end (click)="borrar(carro)"><ion-icon name="remove-circle"></ion-icon></button>                    \n\n                            </ion-fab>\n\n                          </ion-col>  \n\n\n\n<!-- \n\n                          <ion-col size="4">\n\n                            <ion-fab middle end >  \n\n                              <ion-icon  *ngIf="!carro.esp" color="danger" name="checkmark-circle">Comprador</ion-icon>  \n\n                              <ion-icon  *ngIf="carro.esp" color="verde" name="checkmark-circle">Comprador</ion-icon>  \n\n                            </ion-fab>\n\n                          </ion-col>  -->\n\n                          \n\n                          <ion-col size="4" *ngIf="!carro.lsn&&!carro.can">\n\n                            <ion-fab middle end >  \n\n                              <ion-icon  *ngIf="!carro.apr" color="danger" name="checkmark-circle">Vendedor</ion-icon>  \n\n                              <ion-icon  *ngIf="carro.apr" color="verde" name="checkmark-circle">Vendedor</ion-icon>  \n\n                            </ion-fab>\n\n                          </ion-col> \n\n                          \n\n                          <ion-col size="4" *ngIf="carro.can">\n\n                            <ion-fab middle end >  \n\n                              <ion-icon   color="danger" name="checkmark-circle">Cancelado</ion-icon>\n\n                            </ion-fab>\n\n                          </ion-col> \n\n\n\n                          <!-- \n\n                          <ion-col size="4">\n\n                            <ion-fab middle end >  \n\n                              <button ion-button clear item-end (click)="revisar()"><ion-icon name="pin"></ion-icon></button>                    \n\n                            </ion-fab>\n\n                          </ion-col>  -->\n\n                          <ion-col *ngIf="carro.lsn" size="4">\n\n                            <ion-fab middle end > \n\n                              <button ion-button clear item-end (click)="quitarln(carro)"><ion-icon  color="verde" name="checkmark-circle"> Quitar</ion-icon></button>                      \n\n                                \n\n                            </ion-fab>\n\n                          </ion-col> \n\n\n\n                      </ion-row>\n\n\n\n\n\n                      </ion-card-content>  \n\n                      </ion-card> \n\n                                    \n\n              </div> \n\n\n\n      </div>\n\n      </div> \n\n\n\n      <!-- lista del carrito -->\n\n      <div *ngIf="carr&&detalles">\n\n        <ion-card>                      \n\n          <ion-card-content> \n\n            <div  style="text-align:center"> \n\n              <h2><b>Vendedor:</b> {{pedido.ven}}</h2>     \n\n            </div>\n\n                    <div  style="text-align:center"> \n\n                      <h2><b>Comprador:</b> {{pedido.nom}}</h2>    \n\n                  </div>\n\n          </ion-card-content>  \n\n        </ion-card>\n\n        <div *ngFor="let car of carrito; let idx = index; trackBy:trackByIdx(product)" >   \n\n              <ion-card >         \n\n                      <ion-card-content > \n\n                        <!-- imagen lateral  -->                \n\n                          <ion-avatar item-start>\n\n                             <!-- <img src="https://api.adorable.io/avatars/100/avatar.png" alt="">    -->\n\n                            <img  src="{{this.global.foto2}}{{car.file_name}}"  alt="">                              \n\n                          </ion-avatar>\n\n                          \n\n                           <ion-icon name="cart" color="secondary">  Producto {{idx +1}}: {{car.nombre}} </ion-icon>\n\n                <!--       <p>{{car.file_name}}</p>   -->\n\n                                 \n\n                          <ion-row align-items-center  >\n\n                            <ion-col size="4">\n\n                              <p color="secondary">Precio: </p>                               \n\n                            </ion-col> \n\n                            <ion-col  size="4">\n\n                              <p color="secondary">Cantidad:</p> \n\n                            </ion-col>\n\n                            <ion-col  size="4">\n\n                              <p color="secondary">Subtotal:</p> \n\n                            </ion-col>              \n\n                        </ion-row>\n\n                        \n\n                        <ion-row align-items-center  >\n\n                          <ion-col size="4">\n\n                            {{car.precio}}\n\n                          </ion-col> \n\n                          <ion-col  size="4">\n\n                            {{car.cantidad}}\n\n                          </ion-col>\n\n                          <ion-col  size="4">\n\n                            {{car.subtotal}}\n\n                          </ion-col>              \n\n                      </ion-row>\n\n                    </ion-card-content>  \n\n                </ion-card>                                    \n\n        </div> \n\n            \n\n          <ion-card  >         \n\n            <ion-card-content >   \n\n              <ion-row align-items-center  >\n\n                <ion-col size="4">\n\n                </ion-col> \n\n                <ion-col  size="4">       \n\n                </ion-col> \n\n                <ion-col  size="4">       \n\n                  <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Subtotal: {{this.subtotal}} </ion-icon></p> \n\n                </ion-col>             \n\n            </ion-row> \n\n            <ion-row align-items-center  >\n\n              <ion-col size="4">\n\n              </ion-col> \n\n              <ion-col  size="4">       \n\n              </ion-col> \n\n              <ion-col  size="4">       \n\n                <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Envío: {{pedido.envio}} </ion-icon></p> \n\n              </ion-col>             \n\n          </ion-row> \n\n          <ion-row align-items-center  >\n\n            <ion-col size="4">\n\n            </ion-col> \n\n            <ion-col  size="4">       \n\n            </ion-col> \n\n            <ion-col  size="4">       \n\n              <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Total: {{pedido.total}}  </ion-icon></p> \n\n            </ion-col>             \n\n        </ion-row> \n\n        <ion-row align-items-center  >\n\n          <ion-col size="4">\n\n          </ion-col> \n\n          <ion-col  size="4">       \n\n          </ion-col> \n\n          <ion-col  size="4">       \n\n            <p color="secondary"><ion-icon  color="secondary"> <h2><b>10 % :</b> {{pedido.porc}}</h2>   </ion-icon></p> \n\n          </ion-col>             \n\n      </ion-row> \n\n          </ion-card-content>  \n\n          </ion-card>\n\n\n\n          \n\n          <ion-card  >         \n\n            <ion-card-content >   \n\n              <ion-row align-items-center  >\n\n                 <ion-col size="4">\n\n                </ion-col> \n\n                <ion-col  size="4">       \n\n                </ion-col> \n\n                <ion-col  size="4">       \n\n                  <button ion-button clear item-end (click)="calculadora()"><ion-icon name="pin"></ion-icon> Ruta </button>   \n\n                </ion-col>             \n\n            </ion-row>  \n\n          </ion-card-content>  \n\n          </ion-card>     \n\n            \n\n          <ion-card *ngIf="detalles2"> \n\n            <ion-card-content>\n\n                    <div  style="text-align:center"> \n\n                      <h2><b>ID:</b> {{pedido.id}}</h2> \n\n                      <h2><b>Nombre:</b> {{pedido.nom}}</h2>    \n\n                      <h2><b>Dirección: </b>{{pedido.dir}}</h2>                \n\n                      <h2><b>Tel entrega:</b> {{pedido.telpedido}}</h2>             \n\n                      <h2><b>Tel comprador:</b> {{pedido.tel}}</h2>\n\n                      <h2><b>Ruta:</b> {{ruta}}</h2>\n\n                  <!--   <h2><b>Latitud:</b> {{pedido.negoPosLat}}</h2> \n\n                      <h2><b>Envio:</b> {{pedido.envio}}</h2> \n\n                      <h2><b>Total:</b> {{pedido.total}}</h2>  -->\n\n                  </div>\n\n\n\n           </ion-card-content>\n\n                          \n\n              <!--    <ion-row align-items-center  *ngIf="!pedidocan" >\n\n                  <ion-col size="4">\n\n                    \n\n                          <div *ngIf="!enviarvende" style="text-align:center"> \n\n                            <button color="verde" ion-button  ><ion-icon name="logo-whatsapp" item-start (click)="what2()"> Avisar al Comprador 1</ion-icon></button>\n\n                          </div>\n\n                </ion-col> \n\n                <ion-col  size="4"> \n\n                 \n\n                  <div *ngIf="!enviarvende" style="text-align:center"> \n\n                    \n\n                    <button color="energy" ion-button  ><ion-icon name="send" item-start (click)="openDialogo2()"> Cancelar pedido</ion-icon></button>\n\n                            \n\n                  </div>      \n\n                </ion-col> \n\n              </ion-row>  -->            \n\n                   \n\n          </ion-card>  \n\n\n\n          <ion-card  >                      \n\n            <ion-card-content>                           \n\n                    <ion-row align-items-center  *ngIf="!pedidocan" >\n\n                      <ion-col size="4"> \n\n                        <!-- *ngIf="enviarvende" -->\n\n                              <div *ngIf="enviarcompra&&detalles3" style="text-align:center"> \n\n                                <button color="verde" ion-button  ><ion-icon name="logo-whatsapp" item-start (click)="what4()"> Avisar al Vendedor</ion-icon></button>\n\n                              </div>\n\n                    </ion-col> \n\n                  </ion-row> \n\n            </ion-card-content>  \n\n          </ion-card>  \n\n              \n\n          <ion-card  >                      \n\n            <ion-card-content> \n\n                    \n\n                    <ion-row align-items-center *ngIf="!pedidocan"  >\n\n                      <ion-col size="4">\n\n                              <div *ngIf="enviarcompra&&detalles3" style="text-align:center"> \n\n                                <button color="verde" ion-button  ><ion-icon name="logo-whatsapp" item-start (click)="what3()"> Avisar al Comprador </ion-icon></button>\n\n                              </div>\n\n                    </ion-col> \n\n                  </ion-row> \n\n            </ion-card-content>  \n\n          </ion-card>  \n\n      </div> \n\n\n\n      <div > \n\n\n\n</div>\n\n\n\n  \n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\hola\hola.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_6__providers_global_global__["a" /* GlobalProvider */]])
    ], HolaPage);
    return HolaPage;
}());

//# sourceMappingURL=hola.js.map

/***/ }),

/***/ 359:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DetailssPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ruta_ruta__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_global_global__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__help_help__ = __webpack_require__(199);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};










/**
 * Generated class for the DetailssPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DetailssPage = /** @class */ (function () {
    function DetailssPage(navCtrl, navParams, formBuilder, alertController, toastCtrl, gasolineraService, socialSharing, global) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.alertController = alertController;
        this.toastCtrl = toastCtrl;
        this.gasolineraService = gasolineraService;
        this.socialSharing = socialSharing;
        this.global = global;
        this.enviarvende = false;
        this.pedidocan = false;
        this.detalles3 = false;
        this.pedido = {
            "id": "",
            "ven": "",
            "nom": "",
            "telpedido": "",
            "envio": 200,
            "total": "",
            "porc": 24,
            "curPosLat": 23.119147170373726,
            "curPosLng": -82.36971616744997,
            "negoPosLat": 23.113581950347523,
            "negoPosLng": -82.36658334732057,
            "telneg": "",
            "moneda": "cupflag",
            "origename": "Nombre de la calle, lugar",
            "destinoname": ""
        };
        this.pedidotax = false;
        this.dataFromOtherPage = null;
        this.myCallbackFunction = function (_params) {
            return new Promise(function (resolve, reject) {
                _this.dataFromOtherPage = _params;
                //resolve();
                if (_this.dataFromOtherPage.ok) {
                    _this.vnombre2 = _this.dataFromOtherPage.chofer.idt;
                    _this.vnombre3 = _this.dataFromOtherPage.chofer.id;
                }
                console.log('data received from other page', _this.dataFromOtherPage);
            });
        };
        this.dataFromOtherPage2 = null;
        this.callback2 = function (data) {
            _this.dataFromOtherPage2 = data;
            if (_this.dataFromOtherPage2.ok) {
                _this.detalles2 = true;
                // this.envio=this.dataFromOtherPage.envio
                // this.total=+(this.subtotal+this.envio).toFixed(2)
                _this.ruta = _this.dataFromOtherPage2.ruta;
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage2);
        };
        this.detalles2 = false;
        this.carr = false;
        this.myForm = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].maxLength(8), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
        });
        this.myForm2 = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].maxLength(8), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required])],
        });
        this.vnombre2 = "";
        this.admin = false;
        this.tllegada = "";
        this.carro = this.navParams.get('carro'); // objeto con los datos del negocio
        this.idtm = this.navParams.get('idtm'); // idt de este usuario (gestor o admin)
        this.idtmid = this.navParams.get('idtmid'); // idt de este usuario (gestor o admin)
        this.admin = this.navParams.get('admin'); // para definir si es gestor o admin 
    }
    DetailssPage.prototype.ionViewWillEnter = function () {
        this.callback = this.navParams.get("callback");
        console.log('callback de hello:  ' + this.callback);
    };
    DetailssPage.prototype.ionViewWillLeave = function () {
        var _this = this;
        console.log('6 - ¿Estás seguro que quieres dejar la página?.');
        var tarifa = {
            ok: true,
            pedido: this.carro
        };
        this.callback(tarifa).then(function () {
            _this.navCtrl.pop();
        });
        /*
            this.navCtrl.pop().then(() => {
             // this.navParams.get('callback')(tarifa);
            });
             */
    };
    DetailssPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DetailssPage');
        if (this.carro.tax) {
            this.pedidotax = true;
        }
        else {
            this.pedidotax = false;
        }
        this.habSv = this.carro.hab;
        this.prueba = this.carro.pru;
        this.pedidocan = this.carro.can;
        this.enviarvende = this.carro.apr;
        this.detalles3 = this.carro.apr;
        this.detalles = true;
        this.carr = true;
        this.carrito = [];
        this.carrito = JSON.parse(this.carro.prd);
        //console.log(this.carrito);
        //console.log(carro.prd);
        this.subtotal = 0;
        for (var _i = 0, _a = this.carrito; _i < _a.length; _i++) {
            var casita = _a[_i];
            this.subtotal = +(this.subtotal + casita.subtotal);
        }
        this.subtotal = +(this.subtotal).toFixed(2);
        this.pedido = JSON.parse(this.carro.dat);
        this.id = this.carro.id;
        this.siteName = ' ';
        // this.shareImageNi=this.global.foto2+'IKKTocPPrlnQYY1C9ZMBqQxDXf6CEsIhOWH5Bg7E.png'
        this.shareImageNi = '';
    };
    DetailssPage.prototype.trackByIdx = function (index) {
        return index;
    };
    DetailssPage.prototype.calculadora = function () {
        var carro = {
            "curPos": this.pedido,
        };
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__ruta_ruta__["a" /* RutaPage */], { carro: carro, callback: this.callback2 }); //
    };
    DetailssPage.prototype.calculadora2 = function () {
        var carro = {
            "curPos": this.pedido,
        };
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__help_help__["a" /* HelpPage */], { carro: carro, callback: this.myCallbackFunction }); //
    };
    DetailssPage.prototype.openDialogo3 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'Usted realmente desea Aceptar el pedido ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    // 
                                    handler: function (blah) {
                                        _this.what5(carro);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //confirmacion despues de ver el mapa tllegada
    DetailssPage.prototype.what5 = function (carro) {
        var _this = this;
        if (!this.myForm.valid) {
            this.presentToast4('Introduzca el nombre del chofer ');
        }
        else {
            if (!this.myForm2.valid) {
                this.presentToast4('Introduzca el tiempo de llegada ');
            }
            else {
                console.log("tllegada: " + this.tllegada);
                var pedido1 = JSON.parse(carro.dat);
                var pedido2 = {
                    "id": pedido1.id,
                    "ven": pedido1.ven,
                    "nom": pedido1.nom,
                    "dir": pedido1.dir,
                    "telpedido": pedido1.telpedido,
                    "tel": pedido1.tel,
                    "envio": pedido1.envio,
                    "total": pedido1.total,
                    "porc": pedido1.porc,
                    "curPosLat": pedido1.curPosLat,
                    "curPosLng": pedido1.curPosLng,
                    "negoPosLat": pedido1.negoPosLat,
                    "negoPosLng": pedido1.negoPosLng,
                    "tar": pedido1.tar,
                    "telneg": pedido1.telneg,
                    "moneda": pedido1.moneda,
                    "origename": pedido1.origename,
                    "destinoname": pedido1.destinoname,
                    "tllegada": this.tllegada
                };
                console.log("variable: " + pedido2.tllegada);
                var i = {
                    "id": carro.id,
                    "idtm": this.idtm,
                    "ent": this.vnombre2,
                    "mensajeprincipal": carro.mensajeprincipal,
                    "idtmid": this.idtmid,
                    "entid": this.vnombre3,
                    "dat": JSON.stringify(pedido2),
                };
                this.gasolineraService.createPedidoNeg(i)
                    .then(function (result) {
                    console.log(result);
                    if (result.hello) {
                        _this.presentToast4('Pedido aceptado ');
                        _this.detalles3 = true;
                        _this.carro.apr = true; // retorna esto
                        _this.carro.idtm = _this.idtm; // retorna esto
                        _this.carro.ent = _this.vnombre2; // retorna esto
                        _this.carro.hab = true; // retorna esto
                        _this.navCtrl.pop();
                    }
                    else {
                        _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                    }
                }, function (err) {
                    console.log(err);
                });
            }
        }
        // enviar pedido al mensajero, con la ruta en forma de enlace
        /*    let message = "Su pedido ha sido aceptado ";
        this.socialSharing.shareViaWhatsAppToReceiver("52951669",message, ' ', "https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9" ).then(res => {
          console.log("success : " + res);
        }).catch(error => {
          console.log("failed : " + error);
        })  */
    };
    DetailssPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 6000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssPage.prototype.openDialogo2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'Usted realmente desea Cancelar el pedido ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    // 
                                    handler: function (blah) {
                                        _this.cancel();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DetailssPage.prototype.updateValues = function (values) {
        if (values) {
            this.tllegada = values.minute;
            console.log(values);
            // this.month = values.month;
        }
    };
    DetailssPage.prototype.cancel = function () {
        var _this = this;
        var i = { "id": this.id,
            "idtm": this.idtm,
            "res": this.carro.res,
        };
        console.log(i);
        this.gasolineraService.cancelPedidoNeg(i)
            .then(function (result) {
            console.log(result);
            if (result.hello) {
                _this.pedidocan = true;
                _this.presentToast4('Pedido cancelado');
                _this.carro.can = true;
                _this.carro.idtm = _this.idtm;
                _this.navCtrl.pop();
                //this.detalles3=true
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    DetailssPage.prototype.what6 = function () {
        // enviar pedido al mensajero, con la ruta en forma de enlace
        //this.presentToast4('Nombre:'+ this.pedido.nom+ ' Dirección:'+this.pedido.dir  + ' Tel entrega:' +this.pedido.telpedido+ ' Tel cliente:' +this.pedido.tel+ ' Ruta:' + this.ruta);  
        //  let message = 'Total:'+this.carro.mensaje+ ' Nombre:'+ this.pedido.nom+ ' Dirección:'+this.pedido.dir  + ' Tel entrega:' +this.pedido.telpedido+ ' Tel cliente:' +this.pedido.tel+ ' Ruta:' + this.ruta;
        var message = 'Total:' + this.carro.mensaje + ' Ruta:' + this.ruta;
        this.socialSharing.shareViaWhatsApp(message, null, this.siteName).then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    DetailssPage.prototype.openDialogo4 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Atención!",
                            message: 'El cliente será puesto en la Lista Negra ',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    // 
                                    handler: function (blah) {
                                        //lista negra
                                        _this.listanegra();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //confirmacion despues de ver el mapa
    DetailssPage.prototype.listanegra = function () {
        var _this = this;
        console.log(this.pedido.id);
        if (this.habSv) {
            //this.presentToast4(" usuario de Habana Servicentro")
            var i = { "id": this.pedido.id,
                //"pos":"usuario en lista negra",
                "lsn": true,
            };
            this.gasolineraService.listaNegHab(i)
                .then(function (result) {
                console.log(result);
                if (result.hello) {
                    _this.presentToast4('Usuario puesto en lista negra');
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
        else {
            var i = { "id": this.pedido.id,
                "pos": "usuario en lista negra",
                "lsn": true,
            };
            this.gasolineraService.listaNeg(i)
                .then(function (result) {
                console.log(result);
                if (result.hello) {
                    _this.presentToast4('Usuario puesto en lista negra');
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
    };
    DetailssPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-detailss',template:/*ion-inline-start:"E:\14\gaso\src\pages\detailss\detailss.html"*/'<!--\n\n  Generated template for the DetailssPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header>\n\n\n\n  <ion-navbar>\n\n    <ion-row align-items-left>\n\n      <ion-title>Pedido {{carro.id}}</ion-title>     \n\n      \n\n\n\n      \n\n      <div   size="4">       \n\n        <h1 > Total: {{carro.mensaje}}    </h1> \n\n        \n\n      </div>\n\n      \n\n    </ion-row>    \n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content class="masters" >\n\n\n\n        <!-- lista del carrito -->\n\n        <div *ngIf="carr&&detalles">\n\n            <ion-card>                      \n\n              <ion-card-content> \n\n                        <div  style="text-align:center"> \n\n                          <h2><b>Vendedor:</b> {{pedido.ven}}</h2>    \n\n                      </div>\n\n                        <div  style="text-align:center"> \n\n                          <h2><b>Comprador:</b> {{pedido.nom}}</h2>    \n\n                      </div>\n\n              </ion-card-content>  \n\n            </ion-card>\n\n            <div *ngFor="let car of carrito; let idx = index; trackBy:trackByIdx(product)" >   \n\n                <ion-card >         \n\n                        <ion-card-content  *ngIf="!pedidotax" > \n\n                          <!-- imagen lateral  -->                \n\n                            <ion-avatar item-start>\n\n                               <!-- <img src="https://api.adorable.io/avatars/100/avatar.png" alt="">    -->\n\n                              <img  src="{{this.global.foto2}}{{car.file_name}}"  alt="">                              \n\n                            </ion-avatar>\n\n                            \n\n                             <ion-icon name="cart" color="secondary">  Producto {{idx +1}}: {{car.nombre}} </ion-icon>\n\n                  <!--       <p>{{car.file_name}}</p>   -->\n\n                                   \n\n                            <ion-row align-items-center  >\n\n                              <ion-col size="4">\n\n                                <p color="secondary">Precio: </p>                               \n\n                              </ion-col> \n\n                              <ion-col  size="4">\n\n                                <p color="secondary">Cantidad:</p> \n\n                              </ion-col>\n\n                              <ion-col  size="4">\n\n                                <p color="secondary">Subtotal:</p> \n\n                              </ion-col>              \n\n                          </ion-row>\n\n                          \n\n                          <ion-row align-items-center  >\n\n                            <ion-col size="4">\n\n                              {{car.precio}}\n\n                            </ion-col> \n\n                            <ion-col  size="4">\n\n                              {{car.cantidad}}\n\n                            </ion-col>\n\n                            <ion-col  size="4">\n\n                              {{car.subtotal}}\n\n                            </ion-col>              \n\n                        </ion-row>\n\n                      </ion-card-content>  \n\n  \n\n  \n\n                      \n\n                            <!-- detalles del pedido de taxi -->\n\n                                        \n\n                            <ion-card-content *ngIf="pedidotax" > \n\n  \n\n                              <ion-row align-items-left  >\n\n                                <ion-col size="4">\n\n                                  <p color="secondary">Vehículo: </p>                               \n\n                                </ion-col>\n\n                                <ion-col   size="4">\n\n                                  {{car.vehiculo}}\n\n                                </ion-col>\n\n                              </ion-row>\n\n  \n\n                              <ion-row align-items-left  >\n\n                                <ion-col size="4">\n\n                                  <p color="secondary">Pasajeros: </p>                               \n\n                                </ion-col>\n\n                                \n\n                                <ion-col size="4">\n\n                                  {{car.pasajeros}}\n\n                                </ion-col> \n\n                              </ion-row>\n\n  \n\n                              <ion-row align-items-left  >\n\n                                <ion-col  size="4">\n\n                                  <p color="secondary">Equipaje:</p> \n\n                                </ion-col>\n\n                                \n\n                                <ion-col  size="4">\n\n                                  {{car.equipaje}}\n\n                                </ion-col>\n\n                              </ion-row>\n\n  \n\n                              <ion-row align-items-left  >\n\n                                <ion-col  size="4">\n\n                                  <p color="secondary">Animales:</p> \n\n                                </ion-col> \n\n                                \n\n                                <ion-col  size="4">\n\n                                  {{car.animales}}\n\n                                </ion-col> \n\n                              </ion-row>\n\n  \n\n                              <ion-row align-items-left  >\n\n                                <ion-col  size="4">\n\n                                  <p color="secondary">Comentarios:</p> \n\n                                </ion-col>    \n\n                                \n\n                                <ion-col  size="4">\n\n                                  {{car.otros}}\n\n                                </ion-col>         \n\n                              </ion-row>\n\n                              \n\n  \n\n  \n\n                            <ion-row align-items-center  >\n\n                              <ion-col size="4">\n\n                              </ion-col> \n\n                              <ion-col  size="4">       \n\n                              </ion-col> \n\n                              <ion-col  size="4">       \n\n                                <p color="secondary"><ion-icon name="calendar" color="secondary"> Día: {{car.dia}} </ion-icon></p> \n\n                              </ion-col>             \n\n                          </ion-row> \n\n                          <ion-row align-items-center  >\n\n                            <ion-col size="4">\n\n                            </ion-col> \n\n                            <ion-col  size="4">       \n\n                            </ion-col> \n\n                            <ion-col  size="4">       \n\n                              <p color="secondary"><ion-icon name="clock" color="secondary"> Hora: {{car.hora}} </ion-icon></p> \n\n                            </ion-col>             \n\n                        </ion-row>\n\n                      </ion-card-content> \n\n                  </ion-card>                                    \n\n            </div> \n\n              \n\n            <ion-card  >         \n\n              <ion-card-content >   \n\n                <ion-row align-items-center  >\n\n                  <ion-col size="4">\n\n                  </ion-col> \n\n                  <ion-col  size="4">       \n\n                  </ion-col> \n\n                  <ion-col  size="4">       \n\n                    <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Subtotal: {{this.subtotal}} </ion-icon></p> \n\n                  </ion-col>             \n\n              </ion-row> \n\n              <ion-row align-items-center  >\n\n                <ion-col size="4">\n\n                </ion-col> \n\n                <ion-col  size="4">       \n\n                </ion-col> \n\n                <ion-col  size="4">       \n\n                  <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Envío: {{pedido.envio}} </ion-icon></p> \n\n                </ion-col>             \n\n            </ion-row> \n\n            <ion-row align-items-center  >\n\n              <ion-col size="4">\n\n              </ion-col> \n\n              <ion-col  size="4">       \n\n              </ion-col> \n\n              <ion-col  size="4">       \n\n                <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Propina: {{pedido.propina}} </ion-icon></p> \n\n              </ion-col>             \n\n              </ion-row> \n\n              <ion-row align-items-center  >\n\n              <ion-col size="4">\n\n              </ion-col> \n\n              <ion-col  size="4">       \n\n              </ion-col> \n\n              <ion-col  size="4">       \n\n                <p color="secondary"><b> Total: {{carro.mensaje}}   </b> </p> \n\n              </ion-col>             \n\n            </ion-row> \n\n            <ion-row align-items-center  >\n\n            <ion-col size="4">\n\n            </ion-col> \n\n            <ion-col  size="4">       \n\n            </ion-col> \n\n            <ion-col  size="4">       \n\n              <p color="secondary"><ion-icon  color="secondary"> <h2><b> % Bruto:</b> {{pedido.porc}}</h2>   </ion-icon></p> \n\n            </ion-col>             \n\n            </ion-row> \n\n            </ion-card-content>  \n\n            </ion-card>\n\n  \n\n            \n\n            <ion-card *ngIf="!carro.apr" style="padding: 0px;">         \n\n              <ion-card-content style="padding: 0px;">   \n\n                \n\n                \n\n                <div style="text-align:center">    \n\n                  <p> Paso 1</p>                  \n\n                </div>\n\n                <ion-row align-items-center style="padding: 0px;" > \n\n\n\n                   <ion-col size="4">     \n\n                      <form [formGroup]="myForm" style="padding: 0px;">\n\n                        <ion-item  >\n\n                         \n\n                            <ion-label floating><ion-icon name="person-add">  chofer:</ion-icon>  </ion-label>\n\n                              <ion-input maxlength="8" formControlName="firstName" type="text"  [(ngModel)]="vnombre2" [class.invalid]="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n                        </ion-item>              \n\n          \n\n                        <ion-item *ngIf="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt)">\n\n                          <p>Escriba el nombre del chofer</p>\n\n                      </ion-item>\n\n                    </form>\n\n  \n\n                  </ion-col> \n\n                  <ion-col  size="4">       \n\n                  </ion-col>\n\n\n\n<!--                   <ion-col  size="4">       \n\n                    <button ion-button clear item-end (click)="calculadora()"><ion-icon name="pin"></ion-icon> Ruta </button>   \n\n                  </ion-col> \n\n                   -->\n\n                  <ion-col  size="4">       \n\n                    <button ion-button clear item-end (click)="calculadora2()"><ion-icon name="search"></ion-icon> </button>   \n\n                  </ion-col> \n\n                  \n\n              </ion-row>  \n\n            </ion-card-content>  \n\n            </ion-card>   \n\n            \n\n            <ion-card *ngIf="!carro.apr" style="padding: 0px;">         \n\n              <ion-card-content style="padding: 0px;">                 \n\n                \n\n                <div style="text-align:center">    \n\n                  <p> Paso 2</p>                  \n\n                </div>\n\n                <ion-row align-items-center style="padding: 0px;" > \n\n\n\n                   <ion-col size="4">     \n\n                      <form [formGroup]="myForm2" style="padding: 0px;">\n\n                        <ion-item  >\n\n                         \n\n                            <ion-label floating><ion-icon name="alarm">  Tiempo de llegada:</ion-icon>  </ion-label>\n\n                              <ion-input maxlength="8" formControlName="firstName" type="text"  [(ngModel)]="tllegada" [class.invalid]="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n                        </ion-item>              \n\n          \n\n                        <ion-item *ngIf="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt)">\n\n                          <p>Escriba el tiempo de llegada</p>\n\n                      </ion-item>\n\n                    </form>\n\n  \n\n                  </ion-col> \n\n                  <ion-col  size="4">       \n\n                  </ion-col>\n\n\n\n<!--                   <ion-col  size="4">       \n\n                    <button ion-button clear item-end (click)="calculadora()"><ion-icon name="pin"></ion-icon> Ruta </button>   \n\n                  </ion-col> \n\n                   -->\n\n                  <ion-col  size="4">       \n\n                    \n\n                    <ion-item>\n\n                      <ion-label><ion-icon name="clock"> </ion-icon> </ion-label>\n\n                      <ion-datetime cancelText="Cancelar" doneText="Aceptar"\n\n                                    \n\n                                    pickerFormat="m" \n\n                                    [(ngModel)]="tllegada"\n\n                                    (ionChange)="updateValues($event)"\n\n                                    >\n\n                                    \n\n                      </ion-datetime> \n\n                    </ion-item>     \n\n\n\n                  </ion-col> \n\n                  \n\n              </ion-row>  \n\n            </ion-card-content>  \n\n            </ion-card>   \n\n\n\n\n\n              <!--     -->\n\n\n\n            <ion-card *ngIf="!carro.apr&&!carro.can" >  \n\n                            \n\n                   <ion-row align-items-center  >\n\n                    <ion-col size="4">\n\n                            <div  style="text-align:center"> \n\n                              <button color="verde" ion-button  ><ion-icon name="add-circle" item-start (click)="openDialogo3(carro)"> Aceptar pedido</ion-icon></button>\n\n                            </div>\n\n                  </ion-col> \n\n\n\n                  <ion-col  size="4" *ngIf="!carro.apr&&admin" >  \n\n                      \n\n                        <div  style="text-align:center"> \n\n                          <button color="energy" ion-button  ><ion-icon name="remove-circle" item-start (click)="openDialogo2()"> Cancelar pedido</ion-icon></button>\n\n                                  \n\n                        </div>      \n\n                  </ion-col> \n\n                \n\n                </ion-row> \n\n                     \n\n            </ion-card>  \n\n   \n\n        </div> \n\n        <!-- *ngIf="detalles3" -->\n\n      <ion-card  >                      \n\n        <ion-card-content> \n\n                  <div  style="text-align:center"> \n\n                    <h2><b>Nombre:</b> {{pedido.nom}}</h2>    \n\n                    <h2><b>Dirección: </b>{{pedido.dir}}</h2>                \n\n                    <h2><b>Tel entrega:</b> {{pedido.telpedido}}</h2>             \n\n                    <h2><b>Tel cliente:</b> {{pedido.tel}}</h2>\n\n                    <h2><b>Ruta: </b> {{ruta}}</h2>\n\n                 <!--   <h2><b>Latitud:</b> {{pedido.negoPosLat}}</h2> \n\n                     <h2><b>Envio:</b> {{pedido.envio}}</h2> \n\n                    <h2><b>Total:</b> {{pedido.total}}</h2>  -->\n\n                </div>\n\n                 \n\n            <!--     <ion-row align-items-center  >\n\n                  <ion-col size="4">\n\n                          <div  style="text-align:center"> \n\n                            <button color="verde" ion-button  ><ion-icon name="logo-whatsapp" item-start (click)="what6()"> Enviar </ion-icon></button>\n\n                          </div>\n\n                </ion-col> \n\n              </ion-row> \n\n               -->\n\n\n\n              <ion-row align-items-center  >\n\n                <ion-col *ngIf="carro.can" size="4">\n\n                        <div  style="text-align:center"> \n\n                          <button color="dark" ion-button  ><ion-icon name="create" item-start (click)="openDialogo4()"> Poner en Lista Negra</ion-icon></button>\n\n                        </div>\n\n              </ion-col> \n\n              <ion-col *ngIf="carro.apr" size="4"  >  \n\n                      \n\n                <div  style="text-align:center"> \n\n                  <button color="energy" ion-button  ><ion-icon name="remove-circle" item-start (click)="openDialogo2()"> Cancelar pedido</ion-icon></button>\n\n                          \n\n                </div>      \n\n          </ion-col> \n\n            </ion-row> \n\n         </ion-card-content>  \n\n       </ion-card> \n\n  \n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\detailss\detailss.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_6__providers_global_global__["a" /* GlobalProvider */]])
    ], DetailssPage);
    return DetailssPage;
}());

//# sourceMappingURL=detailss.js.map

/***/ }),

/***/ 361:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModificarPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_global_global__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var ModificarPage = /** @class */ (function () {
    function ModificarPage(navCtrl, navParams, loadingService, gasolineraService, formBuilder, alertController, global, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loadingService = loadingService;
        this.gasolineraService = gasolineraService;
        this.formBuilder = formBuilder;
        this.alertController = alertController;
        this.global = global;
        this.toastCtrl = toastCtrl;
        // EMAILPATTERN = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
        this.myForm = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(6), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.clientenuevo2 = false;
        this.id = this.navParams.get('carro'); // objeto con los datos del negocio
    }
    ModificarPage.prototype.ionViewDidLoad = function () {
        // this.cargarfoto()
    };
    //formulario taxista
    ModificarPage.prototype.save = function () {
        var _this = this;
        if (this.id == "000000") {
            this.presentToast4('Su versión de Android es superior a 9 usted no puede registrarse como usuario para estar disponible en el mapa pero si utilizar el resto de las funcionalidades de la aplicación ');
        }
        else {
            if (!this.myForm.valid) {
                this.presentToast4('Error en los datos ');
            }
            else {
                //this.presentToast4('Todo bien' + this.id);             
                //console.log("success!")
                //api para crear persona
                var i = {
                    // "idt":this.id.id,
                    "nam": this.vnombre2,
                    "lat": "23.08851803",
                    "lng": "-82.49170739",
                    "est": true,
                    // "cha":"no",
                    // "mod":"no",
                    "tel": this.vtelefono2,
                    "cor": "no tiene",
                    "eda": "0",
                    //"lla":0,
                    "apr": false,
                    "ini": "Período de Prueba",
                    "ven": "Período de Prueba",
                    // "tax":false,
                    "dem": true,
                    // "created_at":"2019-11-30 00:02:10",
                    // "updated_at":"2019-11-30 00:02:10"  
                    "res": this.id.res,
                };
                console.log(i);
                this.gasolineraService.createPersonaCH(i).then(function (result) {
                    console.log(result);
                    if (result['hello']) {
                        _this.clientenuevo2 = true;
                        _this.presentToast4('Chofer creado');
                        _this.navCtrl.pop();
                    }
                    else {
                        _this.presentToast4('El número de teléfono ya existe en un Chofer');
                    }
                }, function (err) {
                    console.log(err);
                });
                //api
            }
        }
    };
    ModificarPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    ModificarPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-modificar',template:/*ion-inline-start:"E:\14\gaso\src\pages\modificar\modificar.html"*/'<ion-header>\n\n  <ion-navbar color="primary" >\n\n    <ion-title>\n\n       <ion-icon name="create"> Crear chofer  </ion-icon>\n\n    </ion-title>\n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content >\n\n   \n\n    <div   *ngIf="!clientenuevo2">\n\n      \n\n\n\n    <h5  >Esta sección le permitirá crear a un usuario tipo chofer. <br>  Compruebe que el número de teléfono sea válido </h5>\n\n        \n\n          <!-- Formulario para la inscripcion  -->\n\n          <form  [formGroup]="myForm" style="padding-left: 10px;">\n\n              <ion-item  >\n\n                  <ion-label floating ><ion-icon name="person">  Nombre:</ion-icon>  </ion-label>\n\n                    <ion-input  formControlName="firstName" type="text"  [(ngModel)]="vnombre2" [class.invalid]="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n              </ion-item>              \n\n\n\n              <ion-item  *ngIf="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt)">\n\n                <p>Falta el nombre.</p>\n\n            </ion-item>\n\n\n\n              <ion-item  > \n\n                  <ion-label floating ><ion-icon name="call">  Teléfono:</ion-icon> </ion-label>\n\n                <ion-input formControlName="telefono" type="number"  [(ngModel)]="vtelefono2" [class.invalid]="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n          </ion-item>\n\n\n\n          <ion-item  *ngIf="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt)">\n\n              <p>El número no es válido.</p>\n\n          </ion-item>\n\n          \n\n          <br>\n\n          <br>\n\n          <br>             \n\n              \n\n            <ion-buttons center >\n\n              <button  [style.display]="visible" ion-button (click)="save()"><ion-icon name="person">  Crear chofer </ion-icon></button>\n\n            </ion-buttons>\n\n        </form>\n\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\modificar\modificar.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_5__providers_global_global__["a" /* GlobalProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */]])
    ], ModificarPage);
    return ModificarPage;
}());

//# sourceMappingURL=modificar.js.map

/***/ }),

/***/ 362:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PedidosPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__details_details__ = __webpack_require__(363);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






/**
 * Generated class for the PedidosPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
// @IonicPage()
var PedidosPage = /** @class */ (function () {
    function PedidosPage(navCtrl, navParams, alertController, toastCtrl, gasolineraService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.alertController = alertController;
        this.toastCtrl = toastCtrl;
        this.gasolineraService = gasolineraService;
        this.carro = this.navParams.get('carro'); // objeto con los datos del negocio
        this.carros = this.navParams.get('datos'); // objeto con los datos del negocio
        this.user = this.navParams.get('user');
    }
    PedidosPage.prototype.ionViewWillEnter = function () {
        this.callback = this.navParams.get("callback");
        console.log('callback de hello:  ' + this.callback);
    };
    PedidosPage.prototype.ionViewWillLeave = function () {
        var _this = this;
        console.log('6 - ¿Estás seguro que quieres dejar la página?.');
        var tarifa = {
            ok: true,
            auto: this.carro
        };
        this.callback(tarifa).then(function () {
            _this.navCtrl.pop();
        });
    };
    PedidosPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PedidosPage');
    };
    PedidosPage.prototype.verpedido = function (carro) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__details_details__["a" /* DetailsPage */], { carro: carro });
    };
    PedidosPage.prototype.verpedido2 = function (carro) {
        var user = this.user;
        console.log('user: ' + JSON.stringify(user));
        var provincia = carro;
        console.log('provincia: ') + JSON.stringify(provincia);
        console.log('provincia2: ') + provincia;
        // this.navCtrl.push(InterprovinciaPage , {provincia, user});//  
    };
    PedidosPage.prototype.trackByIdx = function (index) {
        return index;
    };
    //para buscar palabra clave en negocios
    PedidosPage.prototype.openDialogo6 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¿Usted desea borrar este pedido?",
                            message: 'Ningún dato de este pedido quedará visible en la aplicación.',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    handler: function (data) {
                                        // console.log('en string '+JSON.stringify(data)); //to see the object
                                        // this.openDialogo7()                
                                        var i = { "oculto": true };
                                        //   console.log(i);
                                        var id = carro.id;
                                        _this.gasolineraService.updatePedido(i, id).then(function (result) {
                                            // console.log(result);
                                            // let user = JSON.parse(result[0])
                                            // console.log("user : "+user);
                                            if (result[0].id == id) {
                                                _this.presentToast4("Pedido eliminado");
                                                carro.oculto = true;
                                            }
                                            else {
                                                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                                            }
                                        }, function (err) {
                                            console.log(err);
                                        });
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    PedidosPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    PedidosPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-pedidos',template:/*ion-inline-start:"E:\14\gaso\src\pages\pedidos\pedidos.html"*/'<!--\n\n  Generated template for the PedidosPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header class="border-round2">\n\n\n\n  <ion-navbar>\n\n    <ion-title>Pedidos</ion-title>\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content padding>\n\n  <div *ngFor="let carro of this.carro" > \n\n\n\n    <div *ngIf="carro.oculto==false">\n\n      <ion-card  class="masterscard">         \n\n        <!-- <img src="{{product.url}}" style="padding: 0px;width: 50%" class="imgRedonda">        \n\n  \n\n        \n\n              <div *ngIf="carro.mensaje.substr(-3)==\'USD\'" style="background-color: #00bb2d;text-align:center">               \n\n                                                            \n\n                <ion-buttons  >                \n\n                  <button color="secondary" ion-button outline icon-only round  (click)="veruta(carro)"> \n\n                    <ion-icon name="pin"> Destino </ion-icon>\n\n                  </button>\n\n                  \n\n                </ion-buttons>  \n\n                  \n\n                </div>\n\n                <div *ngIf="carro.mensaje.substr(-3)==\'EUR\'" style="background-color: #4B77BE;text-align:center">               \n\n                                                        \n\n                  <ion-buttons  >                \n\n                    <button  color="secondary" ion-button outline icon-only round  (click)="veruta(carro)"> \n\n                      <ion-icon name="pin"> Destino </ion-icon>\n\n                    </button>\n\n                    \n\n                  </ion-buttons>  \n\n              \n\n                </div>\n\n                <div *ngIf="carro.mensaje.substr(-3)==\'CUP\'" style="text-align:center" >               \n\n                                                            \n\n                  <ion-buttons  >                \n\n                    <button  color="secondary" ion-button outline icon-only round  (click)="veruta(carro)"> \n\n                      <ion-icon name="pin"> Destino </ion-icon>\n\n                    </button>\n\n                    \n\n                  </ion-buttons>  \n\n                  \n\n                </div>\n\n        -->    \n\n  \n\n        <ion-card-content>\n\n          <div *ngIf="carro.est==4">\n\n            <h2> <ion-icon   color="danger" name="checkmark-circle"> <b> Pedido Cancelado </b></ion-icon>   </h2> \n\n                                              \n\n          </div> \n\n  \n\n                        <div  style="text-align:center" > \n\n                                    \n\n                                    <ion-icon name="car" color="energy"> Pedido número: <b> {{carro.id}} </b> </ion-icon>\n\n                                    <h2> <b><ion-icon name="calendar"> </ion-icon> Fecha: </b>{{carro.created_at}}</h2> \n\n  \n\n  \n\n                                    \n\n                                    <h2><b><ion-icon color="energy" name="done-all"> </ion-icon> Total:</b> {{carro.total}}</h2>  \n\n                                   \n\n  \n\n                                    \n\n                                    <div >\n\n                                      <button style="text-align:center" ion-button outline icon-only round (click)="verpedido(carro)"><ion-icon name="cart"> Detalles</ion-icon></button>   \n\n                                    </div>  \n\n                                      \n\n                            \n\n                        </div>\n\n                        <div >\n\n                          <button  color="danger" style="text-align:right" ion-button outline icon-only round (click)="openDialogo6(carro)"><ion-icon name="trash"> Borrar</ion-icon></button>   \n\n                        </div>                            \n\n        </ion-card-content>  \n\n      </ion-card> \n\n\n\n    </div>\n\n\n\n    \n\n  </div>  \n\n\n\n\n\n\n\n  <div *ngFor="let carro of carros; let idx = index; trackBy:trackByIdx(carro) " >     \n\n\n\n    <ion-card  class="masterscard">    \n\n\n\n      <ion-card-content>\n\n      \n\n        <ion-row align-items-center  >\n\n          \n\n        \n\n            <ion-col  size="4"  >                                          \n\n              <ion-icon color="secondary" name="car" > Origen: <b> {{carro.origen}} </b> </ion-icon>\n\n              <br>\n\n              <ion-icon color="secondary" name="locate">Destino: <b>{{carro.destino}} </b> </ion-icon>  \n\n\n\n            </ion-col>                     \n\n    \n\n            <ion-col  size="4" >                                    \n\n              <ion-icon color="secondary"  name="done-all"> {{carro.descripcion}}</ion-icon>   \n\n            \n\n            </ion-col>  \n\n    \n\n        </ion-row>\n\n\n\n                      <div  style="text-align:center" > \n\n                                  \n\n                                  <h2><ion-icon  color="secondary" name="logo-usd"> <b>Precio:</b> {{carro.costo}}</ion-icon> </h2>                                \n\n                                    \n\n                                  <div >\n\n                                    <button style="text-align:center" ion-button outline icon-only round (click)="verpedido2(idx)"> <ion-icon name="cart"> Hacer pedido {{idx}}</ion-icon></button>   \n\n                                  </div>         \n\n                      </div>\n\n                      <label item-right>{{this.carros[idx].costo}}</label>\n\n\n\n      </ion-card-content>  \n\n    </ion-card> \n\n\n\n\n\n  \n\n</div>  \n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\pedidos\pedidos.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */]])
    ], PedidosPage);
    return PedidosPage;
}());

//# sourceMappingURL=pedidos.js.map

/***/ }),

/***/ 363:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DetailsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ruta_ruta__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_global_global__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the DetailsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DetailsPage = /** @class */ (function () {
    function DetailsPage(navCtrl, navParams, global) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.global = global;
        this.enviarvende = false;
        this.pedidocan = false;
        this.detalles3 = false;
        this.pedido = {
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " "
        };
        this.pedidotax = false;
        this.dataFromOtherPage2 = null;
        this.callback2 = function (data) {
            _this.dataFromOtherPage2 = data;
            if (_this.dataFromOtherPage2.ok) {
                _this.detalles2 = true;
                // this.envio=this.dataFromOtherPage.envio
                // this.total=+(this.subtotal+this.envio).toFixed(2)
                _this.ruta = _this.dataFromOtherPage2.ruta;
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage2);
        };
        this.detalles2 = false;
        this.carro = this.navParams.get('carro'); // objeto con los datos del negocio
    }
    DetailsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DetailsPage');
        /*     if(this.carro.tax){
              this.pedidotax=true
            }else{
              this.pedidotax=false
            } */
        this.pedidotax = true;
        if (this.carro.est == 4) {
            this.pedidocan = true;
        }
        else {
            this.pedidocan = false;
        }
        // this.enviarvende=this.carro.apr
        // this.detalles3=this.carro.apr
        this.carrito = [];
        // this.carrito = JSON.parse(this.carro.prd); 
        this.carrito = this.carro.prd;
        //console.log(this.carrito);
        //console.log(carro.prd);
        this.subtotal = 0;
        /*
            for (let casita of this.carrito) {
             // this.subtotal=+(this.subtotal+casita.subtotal).toFixed(2)
             this.subtotal=+(this.subtotal+casita.subtotal)
             }
             this.subtotal=+(this.subtotal).toFixed(2)
              */
        // this.pedido = JSON.parse(this.carro.dat);
        this.pedido = this.carro.dat;
        this.id2 = this.carro.id;
    };
    DetailsPage.prototype.trackByIdx = function (index) {
        return index;
    };
    DetailsPage.prototype.calculadora = function () {
        if (this.carro.prov) {
        }
        else {
            var carro = {
                "curPos": this.pedido,
            };
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__ruta_ruta__["a" /* RutaPage */], { carro: carro, callback: this.callback2 }); //
        }
    };
    DetailsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-details',template:/*ion-inline-start:"E:\14\gaso\src\pages\details\details.html"*/'<!--\n\n  Generated template for the DetailsPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header class="border-round2">\n\n\n\n  <ion-navbar>\n\n   \n\n    <ion-row align-items-left>\n\n      <ion-title>Pedido {{carro.id}}</ion-title>     \n\n     \n\n      \n\n     <!--  <div   size="4">       \n\n        <h1 > Total: {{carro.mensaje}}    </h1> \n\n        \n\n      </div> -->\n\n\n\n    </ion-row>\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content  >\n\n        \n\n            <!-- detalles -->\n\n            <div >\n\n\n\n            <ion-grid padding >                    \n\n                <ion-row>\n\n                    <ion-col>\n\n                      <div>                                                     \n\n                        <ion-toolbar no-border-top>      \n\n                          <!-- categorias   -->\n\n                            <ion-card  class="masterscard">                      \n\n                            <ion-card-content> \n\n                              <div  style="text-align:center"> \n\n                                <h2><b>Vendedor:</b> {{pedido.ven}}</h2>    \n\n                              </div>\n\n\n\n                                    <!-- \n\n                                    <div  style="text-align:center"> \n\n                                      <h2> <b><ion-icon name="person"> </ion-icon> Chofer: </b>{{this.carro.choferes.nam}}</h2>\n\n                                  </div>\n\n  -->\n\n                            </ion-card-content>  \n\n                          </ion-card>\n\n\n\n\n\n                                <ion-card class="masterscard">         \n\n                                  <ion-card-content *ngIf="pedidotax">   \n\n                                    <ion-col  size="4">       \n\n                                      <div  style="text-align:center"> \n\n                                      <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Precio: {{pedido.total}}  </ion-icon></p> \n\n                                      </div>\n\n                                    </ion-col> \n\n\n\n<!--                                 <ion-row align-items-center  >\n\n                                  <ion-col size="4">\n\n                                  </ion-col> \n\n                                  <ion-col  size="4">       \n\n                                  </ion-col> \n\n                                  <ion-col  size="4">       \n\n                                    <p color="secondary"><ion-icon name="logo-usd" color="secondary"> Precio: {{pedido.total}}  </ion-icon></p> \n\n                                  </ion-col>             \n\n                                </ion-row> \n\n                                 -->\n\n                                <ion-row align-items-center  >\n\n                                <ion-col size="4">\n\n                                </ion-col> \n\n                                <ion-col  size="4">       \n\n                                </ion-col> \n\n                                            \n\n                                </ion-row> \n\n                                </ion-card-content>  \n\n                                <!-- detalles pedido comida -->\n\n                                <ion-card-content *ngIf="!pedidotax">   \n\n                                  <ion-row align-items-center  >\n\n                                    <ion-col size="4">\n\n                                    </ion-col> \n\n                                    <ion-col  size="4">       \n\n                                    </ion-col> \n\n                                    <ion-col  size="4">       \n\n                                      <p color="secondary"> Subtotal: {{this.subtotal}} </p> \n\n                                    </ion-col>             \n\n                                </ion-row> \n\n                                <ion-row align-items-center  >\n\n                                  <ion-col size="4">\n\n                                  </ion-col> \n\n                                  <ion-col  size="4">       \n\n                                  </ion-col> \n\n                                  <ion-col  size="4">       \n\n                                    <p color="secondary"> Envío: {{pedido.envio}}  </p> \n\n                                  </ion-col>             \n\n                                </ion-row> \n\n                                <ion-row align-items-center  >\n\n                                  <ion-col size="4">\n\n                                  </ion-col> \n\n                                  <ion-col  size="4">       \n\n                                  </ion-col> \n\n                                  <ion-col  size="4">       \n\n                                    <p color="secondary"> Propina: {{pedido.propina}}  </p> \n\n                                  </ion-col>             \n\n                                </ion-row> \n\n                                <ion-row align-items-center  >\n\n                                <ion-col size="4">\n\n                                </ion-col> \n\n                                <ion-col  size="4">       \n\n                                </ion-col> \n\n                                <ion-col  size="4">       \n\n                                  <p color="secondary"> <b> Total: {{carro.mensaje}}  </b> </p> \n\n                                </ion-col>             \n\n                                </ion-row> \n\n                                <ion-row align-items-center  >\n\n                                <ion-col size="4">\n\n                                </ion-col> \n\n                                <ion-col  size="4">       \n\n                                </ion-col> \n\n                                          \n\n                                </ion-row> \n\n                                </ion-card-content>   \n\n                                \n\n                                </ion-card>                \n\n                                      \n\n                                                              \n\n                                <ion-card class="masterscard" >                      \n\n                                  <ion-card-content> \n\n                                            <div  style="text-align:center"> \n\n                                              <h2><b>Cliente:</b> {{pedido.nom}}</h2>    \n\n                                              <!-- <h2><b>Dirección: </b>{{pedido.dir}}</h2>   \n\n                                                 <h2><b>Tel cliente:</b> {{pedido.tel}}</h2>    \n\n                                               -->\n\n                                              <h2><b>Tel entrega:</b> {{pedido.telpedido}}</h2>             \n\n                                             <br>\n\n                                              <div  *ngIf="this.carro.prov">\n\n                                                <h2><b>Origen:</b> {{this.carro.dat.origename}}</h2>             \n\n                                             \n\n                                                 <h2><b>Destino:</b> {{this.carro.dat.destinoname}}</h2>             \n\n                                             \n\n                                                 <h2><b>Descripción:</b> {{this.carro.dat.descripcion}}</h2> \n\n                                              </div>\n\n\n\n                                              <div  *ngIf="!this.carro.prov">\n\n                                                <button ion-button clear item-end (click)="calculadora()"><ion-icon name="pin"></ion-icon> Destino </button>   \n\n                                                            \n\n                                              </div>\n\n                        \n\n                                          <!--   <h2><b>Latitud:</b> {{pedido.negoPosLat}}</h2> \n\n                                              <h2><b>Envio:</b> {{pedido.envio}}</h2> \n\n                                              <h2><b>Total:</b> {{pedido.total}}</h2>  -->\n\n                                          </div>\n\n                                          \n\n                                  </ion-card-content> \n\n                                                \n\n                                </ion-card> \n\n                                \n\n                                <ion-card *ngIf="this.carro.est==4" class="masterscard">                      \n\n                                  <ion-card-content> \n\n                                            <div  style="text-align:center"> \n\n                                              <h2> <ion-icon   color="danger" name="checkmark-circle"> <b> Pedido Cancelado </b></ion-icon>   </h2> \n\n                                              <h2> {{pedido.motivo}}</h2>             \n\n                                             \n\n                                          </div>\n\n                                          \n\n                                  </ion-card-content> \n\n                                                \n\n                                </ion-card> \n\n                        </ion-toolbar>  \n\n                      <hr>\n\n                    </div>\n\n                    </ion-col>\n\n                  </ion-row>\n\n            </ion-grid>  \n\n            \n\n          \n\n          </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\details\details.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_global_global__["a" /* GlobalProvider */]])
    ], DetailsPage);
    return DetailsPage;
}());

//# sourceMappingURL=details.js.map

/***/ }),

/***/ 371:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProvinciaPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__gasolinas_gasolinas__ = __webpack_require__(372);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__taxis_taxis__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







/**
 * Generated class for the ProvinciaPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
// @IonicPage() 
var ProvinciaPage = /** @class */ (function () {
    function ProvinciaPage(navCtrl, navParams, formBuilder, toastCtrl, gasolineraService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.toastCtrl = toastCtrl;
        this.gasolineraService = gasolineraService;
        // provincias:any 
        this.provincias = [
            {
                "nombre": "Experiencia 1",
                "costo": "12000",
                "origen": "La Habana",
                "destino": "Varadero",
                "descripcion": "Cuatro personas, carro moderno con aire acondicionado y música!!!"
            },
            {
                "nombre": "Experiencia 2",
                "costo": "15000",
                "origen": "La Habana",
                "destino": "Pinar del Río",
                "descripcion": "Tres personas, carro moderno con aire acondicionado y música!!! Solo hasta la terminal"
            }
        ];
        this.okpedido = false;
        this.pedidoProv = false;
        this.adm = false;
        this.oferta = {
            "nombre": "Experiencia 1",
            "costo": "0",
            "origen": "La Habana",
            "destino": "Varadero",
            "descripcion": "Cuatro personas, carro moderno con aire acondicionado y música!!!"
        };
        this.myForm2 = this.formBuilder.group({
            nombre: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(4), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            moto: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(4), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            firstName: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(4), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(4), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].maxLength(160), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
            correo: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].minLength(3), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["f" /* Validators */].required])],
        });
        this.tarifa = {
            "nombre": "",
            "moto": "",
            "auto": "",
            "minivan": "",
            "microbus": 0,
        };
        // this.provincias = this.navParams.get('datos'); // objeto con lo de las provincias
        this.user = this.navParams.get('user');
        this.provincias = this.user.parametros.parametros.provincia;
    }
    ProvinciaPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProvinciasPage');
        console.log('ionViewDidLoad ProvinciasPage provincia: ' + JSON.stringify(this.provincias));
        this.adm = this.user.adm;
        // this.user.parametros.provincias
    };
    ProvinciaPage.prototype.verpedido = function (carro) {
        var user = this.user;
        //  console.log('user: '+JSON.stringify(user));
        var pedido = carro;
        console.log('provincia: ' + JSON.stringify(pedido));
        console.log('user: ' + JSON.stringify(user));
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__gasolinas_gasolinas__["a" /* GasolinasPage */], { pedido: pedido, user: user }); //     
    };
    ProvinciaPage.prototype.trackByIdx = function (index) {
        return index;
    };
    ProvinciaPage.prototype.onSelect = function (carro) {
        var provincia = carro;
        console.log('provincia: ') + JSON.stringify(provincia);
        console.log('provincia2: ') + provincia;
    };
    ProvinciaPage.prototype.regresar = function () {
        var user = this.user;
        var id = this.user.idt;
        // this.navCtrl.push(TaxisPage, {user, id})
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__taxis_taxis__["a" /* TaxisPage */]);
    };
    ProvinciaPage.prototype.addoferta = function (carro) {
        // 
        if (!this.myForm2.valid) {
            this.presentToast4('Error en los datos ');
        }
        else {
            this.oferta.nombre = this.tarifa.nombre;
            this.oferta.origen = this.tarifa.moto;
            this.oferta.destino = this.tarifa.auto;
            this.oferta.descripcion = this.tarifa.minivan;
            this.oferta.costo = this.tarifa.microbus.toString();
            console.log('oferta: ' + JSON.stringify(this.oferta));
            this.provincias.push(this.oferta);
            this.user.parametros.parametros.provincia = this.provincias;
            this.updateItem();
        }
    };
    ProvinciaPage.prototype.quitoferta = function (carro) {
        /*  this.user.parametros.parametros.provincia = this.provincias.filter((el) => {
           return el.descripcion !== carro.descripcion;
         });
          */
        // this.user.parametros.parametros.provincia.pop(0)
        console.log('descripcion: ' + carro.descripcion);
        var pedido = carro;
        console.log('provincia: ' + JSON.stringify(pedido));
        var setValue = this.provincias;
        var dataRemoved = setValue.filter(function (el) {
            return el.descripcion !== carro.descripcion;
        });
        this.provincias = dataRemoved;
        this.user.parametros.parametros.provincia = this.provincias;
        this.updateItem();
    };
    ProvinciaPage.prototype.updateItem = function () {
        var _this = this;
        var i = {
            "parametros": this.user.parametros.parametros,
        };
        var id = 1;
        this.gasolineraService.updateParams(i, id).then(function (result) {
            if (result[0].id == 1) {
                _this.presentToast4('Información actualizada. ');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
    };
    ProvinciaPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    ProvinciaPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-provincia',template:/*ion-inline-start:"E:\14\gaso\src\pages\provincia\provincia.html"*/'<!--\n\n  Generated template for the ProvinciaPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header  class="border-round2">\n\n\n\n  <ion-navbar >\n\n    <ion-title> <ion-icon  name="briefcase" ></ion-icon> Viajes entre provincias</ion-title>\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content >\n\n\n\n<!--   <ion-item button *ngFor="let carro of provincias" (click)="onSelect(carro)">\n\n    <ion-row align-items-center  >\n\n            \n\n          \n\n      <ion-col  size="4"  >                                          \n\n        <ion-icon color="secondary" name="car" > Origen: <b> {{carro.origen}} </b> </ion-icon>\n\n        <br>\n\n        <ion-icon color="secondary" name="locate">Destino: <b>{{carro.destino}} </b> </ion-icon>  \n\n\n\n      </ion-col>                     \n\n\n\n      <ion-col  size="4" >                                    \n\n        <ion-icon color="secondary"  name="done-all"> {{carro.descripcion}}</ion-icon>   \n\n      \n\n      </ion-col>  \n\n\n\n  </ion-row>\n\n\n\n      <div  style="text-align:center" > \n\n                                        \n\n        <h2><ion-icon  color="secondary" name="logo-usd"> <b>Precio:</b> {{carro.costo}}</ion-icon> </h2>                                \n\n          \n\n          <div >\n\n            <button style="text-align:center" ion-button outline icon-only round (click)="verpedido(carro)"> <ion-icon name="cart"> Hacer pedido </ion-icon></button>   \n\n          </div>         \n\n      </div>\n\n\n\n  </ion-item> \n\n  <button color="dark" style="text-align:center" round ion-button  (click)="regresar()"> <ion-icon name="cart"> regresar</ion-icon></button>   \n\n   \n\n -->\n\n\n\n\n\n                                 \n\n\n\n  <div *ngFor="let carro of provincias; let idx = index; trackBy:trackByIdx(carro) " >     \n\n\n\n      <ion-card class="border-round" >    \n\n\n\n        <ion-card-content>\n\n        <div  style="text-align:left" > \n\n                <div  class="columna">\n\n                     <img src="./assets/imgs/logonego.jpg" > \n\n                                  \n\n                   </div> \n\n                   \n\n              </div>\n\n          <ion-row align-items-center  >\n\n\n\n           \n\n            \n\n            <ion-col  size="4"  >\n\n\n\n              <div  style="text-align:left" > \n\n\n\n                  <h2> \n\n                      \n\n                    <b>{{carro.nombre}}</b> \n\n                  \n\n                  </h2>                                \n\n\n\n              </div>  \n\n            </ion-col>\n\n            \n\n          \n\n          </ion-row>\n\n\n\n          \n\n          <ion-row align-items-center  >\n\n            \n\n          \n\n              <ion-col  size="4"  >                                          \n\n                <ion-icon color="secondary" name="car" > Origen: <b> {{carro.origen}} </b> </ion-icon>\n\n                <br>\n\n                <ion-icon color="secondary" name="locate">Destino: <b>{{carro.destino}} </b> </ion-icon>  \n\n\n\n              </ion-col>                     \n\n      \n\n              <ion-col  size="4" >                                    \n\n                <ion-icon color="secondary"  name="done-all"> {{carro.descripcion}}</ion-icon>   \n\n              \n\n              </ion-col>  \n\n      \n\n          </ion-row>\n\n  \n\n                        <div  style="text-align:center" > \n\n                                    \n\n                                    <h2><ion-icon  color="secondary" name="logo-usd"> <b>Precio:</b> {{carro.costo}}</ion-icon> </h2>                                \n\n                                      \n\n                                    <div *ngIf="!adm">\n\n                                      <!-- outline icon-only round -->\n\n                                      <button color="dark" style="text-align:center" round ion-button  (click)="verpedido(carro)"> <ion-icon name="cart"> Hacer pedido</ion-icon></button>   \n\n                                    </div>       \n\n                                    <div *ngIf="adm">\n\n                                      <!-- outline icon-only round -->\n\n                                      <button color="danger" style="text-align:center" round ion-button  (click)="quitoferta(carro)"> <ion-icon name="cart"> Quitar pedido</ion-icon></button>   \n\n                                    </div>         \n\n                        </div>\n\n\n\n        </ion-card-content>  \n\n      </ion-card> \n\n    \n\n  </div>  \n\n\n\n\n\n\n\n  <ion-card class="border-round" *ngIf="adm">    \n\n\n\n    <ion-card-content>    \n\n      <div style="right: 15px">               \n\n        <form [formGroup]="myForm2">\n\n       \n\n          <ion-item  >\n\n            <ion-label floating><ion-icon name="car">  Nombre:</ion-icon> </ion-label>\n\n              <ion-input   formControlName="nombre" type="text"  [(ngModel)]="this.tarifa.nombre" [class.invalid]="!myForm2.controls.nombre.valid  && (myForm2.controls.nombre.dirty || submitAttempt) "></ion-input>   \n\n          </ion-item>            \n\n          <ion-item *ngIf="!myForm2.controls.nombre.valid  && (myForm2.controls.nombre.dirty || submitAttempt)">\n\n            <p>Por favor escriba un origen.</p>\n\n        </ion-item>\n\n\n\n          <ion-item  >\n\n              <ion-label floating><ion-icon name="car">  Origen:</ion-icon> </ion-label>\n\n                <ion-input   formControlName="moto" type="text"  [(ngModel)]="this.tarifa.moto" [class.invalid]="!myForm2.controls.moto.valid  && (myForm2.controls.moto.dirty || submitAttempt) "></ion-input>   \n\n            </ion-item>            \n\n            <ion-item *ngIf="!myForm2.controls.moto.valid  && (myForm2.controls.moto.dirty || submitAttempt)">\n\n              <p>Por favor escriba un origen.</p>\n\n          </ion-item>\n\n           \n\n            <ion-item  >\n\n                <ion-label floating><ion-icon name="locate">  Destino:</ion-icon> </ion-label>\n\n                  <ion-input   formControlName="firstName" type="text"  [(ngModel)]="this.tarifa.auto" [class.invalid]="!myForm2.controls.firstName.valid  && (myForm2.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n            </ion-item>            \n\n            <ion-item *ngIf="!myForm2.controls.firstName.valid  && (myForm2.controls.firstName.dirty || submitAttempt)">\n\n              <p>Por favor escriba un destino.</p>\n\n          </ion-item>\n\n    \n\n            <ion-item  > \n\n                <ion-label floating> <ion-icon name="done-all">  Descripción:</ion-icon> </ion-label>\n\n              <ion-input   formControlName="telefono" type="text"  [(ngModel)]="this.tarifa.minivan" [class.invalid]="!myForm2.controls.telefono.valid  && (myForm2.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n          </ion-item>\n\n          <ion-item *ngIf="!myForm2.controls.telefono.valid  && (myForm2.controls.telefono.dirty || submitAttempt)">\n\n              <p>Por favor escriba una descripción.</p>\n\n          </ion-item>\n\n            <ion-item  >\n\n                  <ion-label floating><ion-icon name="logo-usd">  Precio:</ion-icon> </ion-label>\n\n                  <ion-input   formControlName="correo" type="number" [(ngModel)]="this.tarifa.microbus" [class.invalid]="!myForm2.controls.correo.valid  && (myForm2.controls.correo.dirty || submitAttempt) "></ion-input>\n\n            </ion-item>\n\n          <ion-item *ngIf="!myForm2.controls.correo.valid  && (myForm2.controls.correo.dirty || submitAttempt)">\n\n              <p>Por favor escriba un número válido.</p>\n\n          </ion-item>\n\n            \n\n          \n\n            <br> \n\n    \n\n            <div  style="text-align:center" >                                             \n\n               <div >\n\n                  <!-- outline icon-only round -->\n\n                  <button color="dark" style="text-align:center" round ion-button  (click)="addoferta()"> <ion-icon name="cart"> Hacer oferta</ion-icon></button>   \n\n               </div>                                           \n\n          </div>\n\n    \n\n    \n\n              \n\n          <br> \n\n        </form>\n\n      </div>\n\n    </ion-card-content>  \n\n  </ion-card> \n\n\n\n\n\n\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\provincia\provincia.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_5__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */]])
    ], ProvinciaPage);
    return ProvinciaPage;
}());

//# sourceMappingURL=provincia.js.map

/***/ }),

/***/ 372:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GasolinasPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__homess_homess__ = __webpack_require__(373);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_native_audio__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_global_global__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};










/**
 * Generated class for the GasolinaPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
//@IonicPage()  
var GasolinasPage = /** @class */ (function () {
    function GasolinasPage(navCtrl, navParams, formBuilder, socialSharing, toastCtrl, gasolineraService, loadingService, nativeAudio, platform, global) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.socialSharing = socialSharing;
        this.toastCtrl = toastCtrl;
        this.gasolineraService = gasolineraService;
        this.loadingService = loadingService;
        this.nativeAudio = nativeAudio;
        this.platform = platform;
        this.global = global;
        //para recibir datos con un pop(), en este caso el tipo de icono desde la pagina taxis
        this.dataFromOtherPage = null;
        this.callback2 = function (data) {
            _this.dataFromOtherPage = data;
            if (_this.dataFromOtherPage.ok) {
                _this.cambiacolor = true;
                _this.envio = _this.dataFromOtherPage.envio;
                _this.total = +(_this.subtotal + _this.envio).toFixed(2);
                _this.ruta = _this.dataFromOtherPage.ruta;
                _this.curPos = _this.dataFromOtherPage.curPos;
                _this.negoPos = _this.dataFromOtherPage.negoPos;
            }
            else {
                _this.cambiacolor = false;
                _this.envio = 0;
            }
            console.log('data received from other page', _this.dataFromOtherPage);
        };
        this.fotos = [];
        this.pedido = false;
        this.pedidoprueb = false;
        this.des = true;
        this.listanegra = false;
        this.ln = false;
        this.cont = 0;
        this.EMAILPATTERN = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
        this.myForm = this.formBuilder.group({});
        this.mascota = false;
        this.equipaje = false;
        this.tipoAuto = 0;
        this.okpedido = false;
        this.pedidoprov = this.navParams.get('pedido'); //datos del negocio
        this.user = this.navParams.get('user');
        this.vnombre = this.user.nam;
        this.vdatos = this.user.tel;
        //validaciones del formulario
        this.datos = this.formBuilder.group({
            //  idt: ['', Validators.required],
            // nam: ['', Validators.required],
            //  pre: ['', Validators.required],
            car: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
        });
        //this.myObjStr = JSON.stringify(this.carro);  
        // This is used to unload the track. It's useful if you're experimenting with track locations
        // The Native Audio plugin can only be called once the platform is ready
        this.platform.ready().then(function () {
            console.log("platform ready");
            // This is used to unload the track. It's useful if you're experimenting with track locations
            _this.nativeAudio.unload('trackIDD').then(function () {
                console.log("unloaded audio!");
            }, function (err) {
                console.log("couldn't unload audio... " + err);
            });
            // 'trackID' can be anything
            _this.nativeAudio.preloadComplex('trackIDD', 'assets/audio/pedidoRecibido.mp3', 1, 1, 0).then(function () {
                console.log("audio loaded!");
            }, function (err) {
                console.log("audio failed: " + err);
            });
        });
    }
    GasolinasPage.prototype.getDate = function () {
        var date = new Date();
        this.today = date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + date.getDate()).slice(-2);
        console.log(this.today);
    };
    GasolinasPage.prototype.ionViewWillEnter = function () {
        if (this.okpedido) {
            this.callback = this.navParams.get("callback");
            // console.log('callback de gasolinas:  ', this.callback);  
        }
    };
    GasolinasPage.prototype.ionViewWillLeave = function () {
        var _this = this;
        console.log('6 - ¿Estás seguro que quieres dejar la página?.');
        if (this.okpedido) {
            var tarifa = {
                ok: true,
                user: this.user
            };
            this.callback(tarifa).then(function () {
                _this.navCtrl.pop();
            });
        }
    };
    GasolinasPage.prototype.ionViewDidLoad = function () {
        //this.envio="Oprima el botón"
        this.cambiacolor = true;
        this.des = true;
        this.getDate();
    };
    GasolinasPage.prototype.trackByIdx = function (index, product) {
        return index;
    };
    GasolinasPage.prototype.calculadora = function () {
        console.log("hora: " + this.myDate2);
        console.log("dia: " + this.myDate1);
        var carr = this.nego;
        //  this.navCtrl.push(HomessPage, {tar, carr, callback: this.callback2 });//      
        // this.tari=this.tipo
        var tar = this.tari;
        if (!this.myForm.valid) {
            this.presentToast4('Error en los datos ');
        }
        else {
            if (this.myDate1) {
                if (this.myDate2) {
                    console.log("carro: " + carr.lat);
                    this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__homess_homess__["a" /* HomessPage */], { tar: tar, carr: carr, callback: this.callback2 }); //                  
                }
                else {
                    this.presentToast4('Por favor seleccione la hora ');
                }
            }
            else {
                this.presentToast4('Por favor seleccione el día ');
            }
        }
    };
    GasolinasPage.prototype.registrar = function () {
        console.log(this.vnombre + ': ' + this.vdireccion + ' :' + this.vdatos);
    };
    GasolinasPage.prototype.what = function () {
        // console.log(this.nego.nam);
        // console.log(this.nego.ini);
        // let message2 = " Pedido "+this.numpedido  +" Ruta: "+this.ruta+ " Hora: "+this.myDate2 + " Día: " + this.myDate1+ " Costo: "+this.total;
        // pasajeros: this.vtelefono2,
        // equipaje: this.equipaje,
        // animales:this.mascota,
        // otros: "vacío",
        // dia:this.myDate1,
        // hora:this.myDate2,
        // vehiculo:this.gender
        var equip;
        var masco;
        if (this.equipaje) {
            equip = "Sí";
        }
        else {
            equip = "No";
        }
        if (this.mascota) {
            masco = "Sí";
        }
        else {
            masco = "No";
        }
        var tipo;
        if (this.tipoAuto == 1) {
            tipo = "Básico";
        }
        if (this.tipoAuto == 2) {
            tipo = "Moto";
        }
        if (this.tipoAuto == 3) {
            tipo = "Microbús";
        }
        // +" Costo: "+this.total+'\n'
        var message = " Pedido: " + this.numpedido + '\n' + " Ruta: " + this.ruta + '\n' + " Origen: " + this.origename + '\n' + " Destino: " + this.destinoname + " Pasajeros: " + this.vtelefono2 + '\n' + " Hora: " + this.myDate2 + '\n' + " Día: " + this.myDate1 + '\n' + " Equipaje: " + equip + '\n' + " Mascotas: " + masco + '\n' + " Tipo auto: " + tipo + '\n';
        // let message = "Hola he realizado el pedido: "+this.numpedido
        console.log(message);
        this.socialSharing.shareViaWhatsAppToReceiver(this.nego.ini, message, ' ').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    GasolinasPage.prototype.what2 = function () {
        // console.log(this.nego.nam);
        // console.log(this.nego.ini);
        var message = this.vnombre + " ha realizado un pedido DE PRUEBA al negocio para " + this.vdireccion;
        this.socialSharing.shareViaWhatsAppToReceiver(this.nego.ini, message, ' ').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    GasolinasPage.prototype.whatLn = function () {
        // console.log(this.nego.nam);
        console.log("Mi usuario " + this.idcom + " con id:" + this.idtc + " esta en la Lista Negra");
        var message = "Mi usuario " + this.idcom + " con id:" + this.idtc + " esta en la Lista Negra.";
        this.socialSharing.shareViaWhatsAppToReceiver(this.nego.ini, message, ' ', " Únase a nuestro grupo en https://chat.whatsapp.com/EvZlFOYFG8AH1XG9Y4DVc9").then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    GasolinasPage.prototype.pedidoreal = function () {
        //this.pedido=!this.pedido
        //this.pedidoprueb=false
        if (this.myDate1) {
            if (this.myDate2) {
                if (this.listanegra) {
                    this.ln = true;
                }
                else {
                    this.myAlert_show3();
                }
            }
            else {
                this.presentToast4('Por favor seleccione la hora ');
            }
        }
        else {
            this.presentToast4('Por favor seleccione el día ');
        }
        /* if(!this.myForm.valid){
          this.presentToast4('Error en los datos ');
        }
        else {
                                         
        } */
    };
    GasolinasPage.prototype.pedidoprueba = function () {
        //this.pedidoprueb=!this.pedidoprueb   
        //this.pedido=false
        var _this = this;
        //buscar los pedidos de prueba del usuarios, contarlos y si son menos de tres dejarle hacer el pedido de prueba
        this.gasolineraService.getMensajesNego5(this.idtc).subscribe(function (response) {
            var users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            _this.cont = 0;
            for (var _i = 0, users3_1 = users3; _i < users3_1.length; _i++) {
                var carro = users3_1[_i];
                if (!carro.pru) {
                    _this.cont++;
                }
            }
            if (_this.cont > 1) {
                _this.presentToast4('Usted tiene ' + _this.cont + ' pedidos de prueba, no es posible hace más');
            }
            else {
                if (_this.listanegra) {
                    _this.ln = true;
                }
                else {
                    var real = false;
                    _this.enviamsg(real);
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    GasolinasPage.prototype.updateValues = function (values) {
        if (values) {
            this.day = values.day;
            this.month = values.month;
            this.myDate1 = this.day + " " + this.month;
        }
    };
    GasolinasPage.prototype.enviamsg = function (real) {
        var _this = this;
        var nego = +(this.categorias.porciento);
        var porc = +(((this.envio * nego) / 100).toFixed(2));
        var dat = {
            "id": this.idcompra,
            "ven": this.nego.nam,
            "nom": this.vnombre,
            "dir": this.vdireccion,
            "telpedido": this.vdatos,
            "tel": this.telpedido,
            "envio": this.envio,
            "total": this.envio + " CUP",
            "porc": porc,
            "curPosLat": this.curPos.lat,
            "curPosLng": this.curPos.lng,
            "negoPosLat": this.negoPos.lat,
            "negoPosLng": this.negoPos.lng,
            "tar": this.tari,
            "telneg": this.nego.tel,
            "moneda": "cupflag",
            "origename": this.origename,
            "destinoname": this.destinoname,
        };
        var datos = JSON.stringify(dat);
        this.datos2 = datos;
        console.log("datos: " + datos);
        var tipo;
        var pasajeros;
        if (this.tipoAuto == 1) {
            tipo = "Básico";
            pasajeros = 4;
        }
        if (this.tipoAuto == 2) {
            // tipo= "Confort (Aire acondicionado)"
            tipo = "Moto";
            pasajeros = 1;
        }
        if (this.tipoAuto == 3) {
            tipo = "Microbús";
            pasajeros = 12;
        }
        var carrito = {
            // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
            pasajeros: pasajeros,
            equipaje: this.equipaje,
            animales: this.mascota,
            otros: "vacío",
            dia: this.myDate1,
            hora: this.myDate2,
            vehiculo: tipo
        };
        console.log("varaible datos " + datos);
        this.myObjStr = JSON.stringify(carrito);
        console.log("varaible carrito" + this.myObjStr);
        // this.loadingService.presentLoading()
        var i = {
            "mensaje": this.envio + " CUP",
            "booleano": this.categorias.porciento,
            "mensajeprincipal": porc,
            "prd": "[" + this.myObjStr + "]",
            "dat": datos,
            "pru": real,
            "idtn": this.nego.id,
            "idtc": this.idtc,
            "res": this.nego.res,
            "idc": this.idcompra,
            "tabla": this.tabla,
        };
        console.log("idtc " + this.idtc);
        this.myObjStr2 = JSON.stringify(i);
        console.log("todo" + this.myObjStr2);
        // metodo del servicio que envia los datos
        this.gasolineraService.createMensaje4(i)
            .then(function (result) {
            if (result['hello']) {
                console.log("id tabla" + result['hellos']);
                if (real) {
                    _this.pedido = true;
                    _this.pedidoprueb = false;
                    _this.numpedido = result['hellos'];
                }
                else {
                    _this.pedido = false;
                    _this.pedidoprueb = true;
                }
                _this.des = false;
                _this.global.global3 = true;
                _this.presentToast4('Pedido realizado');
                _this.playAudio();
                _this.regresar();
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
            _this.presentToast4('Ha ocurrido un error');
        });
        //console.log(i);   
        // this.presentToast4('Gracias por enviarnos su mensaje le responderemos lo antes posible');
        // this.loadingService.dismissLoading();   
    };
    GasolinasPage.prototype.myAlert_show3 = function () {
        var _this = this;
        var nego = +(this.user.parametros.parametros.porciento);
        var costo = +(this.pedidoprov.costo);
        console.log("this.pedidoprov.costo: " + this.pedidoprov.costo);
        console.log("nego: " + nego);
        console.log("costo: " + costo);
        var porc = +(((costo * nego) / 100).toFixed(2));
        // new json
        var i = {
            "tip": "5",
            "est": "1",
            "idch": "1",
            "idcl": this.user.idcopia,
            "total": this.pedidoprov.costo,
            "porc": porc,
            "prov": true,
            "acept": false,
            "dat": {
                "id": this.user.idcopia,
                "nom": this.user.nam,
                "ven": this.user.parametros.parametros.nam,
                "porc": porc,
                "envio": this.pedidoprov.costo,
                "total": this.pedidoprov.costo + " CUP",
                "moneda": "cupflag",
                "telneg": this.user.parametros.parametros.tel,
                "telpedido": this.user.tel,
                "origename": this.pedidoprov.origen,
                "destinoname": this.pedidoprov.destino,
                "descripcion": this.pedidoprov.descripcion,
                "dia_recogida": this.myDate1,
                "hora_recogida": this.myDate2,
                "num_carnet": this.vcarnet,
            },
            "prd": {
                // "dia": "3 9",
                // "hora": "21:39", 
                "otros": "vacío"
            }
        };
        console.log("i: " + JSON.stringify(i));
        console.log("this.user: " + JSON.stringify(this.user));
        // this.navCtrl.push(GasolinasPage , {carro, comp,tip, ruta, total, origen, destino, mascota,equipaje, tipoauto, tabla, origename, destinoname, callback: this.myCallbackFunction2  });//
        this.gasolineraService.createOrder(i).then(function (result) {
            // console.log(result);
            // let user = JSON.parse(result[0])
            // console.log("user : "+user);
            if (result[0].idcl == _this.user.idcopia) {
                console.log("rx: ");
                _this.presentToast5('Pedido recibido. Será contactado por nuestros agentes para confirmar ');
                _this.user.id.push(result[0]);
                console.log("this.user.push: " + JSON.stringify(_this.user));
                _this.navCtrl.pop();
                //let user = this.user
                // this.navCtrl.push(TaxisPage, {user})
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
        console.log("final: ");
    };
    GasolinasPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    GasolinasPage.prototype.presentToast5 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 5000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    GasolinasPage.prototype.playAudio = function () {
        console.log("playing audio");
        this.nativeAudio.play('trackIDD').then(function () {
            console.log("playing audio!");
        }, function (err) {
            console.log("error playing audio: " + err);
        });
    };
    GasolinasPage.prototype.regresar = function () {
        console.log("regresar...");
        this.navCtrl.pop();
        //  this.navCtrl.push(TaxisPage);
    };
    GasolinasPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-gasolinas',template:/*ion-inline-start:"E:\14\gaso\src\pages\gasolinas\gasolinas.html"*/'<!--\n\n  Generated template for the GasolinaPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\nhideBackButton\n\n-->\n\n<ion-header class="border-round2"> \n\n\n\n  \n\n  <ion-navbar   color="dark">\n\n         <ion-title ><ion-icon name="car">  Datos del pedido </ion-icon></ion-title>\n\n\n\n\n\n </ion-navbar>\n\n</ion-header>\n\n\n\n\n\n<ion-content  >\n\n          \n\n  <!-- class="masters"\n\n  <ion-fab right top>\n\n    <button ion-fab mini (click)="goToPreviousPage()"><ion-icon name="arrow-back"></ion-icon></button>\n\n  </ion-fab> -->\n\n\n\n    <ion-card  class="masterscard"> \n\n      <ion-card-content > \n\n        <p><ion-icon color="secondary" name="car">  Origen: {{pedidoprov.origen}} </ion-icon> </p> \n\n        <br>\n\n        <p><ion-icon color="secondary" name="locate">  Destino: {{pedidoprov.destino}} </ion-icon> </p>  \n\n        <br>    \n\n       <p color="primary"><ion-icon name="done-all" color="primary"> {{pedidoprov.descripcion}}  </ion-icon></p>     \n\n       <br>      \n\n       <p><ion-icon color="secondary" name="logo-usd">  Costo: {{pedidoprov.costo}} </ion-icon> </p> \n\n       \n\n\n\n      </ion-card-content>  \n\n    </ion-card> \n\n  \n\n\n\n<!-- \n\n    <ion-card  class="masterscard">\n\n       <ion-card-content >        \n\n            <ion-item   >\n\n              <p><ion-icon name="person">  Cliente: {{comp.nam}}   </ion-icon></p>  \n\n            </ion-item>                              \n\n          \n\n        </ion-card-content>\n\n    </ion-card>\n\n       -->\n\n      \n\n\n\n      <ion-card class="masterscard" >      \n\n           \n\n        <ion-card-content >   \n\n             \n\n      <!-- \n\n          <ion-row align-items-center  >\n\n            <ion-col size="4">                        	\n\n              <p> Tipo de Auto (Auto, Minivan, ,Microbús)</p>	\n\n              \n\n            </ion-col>              \n\n          </ion-row> -->   \n\n          \n\n                    \n\n                            \n\n                                <div  style="padding: 0px;text-align:left"> \n\n                                     <b> <ion-label color="secondary"><ion-icon name="clipboard"> </ion-icon> Seleccione día y hora para su viaje  </ion-label>                              \n\n                                     </b> \n\n                                 </div>\n\n                                                  <!-- Formulario para la inscripcion  {{this.tipo}}-->\n\n       <!--              \n\n          <form [formGroup]="myForm" style="padding-bottom: 5px;padding-top: 0px;">\n\n\n\n                        \n\n                            <ion-item  > \n\n                                <ion-label floating><ion-icon name="people"> </ion-icon> Cantidad de pasajeros: </ion-label>\n\n                              <ion-input formControlName="telefono"  type="number"  [(ngModel)]="vtelefono2" [class.invalid]="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt) "></ion-input>\n\n                            </ion-item>\n\n\n\n                            <ion-item *ngIf="!myForm.controls.telefono.valid  && (myForm.controls.telefono.dirty || submitAttempt)">\n\n                                <p>Por favor escriba un número válido.</p>\n\n                            </ion-item>\n\n\n\n                            <ion-item  >\n\n                              <ion-label floating><ion-icon name="briefcase">  Equipaje:</ion-icon>  </ion-label>\n\n                                <ion-input minlength="1" maxlength="30" formControlName="firstName" type="text"  [(ngModel)]="vnombre2" [class.invalid]="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt) "></ion-input>   \n\n                            </ion-item>              \n\n              \n\n                            <ion-item *ngIf="!myForm.controls.firstName.valid  && (myForm.controls.firstName.dirty || submitAttempt)">\n\n                              <p>Error en los datos sobre el equipaje.</p>\n\n                            </ion-item>\n\n                            \n\n                            <ion-item >     \n\n                              <ion-label floating><ion-icon name="paw">  Animales:</ion-icon>  </ion-label>\n\n                              <ion-input minlength="1" maxlength="30" formControlName="modelo" type="text"  [(ngModel)]="vmodelo2" [class.invalid]="!myForm.controls.modelo.valid  && (myForm.controls.modelo.dirty || submitAttempt) "></ion-input>\n\n                            </ion-item>\n\n                            \n\n                            <ion-item *ngIf="!myForm.controls.modelo.valid  && (myForm.controls.modelo.dirty || submitAttempt)&&eschofer">\n\n                              <p>La describa si lleva animales en el viaje</p>  \n\n                            </ion-item>\n\n                             -->\n\n<!--                             <ion-item >   \n\n                              <ion-label floating> <ion-icon name="create">  Otros datos:</ion-icon> </ion-label >\n\n                              <ion-textarea minlength="1" maxlength="60" formControlName="chapa" type="text"  [(ngModel)]="vchapa2" [class.invalid]="!myForm.controls.chapa.valid  && (myForm.controls.chapa.dirty || submitAttempt) "></ion-textarea>\n\n                            </ion-item>\n\n                            \n\n                            <ion-item *ngIf="!myForm.controls.chapa.valid  && (myForm.controls.chapa.dirty || submitAttempt)&&eschofer">\n\n                              <p>Faltan datos</p>\n\n                            </ion-item>\n\n                              \n\n                                \n\n                       </form>\n\n                      \n\n                      -->\n\n\n\n\n\n                        <!-- [(ngModel)]="myDate1" displayFormat="DD MMMM"--> \n\n                              <ion-item> \n\n                                <ion-label><ion-icon name="calendar"> </ion-icon> Dia de recogida</ion-label>\n\n                                <ion-datetime cancelText="Cancelar" doneText="Aceptar"\n\n                                              [min]="today"\n\n                                              displayFormat="DD, MMM"                                              \n\n                                              pickerFormat="DD MMM"  \n\n                                              (ionChange)="updateValues($event)"\n\n                                              monthShortNames="Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre">\n\n                                </ion-datetime>\n\n                              </ion-item> \n\n                                 \n\n                              <ion-item>\n\n                                <ion-label><ion-icon name="clock"> </ion-icon> Hora de recogida</ion-label>\n\n                                <ion-datetime cancelText="Cancelar" doneText="Aceptar"\n\n                                              displayFormat="hh:mm a"  \n\n                                              pickerFormat="hh:mm a" \n\n                                              minuteValues="0,10,20,30,40,50"\n\n                                              [(ngModel)]="myDate2">\n\n                                </ion-datetime> \n\n                              </ion-item>          \n\n                    \n\n                                \n\n\n\n    </ion-card-content>  \n\n    </ion-card>  \n\n\n\n\n\n      <!-- formulario  -->\n\n    <ion-card *ngIf="cambiacolor" class="masterscard">         \n\n      <ion-card-content >  \n\n        <p color="primary"><ion-icon name="alert" color="primary"> Por favor, verifique los datos antes de hacer el pedido, en caso de no ser válidos su usuario podría ser cancelado. </ion-icon></p>           \n\n                  <form [formGroup]="datos" (ngSubmit)="registrar()"> \n\n                    <ion-list>\n\n                      <br>\n\n                      <ion-icon color="primary" name="person" item-start> {{vnombre}}</ion-icon>\n\n                      <ion-icon color="primary" name="call" item-start>{{vdatos}}</ion-icon>\n\n <!--                       <ion-item>\n\n                            \n\n                             <ion-label floating>{{vnombre}}</ion-label> \n\n                             <ion-input placeholder="vnombre" maxlength="40" formControlName="idt" type="text" [(ngModel)]="vnombre"> </ion-input> \n\n                        </ion-item>\n\n                      \n\n                      -->\n\n                              \n\n<!--                         <ion-item *ngIf="!datos.controls.idt.valid  && (datos.controls.idt.dirty || submitAttempt)">\n\n                          <p>El nombre es muy largo</p>\n\n                      </ion-item>\n\n -->\n\n                        <!-- <ion-item>\n\n                            <ion-icon name="pin" item-start></ion-icon>\n\n                            <ion-label floating>Dirección:</ion-label>\n\n                            <ion-input maxlength="100" formControlName="nam" type="text" [(ngModel)]="vdireccion"></ion-input>\n\n                        </ion-item>\n\n                         -->\n\n                        <!-- \n\n                        <ion-item *ngIf="!datos.controls.nam.valid  && (datos.controls.nam.dirty || submitAttempt)">\n\n                          <p>La dirección es muy larga</p>\n\n                      </ion-item> -->\n\n\n\n                      <!--   <ion-item>\n\n                          \n\n                           <ion-label floating></ion-label> \n\n                          <ion-input  placeholder="vdatos" minlength="7" maxlength="10" formControlName="pre" type="number" [(ngModel)]="vdatos" ></ion-input>\n\n                       \n\n                       </ion-item>\n\n                     -->  \n\n                       <!-- \n\n                        <ion-item *ngIf="!datos.controls.pre.valid  && (datos.controls.pre.dirty || submitAttempt)">\n\n                          <p>Son muchos datos.</p> \n\n                      </ion-item> -->\n\n                      <ion-item>\n\n                        <ion-icon name="card" item-start></ion-icon>\n\n                        <!-- <ion-label floating>{{this.comp.tel}}</ion-label> -->\n\n                        <ion-input  placeholder="Número carnet identidad" minlength="11" maxlength="11" formControlName="car" type="number" [(ngModel)]="vcarnet" ></ion-input>\n\n                      </ion-item>\n\n                    </ion-list>\n\n \n\n                  \n\n                      <ion-row *ngIf="des" align-items-center  >  \n\n                        <ion-col size="4">\n\n                                <div  style="text-align:center"> \n\n                                  <button color="dark" ion-button round type="submit" [disabled]="!datos.valid"><ion-icon name="send" item-start (click)="pedidoreal()"> Enviar pedido</ion-icon></button> \n\n                                  \n\n                              </div>\n\n                      </ion-col> \n\n           \n\n                      </ion-row> \n\n\n\n                </form>\n\n        \n\n      </ion-card-content>  \n\n    </ion-card> \n\n          <br>\n\n\n\n      <!-- formulario   -->\n\n      <ion-card *ngIf="ln" class="masterscard">         \n\n        <ion-card-content >   \n\n          <h3> Su usuario ha sido puesto en la Lista Negra y no puede hacer pedidos, para salir de este este estado debe confirmar su identidad por WhatsApp</h3>                     \n\n                  \n\n          <div padding>\n\n            <button color="verde" ion-button block ><ion-icon name="logo-whatsapp" item-start (click)="whatLn()">  Confirmar</ion-icon> </button>\n\n          </div>\n\n        </ion-card-content>  \n\n      </ion-card> \n\n\n\n      <ion-card *ngIf="pedido&&!pedidoprueb" class="masterscard">         \n\n        <ion-card-content >   \n\n          <!-- <h3> Su pedido ha sido recibido, el negocio le contactará para confirmar los datos.  Gracias por utilizar nuestros servicios, si lo desea puede dejarnos un mensaje  ahora o después desde el botón superior derecho o contactarnos al WhatsApp al número {{this.nego.ini}}.</h3>                     \n\n                   -->\n\n\n\n            <h3> Ha realizado correctamente su pedido, pronto le contactará un operador, si lo desea puede comunicarse con nosotros por WhatsApp. Gracias por usar nuestros servicios</h3>                     \n\n           \n\n         <!-- -->\n\n          <div padding>\n\n            <button color="verde" ion-button block ><ion-icon name="logo-whatsapp" item-start (click)="what()">  Comunicar</ion-icon> </button>\n\n          </div> \n\n        </ion-card-content>  \n\n      </ion-card> \n\n\n\n      <ion-card class="masterscard">  \n\n\n\n        <ion-card-content *ngIf="!pedido&&pedidoprueb" >   \n\n        <!--  <h3> Su pedido de prueba ha sido recibido, el negocio le contactará para confirmar los datos.  Gracias por utilizar nuestros servicios,  si lo desea puede dejarnos un mensaje ahora con el siguiente botón o después desde el botón superior derecho en la página principal.</h3>                                      \n\n         --> \n\n         <h3> Su pedido de prueba ha sido realizado correctamente, pronto le contactará un operador, si lo desea puede comunicarse con nosotros por WhatsApp. Gracias por usar nuestros servicios</h3>                     \n\n        \n\n         <div padding>\n\n             <button color="verde" ion-button block ><ion-icon name="logo-whatsapp" item-start (click)="what2()">  Comunicar</ion-icon> </button>\n\n          </div> \n\n        </ion-card-content>  \n\n      </ion-card> \n\n\n\n          <br>\n\n          <br>\n\n          <br>\n\n          <br>\n\n          <br>\n\n          <br>\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\gasolinas\gasolinas.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_native_audio__["a" /* NativeAudio */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_8__providers_global_global__["a" /* GlobalProvider */]])
    ], GasolinasPage);
    return GasolinasPage;
}());

//# sourceMappingURL=gasolinas.js.map

/***/ }),

/***/ 373:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomessPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_leaflet__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};









var HomessPage = /** @class */ (function () {
    function HomessPage(navCtrl, geoLocation, loadingService, alertController, navParams, toastCtrl) {
        this.navCtrl = navCtrl;
        this.geoLocation = geoLocation;
        this.loadingService = loadingService;
        this.alertController = alertController;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.vista = 'mapa';
        this.markers = [];
        this.posicionactual = {
            //la posicion del cliente
            lat: 0,
            lon: 0,
        };
        //variable para el telefono
        this.telefono = '';
        //para la linea
        this.latlngs = [
            [45.51, -122.68],
            [37.77, -122.43]
        ];
        this.hayLinea = false;
        this.singps = true;
        this.nohayGPS = false;
        this.inputWaypoints2 = [];
        this.inputWaypoints3 = [];
        this.viaje = 1;
        this.carr = this.navParams.get('carr');
        this.tar = this.navParams.get('tar');
    }
    HomessPage.prototype.ionViewDidEnter = function () {
        //this.carro = this.navParams.get('item');
        this.openDialogo();
    };
    HomessPage.prototype.ionViewDidLoad = function () {
        this.hayGPS = false; // variable de prueba local
        this.loadMap();
        this.localizar(); //restaurar 1
        // this.calcular2(); //restaurar 2
        //this.calcular(); // funcion de prueba local
    };
    HomessPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 6000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    //carga el mapa de leaflet
    HomessPage.prototype.loadMap = function () {
        var _this = this;
        if (this.map) {
            L.map('ruta_map').off();
            L.map('ruta_map').remove();
        }
        //Límites del mapa
        /*     let southWest = L.latLng({lat: 22.91736457507185, lng: -82.6171084443657});
            let northEast = L.latLng({lat: 23.240795592592406, lng: -81.91418475778585});
            let bounds = new L.LatLngBounds(southWest, northEast); */
        this.map = L.map('ruta_map', { maxBoundsViscosity: 1.0, attributionControl: false });
        this.map.setView([this.carr.lat, this.carr.lng], 15);
        //  this.map.setView([ 23.113592,-82.366592], 15);
        L.tileLayer.mbTiles('assets/tiles/habana.mbtiles', {
            minZoom: 11,
            maxZoom: 16
        }).addTo(this.map);
        /*
    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
      maxZoom: 18
    }).addTo(this.map);
      */
        //creacion del marcador verde con la posicion de la variable carro
        var greenIcon = new L.Icon({
            // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
            iconSize: [30, 40],
            iconAnchor: [15, 37],
        });
        /* this.marker = L.marker([this.carr.lat, this.carr.lng ],{draggable: true, icon: greenIcon});
         this.marker.addTo(this.map); */
        //prueba tomar posicion dinamicamente
        //this.map.on('click', (e:any) => { console.log(e.latlng); });
        // this.marker2.on('dragend', function (e) { alert(" hola mundo"); });
        /*    this.map.on('move', (e:any) => {
            // console.log("algo sale" +this.map.getCenter());
             this.marker2.setLatLng(this.map.getCenter());
           
           }); */
        //nuevo
        this.marker3 = L.marker([this.carr.lat, this.carr.lng], { draggable: false, riseOnHover: false, icon: greenIcon });
        // this.markers.push(marker3);
        /*  marker.on('dblclick', () => {
           this.abrirDetallesCarro(carro)
         }); */
        // this.marker3.bindPopup(this.carr.nam).openPopup();
        this.marker3.addTo(this.map);
        this.map.on('move', function (e) {
            // console.log("algo sale" +this.map.getCenter());
            _this.marker3.setLatLng(_this.map.getCenter());
            //quitar el controlador   
            //  if(this.routeControl) {         
            //   this.map.removeControl(this.routeControl);
            //  }
        });
        this.map.on('moveend', function (e) {
            // console.log("algo sale" +this.map.getCenter());
            // alert(' El mapa se dejo de mover ' );
            _this.marker3.setLatLng(_this.map.getCenter());
            //this.calcular3()
        });
    };
    HomessPage.prototype.localizar = function () {
        var _this = this;
        if (this.marker2) {
            this.marker2.removeFrom(this.map);
        }
        //poner icono de negocio en el lugar
        this.flagMarker = L.icon({
            iconUrl: 'assets/libs/leaflet/images/home1.ico',
            iconSize: [40, 40],
        });
        this.geoLocation.getCurrentPosition().then(function (resp) {
            if (resp.coords.latitude) {
                _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                _this.marker2 = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: true, icon: _this.flagMarker });
                // this.marker2.addTo(this.map);
                _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
                //tomar la posicion actual
                _this.posicionactual.lon = resp.coords.longitude;
                _this.posicionactual.lat = resp.coords.latitude;
                // this.calcular2(); 
                //funcion con api 
                // this.mostraruta()
            }
            else {
                _this.hayGPS = false; //para saber si hay o no gps y enviar o no el sms
            }
            //creacion del marcador verde con la misma posicion que el azul
            //cracion del icono
            /*      var greenIcon = new L.Icon({
                   iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
                  // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                  iconSize: [25, 41],
                   iconAnchor: [12, 41],
                   popupAnchor: [1, -34],
                   shadowSize: [41, 41]
                 }); */
            // this.marker2 = L.marker([resp.coords.latitude, resp.coords.longitude ],{draggable: true, icon: greenIcon}).addTo(this.map);
        }).catch(function (error) {
            _this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            // this.hayGPS=false; //para saber si hay o no gps y enviar o no el sms
            _this.marker2 = L.marker([_this.carr.lat, _this.carr.lng], { draggable: false, icon: _this.flagMarker });
            //this.marker2.addTo(this.map);
            _this.posicionactual.lon = _this.carr.lng;
            _this.posicionactual.lat = _this.carr.lat;
            //this.mostraruta()
        });
    };
    HomessPage.prototype.origenViaje = function () {
        //  
        if (this.viaje == 1) {
            // this.marker3.setLatLng(this.map.getCenter());
            // this.origen = this.marker3.getLatLng();
            this.origen = this.map.getCenter();
            //creacion del marcador azul con el origen
            var blueIcon = new L.Icon({
                // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                // iconUrl: 'assets/libs/leaflet/images/marker-icon.png',//icono sustituido marker-shadow
                iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
                // shadowUrl: 'assets/libs/leaflet/images/marker-shadow.png',
                // iconSize: [40, 40], // size of the icon
                iconSize: [30, 40],
                // shadowSize:   [50, 64], // size of the shadow
                iconAnchor: [15, 37],
            });
            this.marker4 = L.marker([this.origen.lat, this.origen.lng], { draggable: false, riseOnHover: false, icon: blueIcon });
            this.marker4.addTo(this.map);
            this.marker4.setLatLng(this.map.getCenter());
            this.viaje++;
            this.openDialogo3();
        }
        else if (this.viaje == 2) {
            this.viaje++;
            this.mostraruta();
        }
        else if (this.viaje == 3) {
            this.openDialogo4();
        }
    };
    HomessPage.prototype.mostraruta = function () {
        var _this = this;
        this.loadingService.presentLoading();
        if (this.map) {
            if (this.nohayGPS) {
                this.map.removeControl(this.routeControl2);
            }
            //prueba        
            /* this.posicionactual.lon=-82.366592;
            this.posicionactual.lat=23.113592 ; */
            //var origen =this.marker2.getLatLng(); 
            var destino = this.marker3.getLatLng();
            this.routeControl2 = L.Routing.control({
                router: L.Routing.mapbox('pk.eyJ1IjoiaGFiYW5hc2VydmljZW50cm8iLCJhIjoiY2twZHQ3eXhnMXIwNDJvcDd2YzFzcDkycSJ9.eQ80vtUjN2QneGR6oVxH_w'),
                waypoints: [
                    L.latLng(this.origen.lat, this.origen.lng),
                    L.latLng(destino.lat, destino.lng)
                ],
                language: 'es',
                show: false,
                routeWhileDragging: false,
                // autoRoute: true,
                showAlternatives: false,
                lineOptions: {
                    styles: [{
                            color: 'green',
                            opacity: 1,
                            weight: 3,
                            smoothFactor: 1
                            // lineCap:'round',
                            // linJoin:'round'
                        }]
                },
            }).addTo(this.map);
            //ocultar el recorrido
            // this.routeControl2.hide()
            this.routeControl2.on('routesfound', function (e) {
                _this.routes = e.routes;
                _this.summary = _this.routes[0].summary;
                // alert distance and time in km and minutes
                // alert('');
                // console.log('Total distance is ' + this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(this.summary.totalTime % 3600 / 60) + ' minutes');
                _this.inputWaypoints = _this.routes[0].inputWaypoints;
                for (var _i = 0, _a = _this.inputWaypoints; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    _this.inputWaypoints2.push(carro);
                }
                console.log(" inputWaypoints 2: " + JSON.stringify(_this.inputWaypoints2[0]));
                _this.origen = _this.inputWaypoints2[0].latLng;
                _this.destino = _this.inputWaypoints2[1].latLng;
                // console.log(" destino lng : "+ JSON.stringify(this.destino.lng))      
                _this.mDistanseKm = +(_this.summary.totalDistance / 1000).toFixed(2);
                //let float=parseFloat(this.mDistanseKm)
                //let float2=parseFloat(this.carro.curPos.tar)                 
                _this.resultado = +(_this.mDistanseKm * _this.tar).toFixed(2);
                //console.log(' distancia: '+ this.mDistanseKm2)
                //console.log(' resultados: '+ this.resultado)
                //console.log(' variable carro 1: '+this.carro.curPos.tar )
                console.log(" routes: " + JSON.stringify(_this.routes[0]));
                _this.inputWaypoints = _this.routes[0].inputWaypoints;
                console.log(" inputWaypoints: " + JSON.stringify(_this.inputWaypoints));
                for (var _b = 0, _c = _this.inputWaypoints; _b < _c.length; _b++) {
                    var carro = _c[_b];
                    if (carro.latLng) {
                        _this.inputWaypoints2.push(carro.latLng);
                        console.log(" carro: " + JSON.stringify(carro.latLng));
                    }
                    // 
                }
                console.log(" inputWaypoints2: " + JSON.stringify(_this.inputWaypoints2));
                _this.destino = _this.inputWaypoints2.pop();
                console.log(" destino: " + JSON.stringify(_this.destino.lng));
                //this.map.setView([ this.destino.lat,  this.destino.lng], 15);
                _this.latlngs = [
                    [_this.origen.lat, _this.origen.lng],
                    [destino.lat, destino.lng]
                ];
                //trazar la linea entre los marcadores
                _this.polyline = L.polyline(_this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 });
                // zoom the map to the polyline
                _this.map.fitBounds(_this.polyline.getBounds(), { padding: [60, 60] });
                _this.loadingService.dismissLoading();
                if (_this.marker3) {
                    _this.marker3.removeFrom(_this.map);
                }
                if (_this.marker4) {
                    _this.marker4.removeFrom(_this.map);
                }
            });
            this.nohayGPS = true;
            // this.openDialogo()
        }
    };
    //Dialogo para el inicio de la pagina
    HomessPage.prototype.openDialogo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.hayLinea) {
                            //this.hayLinea--;
                            //alert(this.hayLinea);
                            this.map.removeLayer(this.polyline);
                        }
                        return [4 /*yield*/, this.alertController.create({
                                //subTitle: "<strong>Pasos:</strong>",
                                //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                                // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                                // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                                message: 'Mueva el mapa hasta que el marcador verde esté en el origen del viaje, luego oprima el botón de abajo.  ',
                                buttons: [
                                    {
                                        text: 'Aceptar',
                                        role: 'cancel',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HomessPage.prototype.openDialogo2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS,'
                                + ' actívelo o busque un lugar con mejor señal. Cuando se muestre el marcador con su posición oprima el botón verde de la calculadora para conocer la distancia punto a punto. ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //Dialogo para el inicio de la pagina
    HomessPage.prototype.openDialogo3 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",
                            //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                            // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                            // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                            message: 'Mueva el mapa hasta que el marcador verde esté en el Destino del viaje, luego oprima el botón de abajo.  ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //Dialogo para el inicio de la pagina
    HomessPage.prototype.openDialogo4 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",
                            //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                            // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                            // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                            message: '¿Desea trazar un nuevo recorrido?  ',
                            buttons: [
                                {
                                    text: 'Si',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.map.removeControl(_this.routeControl2);
                                        if (_this.marker4) {
                                            _this.marker4.removeFrom(_this.map);
                                        }
                                        _this.viaje = 1;
                                        _this.marker3.addTo(_this.map);
                                        _this.openDialogo();
                                    }
                                },
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HomessPage.prototype.calcular = function () {
        this.hayGPS = true;
        if (this.hayGPS) {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea); 
                this.map.removeLayer(this.polyline);
            }
            //marcador de prueba 
            this.marker2 = L.marker([23.113592, -82.366592], { draggable: true }).addTo(this.map);
            //prueba tomar posicion dinamicamente
            this.marker2.on('dragend', function (e) { alert(this.marker2.getLatLng()); });
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
            // zoom the map to the polyline
            this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = true;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.tar).toFixed(2); //
            this.openDialogo();
        }
        else {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea);
                this.map.removeLayer(this.polyline);
            }
            //marcador para si no hay GPS, puesto encima del otro 
            this.marker2 = L.marker([this.carr.lat, this.carr.lng], { draggable: true }).addTo(this.map);
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            // this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1}).addTo(this.map);
            // zoom the map to the polyline
            // this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = false;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.tar).toFixed(2);
            this.openDialogo2();
        }
    };
    HomessPage.prototype.calcular2 = function () {
        if (this.carr.tax) {
            //poner icono de negocio en el lugar
            this.flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/home1.ico',
                iconSize: [40, 40],
            });
        }
        else {
            //poner icono de mensajero en el lugar
            //taxi motico o persona person
            this.flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/person.ico',
                iconSize: [30, 30],
            });
        }
        var marker3 = L.marker([this.carr.lat, this.carr.lng], { draggable: false, icon: this.flagMarker, riseOnHover: false });
        this.markers.push(marker3);
        /*  marker.on('dblclick', () => {
           this.abrirDetallesCarro(carro)
         }); */
        marker3.bindPopup(this.carr.nam).openPopup();
        marker3.addTo(this.map);
        //para hacer pruebas 
        // this.hayGPS=true 
        if (this.hayGPS) {
            if (this.hayLinea) {
                this.map.removeLayer(this.polyline);
            }
            this.marker2.addTo(this.map);
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.tar).toFixed(2);
            if (this.resultado > 0) {
                //trazar la linea entre los marcadores
                this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
                // zoom the map to the polyline
                //this.map.fitBounds(this.polyline.getBounds());    
                // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
                this.hayLinea = true;
                this.map.setView(new L.LatLng(curPos2.lat, curPos2.lng), 15);
            }
            else {
                this.hayLinea = false;
            }
            //this.presentToast4(' Con GPS');  
        }
        else {
            //calcular donde ponga el usuario el icono si no hay GPS
            if (this.hayLinea) {
                this.map.removeLayer(this.polyline);
            }
            if (this.singps) {
                this.marker2 = L.marker([this.carr.lat, this.carr.lng], { draggable: true });
                this.marker2.addTo(this.map);
            }
            this.singps = false;
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.tar).toFixed(2);
            if (this.resultado > 0) {
                //trazar la linea entre los marcadores
                this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
                // zoom the map to the polyline
                // this.map.fitBounds(this.polyline.getBounds());    
                // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
                this.hayLinea = true;
                this.map.setView(new L.LatLng(curPos2.lat, curPos2.lng), 15);
            }
            else {
                this.hayLinea = false;
            }
            //this.presentToast4(' Sin GPS');  
        }
        this.openDialogo();
    };
    //para el cambio de icono
    HomessPage.prototype.goToPreviousPage = function () {
        // this.navCtrl.pop().then(() => { }); 
        var _this = this;
        if (this.destino) {
            //var curPos2 =this.marker2.getLatLng();
            var curPos2 = this.destino;
            var tarifa_1 = {
                // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
                ruta: "https://www.google.com/maps?saddr=" + curPos2.lat + "," + curPos2.lng + "&daddr=" + this.carr.lat + "," + this.carr.lng,
                envio: this.resultado,
                ok: true,
                curPos: curPos2,
                negoPos: this.carr
            };
            this.navCtrl.pop().then(function () {
                _this.navParams.get('callback')(tarifa_1);
            });
        }
        else {
            var tarifa_2 = {
                // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
                ruta: " ",
                envio: 0,
                ok: false,
                curPos: " ",
                negoPos: this.carr
            };
            this.navCtrl.pop().then(function () {
                _this.navParams.get('callback')(tarifa_2);
            });
        }
    };
    HomessPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-homess',template:/*ion-inline-start:"E:\14\gaso\src\pages\homess\homess.html"*/'<ion-header class="bar-positive">\n\n  <ion-navbar hideBackButton color="primary" style="padding: 0px;">\n\n    \n\n<!--   \n\n    <button ion-fab mini (click)="goToPreviousPage()"><ion-icon name="arrow-back"></ion-icon></button> -->\n\n  \n\n    <ion-buttons  >\n\n      <button  ion-button  outline  icon-only color="secondary"  round (click)= "goToPreviousPage()" >\n\n        <ion-icon name="arrow-back"> Regresar</ion-icon>\n\n         <!-- abrirPaginaHelp -->\n\n\n\n      </button> \n\n      \n\n  </ion-buttons>        \n\n\n\n  <ion-row align-items-center  >\n\n    <ion-col size="4">\n\n      <p color="light">Distancia: </p> \n\n      <p >{{mDistanseKm}} <b> Km </b></p> \n\n      <!-- <p *ngIf="!hayGPS">Desconocida, active el GPS</p>  -->\n\n    </ion-col> \n\n    <ion-col  size="4">\n\n      <p color="light">Tarifa:</p> \n\n      <p > {{tar}} <b>Pesos el Km </b></p>  \n\n      \n\n    </ion-col>\n\n    <ion-col  size="4">\n\n      <p color="light">Costo:</p>   \n\n      <p > {{resultado }} <b>  Pesos </b></p> \n\n      \n\n    </ion-col>              \n\n  </ion-row>\n\n\n\n</ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content class="masters" >\n\n \n\n<!--  \n\n<div  style="text-align:center"> \n\n  <ion-icon name="calculator" color="light">  Calculadora de la ruta  </ion-icon>   \n\n  \n\n</div>\n\n\n\n -->\n\n\n\n  \n\n  <div [ngSwitch]="vista" style="height: 100%;">\n\n    \n\n    <div style="height: 100%;" [style.display]="(vista === \'mapa\')? \'block\': \'none\'">\n\n      <div id="ruta_map" style="width: 100%; height: 100%; ">\n\n\n\n      </div>\n\n    </div>\n\n   \n\n  </div>\n\n\n\n  <ion-fab right top>\n\n    <button ion-fab mini (click)="openDialogo()"><ion-icon color="secondary" name="help"></ion-icon></button>\n\n  </ion-fab>\n\n\n\n  <ion-fab bottom  center  >\n\n    <button ion-fab  (click)="origenViaje()"><ion-icon color="secondary" name="add"></ion-icon> </button>\n\n  </ion-fab> \n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\homess\homess.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */]])
    ], HomessPage);
    return HomessPage;
}());

//# sourceMappingURL=homess.js.map

/***/ }),

/***/ 374:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SmartAudioProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_native_audio__ = __webpack_require__(87);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/*
  Generated class for the SmartAudioProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var SmartAudioProvider = /** @class */ (function () {
    function SmartAudioProvider(http, nativeAudio, platform) {
        this.http = http;
        this.nativeAudio = nativeAudio;
        this.audioType = 'html5';
        this.sounds = [];
        console.log('Hello SmartAudioProvider Provider');
        if (platform.is('cordova')) {
            this.audioType = 'native';
        }
        else {
            this.audioType = 'html5';
        }
    }
    SmartAudioProvider.prototype.preload = function (key, asset) {
        if (this.audioType === 'html5') {
            var audio = {
                key: key,
                asset: asset,
                type: 'html5'
            };
            this.sounds.push(audio);
        }
        else {
            this.nativeAudio.preloadSimple(key, asset);
            var audio = {
                key: key,
                asset: key,
                type: 'native'
            };
            this.sounds.push(audio);
        }
    };
    SmartAudioProvider.prototype.play = function (key) {
        var audio = this.sounds.find(function (sound) {
            return sound.key === key;
        });
        if (audio.type === 'html5') {
            var audioAsset = new Audio(audio.asset);
            audioAsset.play();
        }
        else {
            this.nativeAudio.play(audio.asset).then(function (res) {
                console.log(res);
            }, function (err) {
                console.log(err);
            });
        }
    };
    SmartAudioProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["B" /* Injectable */])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_native_audio__["a" /* NativeAudio */], __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["j" /* Platform */]])
    ], SmartAudioProvider);
    return SmartAudioProvider;
}());

//# sourceMappingURL=smart-audio.js.map

/***/ }),

/***/ 375:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ModadminPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__hello_hello__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__detalle_detalle__ = __webpack_require__(202);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the ModadminPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
// @IonicPage()
var ModadminPage = /** @class */ (function () {
    function ModadminPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.user = this.navParams.get('user');
    }
    ModadminPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ModadminPage');
    };
    ModadminPage.prototype.guardar3 = function () {
        // this.startBackgroundGeolocation2()
        var carro = this.user;
        var bol = true;
        var idtm = this.user.idt; // idt de este usuario
        var idtmid = this.user.id; // id de este usuario
        console.log(' idtm:' + idtm);
        console.log(' idtmid:' + idtmid);
        console.log(' carro:' + carro);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__hello_hello__["a" /* HelloPage */], { carro: carro, bol: bol, idtm: idtm, idtmid: idtmid }); //     
    };
    ModadminPage.prototype.detalle = function () {
        // this.startBackgroundGeolocation2()
        var user = this.user;
        console.log(' carro:' + user);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__detalle_detalle__["a" /* DetallePage */], { user: user }); // , {carro,bol, idtm, idtmid }     
    };
    ModadminPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-modadmin',template:/*ion-inline-start:"E:\14\gaso\src\pages\modadmin\modadmin.html"*/'<!--\n\n  Generated template for the ModadminPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header>\n\n\n\n  <ion-navbar>\n\n    <ion-title>Módulo Administración</ion-title>\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content padding>\n\n\n\n    <!-- parte del usuario *ngIf="!admin" verMensajesCancel() -->\n\n    <ion-buttons  > \n\n      <button  ion-button block    icon-only color="primary"  (click)="detalle()" >\n\n        <!-- cancelante -->\n\n        <ion-icon name="settings" color="light"> Configuración </ion-icon> \n\n      </button>  \n\n    </ion-buttons> \n\n\n\n          <br>    \n\n    <ion-buttons  > \n\n      <button  ion-button  block   icon-only color="primary"  (click)="guardar3()" >\n\n        <!-- verMensajesCancel -->\n\n        <ion-icon name="clipboard" color="light"> Historial </ion-icon> \n\n      </button>  \n\n    </ion-buttons>   \n\n    \n\n    <ion-row   align-items-center  > \n\n      <ion-col size="4">            \n\n                \n\n    </ion-col>  \n\n    <ion-col size="4">  \n\n\n\n  </ion-col> \n\n  </ion-row>\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\modadmin\modadmin.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */]])
    ], ModadminPage);
    return ModadminPage;
}());

//# sourceMappingURL=modadmin.js.map

/***/ }),

/***/ 467:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(468);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__(472);
 //sirve para saber donde se va a ejecutar el codigo de la aplicacion
 //esto es un modulo de angular2
Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_1__app_module__["a" /* AppModule */]); //lanza el boostrap module, pasandole por parametro el modulo que se importo anteriormente
//en definitiva es como un metodo main de Java, lo que hacer es inicializar la plataforma a partir del modulo que se le pase
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 472:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app_component__ = __webpack_require__(509);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_home_home__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_tabs_tabs__ = __webpack_require__(314);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_status_bar__ = __webpack_require__(309);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_splash_screen__ = __webpack_require__(313);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pages_welcome_welcome__ = __webpack_require__(357);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pages_signup_signup__ = __webpack_require__(900);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_google_maps__ = __webpack_require__(901);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_taxis_service_taxis_service__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__angular_common_http__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__test_gasolinera_service_mock__ = __webpack_require__(902);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_gasolinera_details_gasolinera_details__ = __webpack_require__(903);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__ionic_native_background_geolocation__ = __webpack_require__(354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__ionic_native_http__ = __webpack_require__(355);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__ionic_native_unique_device_id__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_admin_admin__ = __webpack_require__(356);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__providers_global_global__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_homes_homes__ = __webpack_require__(904);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__angular_common__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__ionic_native_device__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__pages_homess_homess__ = __webpack_require__(373);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__ionic_native_network__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__ionic_native_text_to_speech__ = __webpack_require__(360);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__pages_details_details__ = __webpack_require__(363);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pages_ruta_ruta__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32_ionic3_star_rating__ = __webpack_require__(905);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__ionic_native_native_audio__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__pages_contact_contact__ = __webpack_require__(907);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__pages_taxis_taxis__ = __webpack_require__(78);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__pages_inicio_inicio__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__pages_help_help__ = __webpack_require__(199);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__pages_modificar_modificar__ = __webpack_require__(361);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__pages_subirfoto_subirfoto__ = __webpack_require__(910);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__pages_gasolineras_gasolineras__ = __webpack_require__(911);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__pages_hola_hola__ = __webpack_require__(358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__pages_hello_hello__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__pages_gasolinas_gasolinas__ = __webpack_require__(372);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__pages_detailss_detailss__ = __webpack_require__(359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__pages_detailsss_detailsss__ = __webpack_require__(912);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__pages_detailssss_detailssss__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__ionic_native_screen_orientation__ = __webpack_require__(367);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__ionic_native_in_app_browser__ = __webpack_require__(203);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__ionic_native_keyboard__ = __webpack_require__(368);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__ionic_native_local_notifications__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__ionic_native_call_number__ = __webpack_require__(370);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__pages_pedidos_pedidos__ = __webpack_require__(362);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__pages_provincia_provincia__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__pages_detalle_detalle__ = __webpack_require__(202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__ionic_storage__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__providers_smart_audio_smart_audio__ = __webpack_require__(374);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__pages_modadmin_modadmin__ = __webpack_require__(375);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


















//import {Subscription} from "rxjs/Subscription";


//import { UniqueDeviceID } from '@ionic-native/unique-device-id/ngx';

// Implementamos la librería de notificaciones Push.
//import { Push } from '@ionic-native/push/ngx';

// falta import { Home2Page } from '../pages/home2/home2';





// falta import {AdminnPage} from "../pages/adminn/adminn";
// falta import {PremiumPage} from "../pages/premium/premium";

// falta import { GuiaPage } from '../pages/guia/guia';






// falta import {AutosPage} from "../pages/autos/autos";
// falta import {MotosPage} from "../pages/motos/motos";
// falta import {PiezasautosPage} from "../pages/piezasautos/piezasautos";
// falta import {PiezasmotosPage} from "../pages/piezasmotos/piezasmotos";
// falta import {VentasautosPage} from "../pages/ventasautos/ventasautos";
// falta import {VentasmotosPage} from "../pages/ventasmotos/ventasmotos";
// falta import {PostPage} from "../pages/post/post";
// falta import {HiloPage} from "../pages/hilo/hilo";
// falta import {CompartirPage} from "../pages/compartir/compartir"; 
// falta import {CompartirfullPage} from "../pages/compartirfull/compartirfull"; 
// falta import {DealerPage} from "../pages/dealer/dealer";
// falta import {AyudadealerPage} from "../pages/ayudadealer/ayudadealer";




 //no usado aun


















// import * as uuid from 'uuid'; npm i --save-dev @types/uuid
// import { File } from '@ionic-native/file';
// import { FileOpener } from '@ionic-native/file-opener';

var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["J" /* NgModule */])({
            schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["i" /* CUSTOM_ELEMENTS_SCHEMA */]],
            //declaracion de los componentes principales
            declarations: [
                __WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_4__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_5__pages_tabs_tabs__["a" /* TabsPage */],
                __WEBPACK_IMPORTED_MODULE_8__pages_welcome_welcome__["a" /* WelcomePage */],
                __WEBPACK_IMPORTED_MODULE_9__pages_signup_signup__["a" /* SignupPage */],
                __WEBPACK_IMPORTED_MODULE_17__pages_gasolinera_details_gasolinera_details__["a" /* GasolineraDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_21__pages_admin_admin__["a" /* AdminPage */],
                // falta Home2Page,
                __WEBPACK_IMPORTED_MODULE_24__pages_homes_homes__["a" /* HomesPage */],
                // falta AdminnPage,
                // falta PremiumPage,
                __WEBPACK_IMPORTED_MODULE_27__pages_homess_homess__["a" /* HomessPage */],
                // falta GuiaPage,
                __WEBPACK_IMPORTED_MODULE_30__pages_details_details__["a" /* DetailsPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_ruta_ruta__["a" /* RutaPage */],
                // falta AutosPage,
                // falta MotosPage,
                // falta PiezasautosPage,
                // falta PiezasmotosPage,
                // falta VentasautosPage,
                // falta VentasmotosPage,
                // falta PostPage,
                // falta HiloPage,
                // falta CompartirPage,
                // falta CompartirfullPage,
                // falta DealerPage,
                // falta AyudadealerPage
                __WEBPACK_IMPORTED_MODULE_34__pages_contact_contact__["a" /* ContactPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_taxis_taxis__["a" /* TaxisPage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_inicio_inicio__["a" /* InicioPage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_help_help__["a" /* HelpPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_modificar_modificar__["a" /* ModificarPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_subirfoto_subirfoto__["a" /* SubirfotoPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_gasolineras_gasolineras__["a" /* GasolinerasPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_hola_hola__["a" /* HolaPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_hello_hello__["a" /* HelloPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_gasolinas_gasolinas__["a" /* GasolinasPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_detailss_detailss__["a" /* DetailssPage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_detailsss_detailsss__["a" /* DetailsssPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_detailssss_detailssss__["a" /* DetailssssPage */],
                __WEBPACK_IMPORTED_MODULE_52__pages_pedidos_pedidos__["a" /* PedidosPage */],
                __WEBPACK_IMPORTED_MODULE_53__pages_provincia_provincia__["a" /* ProvinciaPage */],
                __WEBPACK_IMPORTED_MODULE_54__pages_detalle_detalle__["a" /* DetallePage */],
                __WEBPACK_IMPORTED_MODULE_57__pages_modadmin_modadmin__["a" /* ModadminPage */]
            ],
            //modulos que se importan
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["f" /* IonicModule */].forRoot(__WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */], {}, {
                    links: []
                }),
                __WEBPACK_IMPORTED_MODULE_12__angular_common_http__["b" /* HttpClientModule */],
                __WEBPACK_IMPORTED_MODULE_32_ionic3_star_rating__["a" /* StarRatingModule */],
                __WEBPACK_IMPORTED_MODULE_55__ionic_storage__["a" /* IonicStorageModule */].forRoot()
            ],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["d" /* IonicApp */]],
            entryComponents: [
                __WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_4__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_5__pages_tabs_tabs__["a" /* TabsPage */],
                __WEBPACK_IMPORTED_MODULE_8__pages_welcome_welcome__["a" /* WelcomePage */],
                __WEBPACK_IMPORTED_MODULE_9__pages_signup_signup__["a" /* SignupPage */],
                __WEBPACK_IMPORTED_MODULE_17__pages_gasolinera_details_gasolinera_details__["a" /* GasolineraDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_21__pages_admin_admin__["a" /* AdminPage */],
                // falta Home2Page,
                __WEBPACK_IMPORTED_MODULE_24__pages_homes_homes__["a" /* HomesPage */],
                // falta AdminnPage,
                // falta PremiumPage,
                __WEBPACK_IMPORTED_MODULE_27__pages_homess_homess__["a" /* HomessPage */],
                // falta GuiaPage,
                __WEBPACK_IMPORTED_MODULE_30__pages_details_details__["a" /* DetailsPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_ruta_ruta__["a" /* RutaPage */],
                // falta AutosPage,
                // falta MotosPage,
                // falta PiezasautosPage,
                // falta PiezasmotosPage,
                // falta VentasautosPage,
                // falta VentasmotosPage,
                // falta PostPage,
                // falta HiloPage,
                // falta CompartirPage,
                // falta CompartirfullPage,
                // falta DealerPage,
                // falta AyudadealerPage
                __WEBPACK_IMPORTED_MODULE_34__pages_contact_contact__["a" /* ContactPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_taxis_taxis__["a" /* TaxisPage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_inicio_inicio__["a" /* InicioPage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_help_help__["a" /* HelpPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_modificar_modificar__["a" /* ModificarPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_subirfoto_subirfoto__["a" /* SubirfotoPage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_gasolineras_gasolineras__["a" /* GasolinerasPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_hola_hola__["a" /* HolaPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_hello_hello__["a" /* HelloPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_gasolinas_gasolinas__["a" /* GasolinasPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_detailss_detailss__["a" /* DetailssPage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_detailsss_detailsss__["a" /* DetailsssPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_detailssss_detailssss__["a" /* DetailssssPage */],
                __WEBPACK_IMPORTED_MODULE_52__pages_pedidos_pedidos__["a" /* PedidosPage */],
                __WEBPACK_IMPORTED_MODULE_53__pages_provincia_provincia__["a" /* ProvinciaPage */],
                __WEBPACK_IMPORTED_MODULE_54__pages_detalle_detalle__["a" /* DetallePage */],
                __WEBPACK_IMPORTED_MODULE_57__pages_modadmin_modadmin__["a" /* ModadminPage */]
            ],
            //estos son servicios globales que van a crear una vez y se llaman en la app cuantas veces se necesite
            providers: [
                __WEBPACK_IMPORTED_MODULE_6__ionic_native_status_bar__["a" /* StatusBar */],
                __WEBPACK_IMPORTED_MODULE_7__ionic_native_splash_screen__["a" /* SplashScreen */],
                __WEBPACK_IMPORTED_MODULE_10__ionic_native_google_maps__["a" /* GoogleMaps */],
                { provide: __WEBPACK_IMPORTED_MODULE_0__angular_core__["v" /* ErrorHandler */], useClass: __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["e" /* IonicErrorHandler */] },
                __WEBPACK_IMPORTED_MODULE_11__providers_taxis_service_taxis_service__["a" /* TaxisServiceProvider */],
                __WEBPACK_IMPORTED_MODULE_13__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
                __WEBPACK_IMPORTED_MODULE_14__ionic_native_geolocation__["a" /* Geolocation */],
                __WEBPACK_IMPORTED_MODULE_15__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
                __WEBPACK_IMPORTED_MODULE_16__test_gasolinera_service_mock__["a" /* GasolineraServiceProviderMock */],
                __WEBPACK_IMPORTED_MODULE_18__ionic_native_background_geolocation__["a" /* BackgroundGeolocation */],
                __WEBPACK_IMPORTED_MODULE_19__ionic_native_http__["a" /* HTTP */],
                __WEBPACK_IMPORTED_MODULE_20__ionic_native_unique_device_id__["a" /* UniqueDeviceID */],
                __WEBPACK_IMPORTED_MODULE_22__ionic_native_social_sharing__["a" /* SocialSharing */],
                __WEBPACK_IMPORTED_MODULE_23__providers_global_global__["a" /* GlobalProvider */],
                __WEBPACK_IMPORTED_MODULE_25__angular_common__["d" /* DatePipe */],
                __WEBPACK_IMPORTED_MODULE_26__ionic_native_device__["a" /* Device */],
                __WEBPACK_IMPORTED_MODULE_28__ionic_native_network__["a" /* Network */],
                __WEBPACK_IMPORTED_MODULE_29__ionic_native_text_to_speech__["a" /* TextToSpeech */],
                __WEBPACK_IMPORTED_MODULE_33__ionic_native_native_audio__["a" /* NativeAudio */],
                __WEBPACK_IMPORTED_MODULE_47__ionic_native_screen_orientation__["a" /* ScreenOrientation */],
                __WEBPACK_IMPORTED_MODULE_48__ionic_native_in_app_browser__["a" /* InAppBrowser */],
                __WEBPACK_IMPORTED_MODULE_49__ionic_native_keyboard__["a" /* Keyboard */],
                __WEBPACK_IMPORTED_MODULE_50__ionic_native_local_notifications__["a" /* LocalNotifications */],
                __WEBPACK_IMPORTED_MODULE_51__ionic_native_call_number__["a" /* CallNumber */],
                __WEBPACK_IMPORTED_MODULE_56__providers_smart_audio_smart_audio__["a" /* SmartAudioProvider */],
            ]
        })
    ], AppModule);
    return AppModule;
}());

//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 509:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MyApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__ = __webpack_require__(309);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__ = __webpack_require__(313);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_tabs_tabs__ = __webpack_require__(314);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





// import { AndroidPermissions} from '@ionic-native/android-permissions';
//aqui esta el codigo del componente principal de la aplicacion
var MyApp = /** @class */ (function () {
    function MyApp(platform, statusBar, splashScreen) {
        this.rootPage = __WEBPACK_IMPORTED_MODULE_4__pages_tabs_tabs__["a" /* TabsPage */];
        platform.ready().then(function () {
            // Okay, so the platform is ready and our plugins are available.
            // Here you can do any higher level native things you might need.
            statusBar.styleDefault();
            splashScreen.hide();
        });
    }
    MyApp = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({template:/*ion-inline-start:"E:\14\gaso\src\app\app.html"*/'<ion-nav [root]="rootPage"></ion-nav>\n\n'/*ion-inline-end:"E:\14\gaso\src\app\app.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* Platform */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__["a" /* StatusBar */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__["a" /* SplashScreen */]])
    ], MyApp);
    return MyApp;
}());

//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 519:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 521:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 555:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 556:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 68:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RutaPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_leaflet__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var RutaPage = /** @class */ (function () {
    function RutaPage(navCtrl, geoLocation, loadingService, alertController, navParams) {
        this.navCtrl = navCtrl;
        this.geoLocation = geoLocation;
        this.loadingService = loadingService;
        this.alertController = alertController;
        this.navParams = navParams;
        this.vista = 'mapa';
        this.markers = [];
        this.posicionactual = {
            //la posicion del cliente
            lat: 0,
            lon: 0,
        };
        //variable para el telefono
        this.telefono = '';
        //para la linea
        this.latlngs = [
            [45.51, -122.68],
            [37.77, -122.43]
        ];
        this.hayLinea = false;
        this.carro = this.navParams.get('carro');
        console.log(" de la otra pagina " + JSON.stringify(this.carro));
    }
    RutaPage.prototype.ionViewDidEnter = function () {
        //this.carro = this.navParams.get('item');
    };
    RutaPage.prototype.ionViewDidLoad = function () {
        //this.hayGPS=false; // variable de prueba local
        this.loadMap();
        // this.localizar();
        // this.calcular(); // funcion de prueba local
        //this.openDialogo();
    };
    //carga el mapa de leaflet
    RutaPage.prototype.loadMap = function () {
        var _this = this;
        if (this.map) {
            L.map('ruta_map').off();
            L.map('ruta_map').remove();
        }
        //Límites del mapa
        /*     let southWest = L.latLng({lat: 22.91736457507185, lng: -82.6171084443657});
            let northEast = L.latLng({lat: 23.240795592592406, lng: -81.91418475778585});
            let bounds = new L.LatLngBounds(southWest, northEast); */
        this.map = L.map('ruta_map', { maxBoundsViscosity: 1.0, attributionControl: false });
        this.map.setView([this.carro.curPos.negoPosLat, this.carro.curPos.negoPosLng], 15);
        // this.map.setView([ 23.113592,-82.366592], 15);
        /*    L.tileLayer.mbTiles('assets/tiles/habana.mbtiles', {
             minZoom: 11,
             maxZoom: 16
           }).addTo(this.map);   */
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(this.map);
        //marcador para el destino
        //cracion del icono
        var greenIcon = new L.Icon({
            iconUrl: 'assets/libs/leaflet/images/home1.ico',
            iconSize: [40, 40],
        });
        this.marker = L.marker([this.carro.curPos.negoPosLat, this.carro.curPos.negoPosLng], { draggable: false, icon: greenIcon });
        this.marker.addTo(this.map);
        //prueba tomar posicion dinamicamente
        //this.map.on('click', (e:any) => { console.log(e.latlng); });
        // this.marker2.on('dragend', function (e) { alert(" hola mundo"); });
        //poner icono de mensajero en el lugar
        //taxi motico o persona person
        var flagMarker = L.icon({
            iconUrl: 'assets/libs/leaflet/images/person.ico',
            iconSize: [30, 30],
        });
        this.marker2 = L.marker([this.carro.curPos.curPosLat, this.carro.curPos.curPosLng], { draggable: false, icon: flagMarker, riseOnHover: true });
        this.marker2.addTo(this.map);
        // hacer linea
        var curPos = this.marker.getLatLng();
        var curPos2 = this.marker2.getLatLng();
        // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
        this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
        this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
        this.resultado = +(this.mDistanseKm * this.carro.curPos.tar).toFixed(2);
        /*
                        this.latlngs = [
                          [curPos.lat,curPos.lng],
                          [curPos2.lat,curPos2.lng]
                        ];
                        if(this.hayLinea){
                          this.map.removeLayer(this.polyline);
                        }
                        
                        if(this.resultado>0){
                              //trazar la linea entre los marcadores
                              this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1}).addTo(this.map);
                              // zoom the map to the polyline
                              this.map.fitBounds(this.polyline.getBounds());
                            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
                              this.hayLinea=true;
                        }else{
                            this.hayLinea=false;
                        }
         */
        var routeControl = L.Routing.control({
            router: L.Routing.mapbox('pk.eyJ1IjoiaGFiYW5hc2VydmljZW50cm8iLCJhIjoiY2twZHQ3eXhnMXIwNDJvcDd2YzFzcDkycSJ9.eQ80vtUjN2QneGR6oVxH_w'),
            waypoints: [
                L.latLng(curPos.lat, curPos.lng),
                L.latLng(curPos2.lat, curPos2.lng)
            ],
            language: 'es',
            show: false,
            showAlternatives: false,
            routeWhileDragging: false
            // autoRoute: true,
        }).addTo(this.map);
        routeControl.on('routesfound', function (e) {
            _this.routes = e.routes;
            _this.summary = _this.routes[0].summary;
            // alert distance and time in km and minutes
            // alert('Total distance is ' + this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(this.summary.totalTime % 3600 / 60) + ' minutes');
            console.log('Total distance is ' + _this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(_this.summary.totalTime % 3600 / 60) + ' minutes');
            _this.mDistanseKm2 = +(_this.summary.totalDistance / 1000).toFixed(2);
            var float = parseFloat(_this.mDistanseKm2);
            var float2 = parseFloat(_this.carro.curPos.tar);
            _this.resultado = +(float * float2).toFixed(2);
            //console.log(' distancia: '+ this.mDistanseKm2)
            //console.log(' resultados: '+ this.resultado)
            //console.log(' variable carro 1: '+this.carro.curPos.tar )
        });
        /* L.routeControl.on('routesfound', function(e) {
          var routes = e.routes;
          var summary = routes[0].summary;
          // alert distance and time in km and minutes
          alert('Total distance is ' + summary.totalDistance / 1000 + ' km and total time is ' + Math.round(summary.totalTime % 3600 / 60) + ' minutes');
          console.log('Total distance is ' + summary.totalDistance / 1000 + ' km and total time is ' + Math.round(summary.totalTime % 3600 / 60) + ' minutes');
        });
        
*/
    };
    //para el cambio de icono
    RutaPage.prototype.goToPreviousPage = function () {
        //var curPos2 =this.marker2.getLatLng();
        var _this = this;
        var tarifa = {
            // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
            ruta: "https://www.google.com/maps?saddr=" + this.carro.curPos.negoPosLat + "," + this.carro.curPos.negoPosLng + "&daddr=" + this.carro.curPos.curPosLat + "," + this.carro.curPos.curPosLng,
            //envio: this.resultado,
            ok: true,
            // curPos: curPos2,
            negoPos: this.carro
        };
        this.navCtrl.pop().then(function () {
            _this.navParams.get('callback')(tarifa);
        });
    };
    RutaPage.prototype.localizar = function () {
        var _this = this;
        if (this.marker2) {
            this.marker2.removeFrom(this.map);
        }
        this.geoLocation.getCurrentPosition().then(function (resp) {
            if (resp.coords.latitude) {
                _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                _this.marker2 = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: true });
                _this.marker2.addTo(_this.map);
                _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
                //tomar la posicion actual
                _this.posicionactual.lon = resp.coords.longitude;
                _this.posicionactual.lat = resp.coords.latitude;
                _this.calcular2();
            }
            else {
                _this.hayGPS = false; //para saber si hay o no gps y enviar o no el sms
            }
            //creacion del marcador verde con la misma posicion que el azul
            //cracion del icono
            /*      var greenIcon = new L.Icon({
                   iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
                  // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                  iconSize: [25, 41],
                   iconAnchor: [12, 41],
                   popupAnchor: [1, -34],
                   shadowSize: [41, 41]
                 }); */
            // this.marker2 = L.marker([resp.coords.latitude, resp.coords.longitude ],{draggable: true, icon: greenIcon}).addTo(this.map);
        }).catch(function (error) {
            _this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            // this.hayGPS=false; //para saber si hay o no gps y enviar o no el sms
        });
    };
    //Dialogo para el inicio de la pagina
    RutaPage.prototype.openDialogo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert_1, alert_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.hayGPS) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.alertController.create({
                                //subTitle: "<strong>Pasos:</strong>",
                                message: '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                                buttons: [
                                    {
                                        text: 'Aceptar',
                                        role: 'cancel',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert_1 = _a.sent();
                        return [4 /*yield*/, alert_1.present()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS,'
                                + ' actívelo o busque un lugar con mejor señal. Cuando se muestre el marcador con su posición oprima el botón verde de la calculadora para conocer la distancia punto a punto. ¡También se pueden arrastrar los marcadores para calcular la distancia entre dos puntos que siempre ha querido conocer! ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 4:
                        alert_2 = _a.sent();
                        return [4 /*yield*/, alert_2.present()];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    RutaPage.prototype.openDialogo2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS,'
                                + ' actívelo o busque un lugar con mejor señal. Cuando se muestre el marcador con su posición oprima el botón verde de la calculadora para conocer la distancia punto a punto. ¡También se pueden arrastrar los marcadores para calcular la distancia entre dos puntos que siempre ha querido conocer! ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    RutaPage.prototype.calcular = function () {
        this.hayGPS = true;
        if (this.hayGPS) {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea); 
                this.map.removeLayer(this.polyline);
            }
            //marcador de prueba 
            this.marker2 = L.marker([23.113592, -82.366592], { draggable: true }).addTo(this.map);
            //prueba tomar posicion dinamicamente
            this.marker2.on('dragend', function (e) { alert(this.marker2.getLatLng()); });
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
            // zoom the map to the polyline
            this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = true;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.carro.tar).toFixed(2); //
            this.openDialogo();
        }
        else {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea);
                this.map.removeLayer(this.polyline);
            }
            //marcador para si no hay GPS, puesto encima del otro 
            this.marker2 = L.marker([this.carro.lat, this.carro.lng], { draggable: true }).addTo(this.map);
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            // this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1}).addTo(this.map);
            // zoom the map to the polyline
            // this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = false;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.carro.tar).toFixed(2);
            this.openDialogo2();
        }
    };
    RutaPage.prototype.calcular2 = function () {
        if (this.carro.tax) {
            //poner icono de negocio en el lugar
            var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/home1.ico',
                iconSize: [40, 40],
            });
        }
        else {
            //poner icono de mensajero en el lugar
            //taxi motico o persona person
            var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/person.ico',
                iconSize: [30, 30],
            });
        }
        var marker3 = L.marker([this.carro.lat, this.carro.lng], { draggable: false, icon: flagMarker, riseOnHover: true });
        this.markers.push(marker3);
        /*  marker.on('dblclick', () => {
           this.abrirDetallesCarro(carro)
         }); */
        marker3.bindPopup(this.carro.nam).openPopup();
        marker3.addTo(this.map);
        //para hacer pruebas 
        // this.hayGPS=true 
        if (this.hayGPS) {
            if (this.hayLinea) {
                this.map.removeLayer(this.polyline);
            }
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.carro.tar).toFixed(2);
            if (this.resultado > 0) {
                //trazar la linea entre los marcadores
                this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
                // zoom the map to the polyline
                this.map.fitBounds(this.polyline.getBounds());
                // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
                this.hayLinea = true;
            }
            else {
                this.hayLinea = false;
            }
        }
        else {
        }
        this.openDialogo();
    };
    RutaPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-ruta',template:/*ion-inline-start:"E:\14\gaso\src\pages\ruta\ruta.html"*/'<ion-header  >\n\n  <ion-navbar   style="padding: 0px;">\n\n    \n\n<!--   class="bar-positive" hideBackButton\n\n    <button ion-fab mini (click)="goToPreviousPage()"><ion-icon name="arrow-back"></ion-icon></button> -->\n\n  \n\n\n\n\n\n      <ion-row align-items-center   >\n\n\n\n      <!--   <ion-col  size="4">        \n\n            <ion-buttons  >\n\n              <button  ion-button  outline round icon-only color="light"  round (click)= "goToPreviousPage()" >\n\n                <ion-icon name="arrow-back"> Regresar</ion-icon>\n\n                \n\n\n\n              </button> \n\n          </ion-buttons> \n\n        </ion-col> \n\n -->\n\n        <ion-col size="4">\n\n          <p >Distancia: </p> \n\n          <p > {{mDistanseKm2}} <b> Km </b></p> \n\n        </ion-col> \n\n     <!--    <ion-col  size="4">\n\n          <p >Tarifa:</p> \n\n          <p > {{carro.curPos.tar}} <b>Pesos el Km </b></p> \n\n          \n\n        </ion-col> -->\n\n        <ion-col *ngIf="carro.curPos.moneda==\'cupflag\'" size="4">\n\n          <p >Costo:</p>   \n\n          <p > {{carro.curPos.envio }} <b>  Pesos </b></p> \n\n          \n\n        </ion-col>    \n\n        <ion-col  *ngIf="carro.curPos.moneda==\'eurflaf\'" size="4">\n\n          <p >Costo:</p>   \n\n          <p > {{carro.curPos.envio }} <b>  Euros </b></p> \n\n          \n\n        </ion-col> \n\n        <ion-col  *ngIf="carro.curPos.moneda==\'usdflag\'" size="4">\n\n          <p >Costo:</p>   \n\n          <p > {{carro.curPos.envio }} <b>  Dólar </b></p> \n\n          \n\n        </ion-col>            \n\n      </ion-row>\n\n            \n\n       \n\n\n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content >\n\n \n\n\n\n  \n\n  <div [ngSwitch]="vista" style="height: 100%;">\n\n    \n\n    <div style="height: 100%;" [style.display]="(vista === \'mapa\')? \'block\': \'none\'">\n\n      <div id="ruta_map" style="width: 100%; height: 100%; ">\n\n\n\n      </div>\n\n    </div>\n\n   \n\n  </div>\n\n\n\n\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\ruta\ruta.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */]])
    ], RutaPage);
    return RutaPage;
}());

//# sourceMappingURL=ruta.js.map

/***/ }),

/***/ 78:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TaxisPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_taxis_service_taxis_service__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_leaflet__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__home_home__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_unique_device_id__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_background_geolocation__ = __webpack_require__(354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_http__ = __webpack_require__(355);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__angular_forms__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__help_help__ = __webpack_require__(199);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__admin_admin__ = __webpack_require__(356);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__welcome_welcome__ = __webpack_require__(357);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__providers_global_global__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__ionic_native_social_sharing__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__hola_hola__ = __webpack_require__(358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__hello_hello__ = __webpack_require__(116);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__ionic_native_text_to_speech__ = __webpack_require__(360);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__ionic_native_device__ = __webpack_require__(86);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_leaflet_routing_machine__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_leaflet_routing_machine___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22_leaflet_routing_machine__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__ionic_native_network__ = __webpack_require__(117);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__detailssss_detailssss__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__ionic_native_screen_orientation__ = __webpack_require__(367);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__ionic_native_native_audio__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__ionic_native_keyboard__ = __webpack_require__(368);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__ionic_native_local_notifications__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__ionic_native_call_number__ = __webpack_require__(370);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__angular_platform_browser__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31_leaflet_rotatedmarker__ = __webpack_require__(621);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31_leaflet_rotatedmarker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_31_leaflet_rotatedmarker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__provincia_provincia__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__detalle_detalle__ = __webpack_require__(202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__providers_smart_audio_smart_audio__ = __webpack_require__(374);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__modadmin_modadmin__ = __webpack_require__(375);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__ionic_storage__ = __webpack_require__(118);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37_rxjs__ = __webpack_require__(622);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_37_rxjs__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




















//import { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';


//import { ProductsProvider }  from '../../providers/products/products';








//import { HttpClient,HttpHeaders,HttpParams  } from '@angular/common/http';



// import { Component } from '@angular/core';














//import { File } from '@ionic-native/file';
// import 'rxjs/add/observable/interval';
// import {Observable} from "rxjs/Observable";
// import {Subscription} from "rxjs/Subscription";
//import { ModalController } from 'ionic-angular';
//import {ChoiceModalPage} from '../choice-modal/choice-modal'
/**
 * Generated class for the TaxisPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
// import { ProvinciasPage } from './../provincias/provincias';

// import { IonicModule } from '@ionic/angular';

var TaxisPage = /** @class */ (function () {
    function TaxisPage(navCtrl, navParams, taxisService, loadingService, geoLocation, 
        // public modalCtrl : ModalController
        alertController, 
        //public paginaWelcome: WelcomePage
        uniqueDeviceID, http, backgroundGeolocation, toastCtrl, //mensaje cada vez que el location trabaja
        gasolineraService, formBuilder, 
        // private transfer: FileTransfer,
        global, 
        // public prodprov: ProductsProvider,
        socialSharing, tts, device, network, platform, screenOrientation, nativeAudio, cd, 
        // private file: File
        //private http: HttpClient,
        element, renderer, renderer1, keyboard, localNotifications, callNumber, sanitizer, smartAudio, zone, storage) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.taxisService = taxisService;
        this.loadingService = loadingService;
        this.geoLocation = geoLocation;
        this.alertController = alertController;
        this.uniqueDeviceID = uniqueDeviceID;
        this.http = http;
        this.backgroundGeolocation = backgroundGeolocation;
        this.toastCtrl = toastCtrl;
        this.gasolineraService = gasolineraService;
        this.formBuilder = formBuilder;
        this.global = global;
        this.socialSharing = socialSharing;
        this.tts = tts;
        this.device = device;
        this.network = network;
        this.platform = platform;
        this.screenOrientation = screenOrientation;
        this.nativeAudio = nativeAudio;
        this.cd = cd;
        this.element = element;
        this.renderer = renderer;
        this.renderer1 = renderer1;
        this.keyboard = keyboard;
        this.localNotifications = localNotifications;
        this.callNumber = callNumber;
        this.sanitizer = sanitizer;
        this.smartAudio = smartAudio;
        this.zone = zone;
        this.storage = storage;
        this.vista = 'mapa'; //
        this.markers = [];
        this.markers2 = [];
        this.markerb = [];
        this.carros = [];
        this.casitas = [];
        this.users = [];
        this.users2 = [];
        this.auto = {};
        this.auto2 = {};
        this.auto3 = {};
        this.tipo_taxi = 1;
        this.chofer = false;
        this.gps_update_link = "aqui_va_el_http_request_link"; // falta
        //para recibir datos con un pop(), en este caso el tipo de icono
        this.dataFromOtherPage = null;
        this.callback = function (data) {
            _this.dataFromOtherPage = data;
            console.log('data received from other page', _this.dataFromOtherPage);
            //mensaje para indicar que hay que refrescar la pagina
            var alert = _this.alertController.create({
                title: 'Información',
                subTitle: 'Debe refrescar el mapa  para actualizar el ícono',
                buttons: ['Salir']
            });
            alert.present();
        };
        //objeto para el icono
        this.cambiaricono = {
            nombre: "string",
            tipo: "400",
        };
        this.active_slide_index = 1;
        this.active_slide_index1 = 1;
        this.active_slide_index2 = 2;
        this.active_slide_index3 = 3;
        this.EMAILPATTERN = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
        this.myForm = this.formBuilder.group({
            firstName: ['', __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].required])],
            telefono: ['', __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].minLength(6), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].maxLength(10), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].pattern('[0-9]*'), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].required])],
            correo: ['', __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].maxLength(60), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].pattern(this.EMAILPATTERN), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].required])],
            // age: ['', AgeValidator.isValid],
            chapa: ['', __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].minLength(4), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].maxLength(250)])],
            modelo: ['', __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].minLength(2), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].maxLength(30)])],
            tarifa: ['', __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].compose([__WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].minLength(1), __WEBPACK_IMPORTED_MODULE_12__angular_forms__["f" /* Validators */].maxLength(5)])]
        });
        this.baseUrl = 'http://localhost//public';
        this.baseUrl2 = 'https://arcane-journey-25634.herokuapp.com';
        this.hayLinea = false;
        //para la linea
        this.latlngs = [
            [45.51, -122.68],
            [37.77, -122.43]
        ];
        this.comp = [];
        this.res = 'a';
        this.pedido = {
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " "
        };
        this.pedido2 = {
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": 10.09,
            "porc": 1.01,
            "curPosLat": 23.113592,
            "curPosLng": -82.366592,
            "negoPosLat": "23.09403741",
            "negoPosLng": "-82.36578036",
            "tar": " ",
            "telneg": " "
        };
        this.enviarvende = false;
        this.pedidocan = false;
        this.detalles3 = false;
        this.taxista3 = false;
        this.mensajeo = false;
        this.pedidotax = false;
        this.botontax = false;
        // btntax:boolean=false
        // btnusd:boolean=false
        this.tarifa = {
            "auto": 0,
            "minivan": 0,
            "microbus": 0,
            "band_auto": 0,
            "band_minivan": 0,
            "band_microbus": 0,
            "porciento": 0
        };
        // hayped:boolean=false
        // hayped2:boolean=false
        this.enter = false;
        this.tasa = {
            "usd": "0",
            "eur": "0",
            "card": "0"
        };
        this.botondiv = false;
        // val:number=5
        //para recibir datos con un pop(), en este caso el tipo de icono desde la pagina taxis
        this.dataFromOtherPage2 = null;
        this.callback2 = function (data) {
            _this.dataFromOtherPage2 = data;
            if (_this.dataFromOtherPage2.ok) {
                _this.detalles2 = true;
                // this.envio=this.dataFromOtherPage.envio
                // this.total=+(this.subtotal+this.envio).toFixed(2)
                // this.ruta=this.dataFromOtherPage2.ruta
            }
            else {
                _this.cambiacolor = false;
            }
            console.log('data received from other page', _this.dataFromOtherPage2);
        };
        this.detalles2 = false;
        this.splash = false;
        this.splash4 = false;
        this.splash2 = false;
        this.splash3 = false;
        this.noconex = true;
        this.notificationAlreadyReceived = false;
        this.timer2 = true;
        this.timer3 = false;
        this.connected = true;
        this.nohayGPS = false;
        this.inputWaypoints2 = [];
        this.inputWaypoints3 = [];
        this.viaje = 1;
        this.costo = 0;
        this.hecho = false;
        this.tipo = 0;
        this.equipaje = false;
        this.mascota = false;
        this.nored = true;
        this.vistanored = '';
        this.con = 0;
        this.con2 = 0;
        this.vistaerror = '';
        this.repetir = false;
        this.vistatipo = 'direccion';
        this.repetir2 = false;
        this.tabla = false;
        this.cargando = false;
        this.post = { color: 'primary' };
        this.colorcont = 0;
        this.autocomplete = "";
        this.autocomplete2 = "";
        this.addresses = [];
        this.addresses3 = [];
        this.selectedAddress = "Nombre de la calle, lugar"; //null;
        this.selectedAddress2 = "Nombre de la calle, lugar"; //null;
        this.tempAddress = ""; //null;
        this.addresses2 = "";
        this.placeholder = "Distancia";
        this.controlReverse = false;
        this.valid = false;
        this.botones = true;
        this.destinoBoton = true;
        this.destinoBoton2 = true;
        this.counti = 0;
        this.counti2 = 0;
        this.hayped2 = false;
        this.coord = [23.113592];
        this.coord2 = [-82.366592];
        this.myCallbackFunction = function (_params) {
            return new Promise(function (resolve, reject) {
                _this.dataFromOtherPage = _params;
                //resolve();
                if (_this.dataFromOtherPage.ok) {
                    // this.auto = this.dataFromOtherPage.auto
                    _this.user = _this.dataFromOtherPage.auto;
                    _this.existetel = true;
                }
                console.log('data received from other page', _this.dataFromOtherPage.auto);
            });
        };
        // dest: any[]= [];
        this.traceCount = 0;
        this.traceCount2 = 0;
        this.moveEnd = true;
        this.validGeocode = false;
        this.validDesapear = false;
        this.muestraruta = false;
        this.validDesapear2 = false;
        this.backbutttom = false;
        this.Waypoints = [];
        this.hechos = false;
        this.visto = false;
        this.visto2 = true;
        this.encamino = false;
        this.datosch = {
            "id": 41,
            "idt": "12456",
            "nam": "Chofer de ejemplo ",
            "lat": "23.08851803",
            "lng": "-82.49170739",
            "est": true,
            "tel": "123456789",
            "cor": "no tiene",
            "eda": "-647.79",
            "apr": false,
            "ini": "Período de Prueba",
            "ven": "Período de Prueba",
            "dem": true,
            "created_at": "2023-04-03 15:32:15",
            "updated_at": "2023-05-31 12:53:16",
            "pos": null,
            "des": false,
            "det": false,
            "con": 15,
            "pri": true,
            "neg": 6,
            "bus": 0,
            "blo": false,
            "tl2": null,
            "lsn": false,
            "hab": false,
            "ntf": false,
            "res": "l"
        };
        this.dat = { "motivo": " " };
        this.origename2 = " Nombre del origen";
        this.destinoname2 = "Nombre del destino";
        this.dataFromOtherPage3 = null;
        this.myCallbackFunction2 = function (_params) {
            return new Promise(function (resolve, reject) {
                _this.dataFromOtherPage3 = _params;
                //resolve();
                console.log('data received from other page', _this.dataFromOtherPage3);
                if (_this.dataFromOtherPage3.ok) {
                    _this.pedid = _this.dataFromOtherPage3.pedido;
                    _this.origename2 = _this.dataFromOtherPage3.origename;
                    _this.destinoname2 = _this.dataFromOtherPage3.destinoname;
                    _this.costoviaje = _this.dataFromOtherPage3.costoviaje;
                    _this.dat = _this.dataFromOtherPage3.dat;
                    _this.vistos();
                }
            });
        };
        this.tllegada = {
            "tllegada": " X min",
            "origename": "",
            "destinoname": ""
        };
        this.onlyone = true;
        this.adm = false;
        this.smoto = false;
        this.sbasico = false;
        this.sconfort = false;
        this.smicro = false;
        this.datosped = {
            "dat": {
                "total": "200 CUP",
                "curPosLat": 23.113601685577965,
                "curPosLng": -82.36660480499269,
                "origename": "Nombre de la calle, lugar",
                "negoPosLat": 23.11072031122143,
                "negoPosLng": -82.36965179443361,
                "destinoname": "Vía Blanca, Santos Suárez, Tamarindo, Diez de Octubre, La Habana, 12000, Cuba"
            },
            "vis": null,
            "choferes": {
                "nam": "Dalex",
                "tel": 52956619,
                "con": 1,
                "lat": "23.067290722278763",
                "lng": "-82.4672841",
                "viaje": false,
                "valora": null,
                "marca": "",
                "modelo": "",
                "color": "",
            }
        };
        this.aceptado = false;
        this.terminado = false;
        this.onetime2 = true;
        this.count = 0;
        this.count2 = 0;
        this.provincia = {
            "1": {
                "costo": "valor",
                "origen": "valor",
                "destino": "valor",
                "descripcion": "valor"
            },
            "2": {
                "costo": "valor",
                "origen": "valor",
                "destino": "valor",
                "descripcion": "valor"
            },
            "act": 0
        };
        this.provinciact = false;
        this.mmap = true;
        this.buscando = 2;
        this.buscando2 = 2;
        //para recibir datos con un pop(), en este caso el tipo de icono
        this.dataFromOtherPageProvincia = null;
        this.callbackProvincia = function (data) {
            _this.dataFromOtherPageProvincia = data;
            console.log('data received from ProvinciaPage', _this.dataFromOtherPageProvincia);
            //mensaje para indicar que hay que refrescar la pagina
            /* let alert = this.alertController.create({
              title: 'Información',
              subTitle: 'Debe refrescar el mapa  para actualizar el ícono',
              buttons: ['Salir']
            });
            alert.present(); */
        };
        this.reservar = false;
        this.cerrado = false;
        this.vistaoferta = '';
        this.oferta = false;
        this.minval = false;
        this.tarifa2 = false;
        this.gasolineras = [];
        this.vistatipomoneda = '';
        this.gest = false;
        this.markerCount = 0;
        this.est1 = false;
        this.est2 = false;
        this.est3 = false;
        this.est4 = false;
        this.pedidoCurso = false;
        this.onlyone2 = false;
        this.places = [];
        this._places = new __WEBPACK_IMPORTED_MODULE_37_rxjs__["BehaviorSubject"]([]);
        this.claxon = false;
        this.claxoncount = 0;
        this.tabBarElement = document.querySelector('.tabbar');
        this.text = 'tienes un pedido';
        this.rate = 1;
        this.locale = 'es-ES';
        var gasolinera = this.navParams.get('gasolinera');
        if (gasolinera) {
            this.vista = 'lista';
        }
    }
    TaxisPage.prototype.pageScroller = function () {
        this.pageTop.scrollToTop();
    };
    TaxisPage.prototype.pageScrollers1 = function () {
        this.pageTops1.scrollToTop();
    };
    Object.defineProperty(TaxisPage.prototype, "search_places", {
        get: function () {
            return this._places.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    TaxisPage.prototype.ionViewDidEnter = function () {
        var _this = this;
        this.pedidoCurso = this.navParams.get('pedidoCurso');
        this.lastPedido = this.navParams.get('lastPedido');
        this.tarifa2 = false;
        this.muestraruta = false;
        this.user = this.navParams.get('user');
        console.log('didenter: ' + JSON.stringify(this.user.parametros.parametros));
        console.log('tarifa2: ' + JSON.stringify(this.user.parametros.parametros.tarifa2));
        var tarifa2obj;
        for (var _i = 0, _a = this.user.parametros.parametros.tarifa2; _i < _a.length; _i++) {
            var carro = _a[_i];
            tarifa2obj = carro;
        }
        console.log('tarifa2obj: ' + JSON.stringify(tarifa2obj.moto));
        this.id = this.navParams.get('id');
        this.smoto = this.user.parametros.parametros.moto.act;
        this.sbasico = this.user.parametros.parametros.basico.act;
        this.sconfort = this.user.parametros.parametros.confort.act;
        this.smicro = this.user.parametros.parametros.micro.act;
        this.adm = this.user.adm;
        this.gest = this.user.gest;
        this.provincia = this.user.parametros.parametros.provincia;
        this.provinciact = this.user.parametros.parametros.provinciact;
        this.mmap = this.user.parametros.parametros.map;
        console.log('map: ' + JSON.stringify(this.mmap));
        this.pedidos = this.user.id;
        console.log('pedidos: ' + JSON.stringify(this.pedidos));
        console.log('provincia: ' + JSON.stringify(this.provincia));
        this.user_basico = this.user.parametros.parametros.basico.costo; //this.tarifa.auto    // ver despues           
        this.user_confort = this.user.parametros.parametros.confort.costo; //this.tarifa.minivan    // ver despues 
        this.user_microbus = this.user.parametros.parametros.micro.costo; //this.tarifa.microbus    // ver despues 
        this.user_moto = this.user.parametros.parametros.moto.costo; //this.tarifa.microbus    // ver despues 
        this.banderaauto = Number(this.user.parametros.parametros.basico.bandera); //350 this.tarifa.band_auto
        this.banderaminivan = Number(this.user.parametros.parametros.confort.bandera); // this.tarifa.band_minivan
        this.banderamicrobus = Number(this.user.parametros.parametros.micro.bandera); //this.tarifa.band_microbus
        this.banderamoto = Number(this.user.parametros.parametros.moto.bandera); //this.tarifa.band_microbus
        this.nego_porciento = this.user.parametros.parametros.porciento;
        this.jwt = this.user.parametros.parametros.jwt;
        this.rebaja = this.user.parametros.parametros.rebaja;
        //this.openDialogo();
        /*
       if(this.provincia.act){
         this.destinosBoton()
       }
        */
        // tarifa 2
        this.user_basico2 = tarifa2obj.basico.costo; //this.tarifa.auto    // ver despues           
        this.user_confort2 = tarifa2obj.confort.costo; //this.tarifa.minivan    // ver despues 
        this.user_microbus2 = tarifa2obj.micro.costo; //this.tarifa.microbus    // ver despues 
        this.user_moto2 = tarifa2obj.moto.costo; //this.tarifa.microbus    // ver despues 
        this.banderaauto2 = Number(tarifa2obj.basico.bandera); //350 this.tarifa.band_auto
        this.banderaminivan2 = Number(tarifa2obj.confort.bandera); // this.tarifa.band_minivan
        this.banderamicrobus2 = Number(tarifa2obj.micro.bandera); //this.tarifa.band_microbus
        this.banderamoto2 = Number(tarifa2obj.moto.bandera); //this.tarifa.band_microbus
        // monedas
        /*   for (let carro of this.user.parametros.parametros.monedas) {
            this.tasas=carro
          } */
        this.tasas = this.user.parametros.parametros.monedas;
        for (var _b = 0, _c = this.tasas; _b < _c.length; _b++) {
            var carro = _c[_b];
            if (carro.nam == "MLC") {
                this.mlc = carro.val;
            }
            if (carro.nam == "EUR") {
                this.eur = carro.val;
            }
            if (carro.nam == "USD") {
                this.usd = carro.val;
            }
            if (carro.nam == "RUB") {
                this.rub = carro.val;
            }
        }
        this.gasolineras = tarifa2obj.coordenadas;
        console.log('this.gasolineras: ' + JSON.stringify(this.gasolineras));
        this.nored = false;
        this.platform.registerBackButtonAction(function () {
            //your code
            // this.presentToast4("no va a salir")
            //this.backbutttom=true
            // this.addresses = [];
        }, 100);
        if (this.global.global3) {
            // this.presentToast4('Pedido realizado pagina tax'); 
            //  this.vista='realizado'
            //  this.vistatipo =' '
        }
        this.platform.ready().then(function () {
            console.log("platform ready");
            // this.tomarID(); 
            // this.backgroundMode.enable();
            _this.screenOrientation.onChange().subscribe(function () {
                setTimeout(function () {
                    if (_this.map) {
                        _this.map.invalidateSize();
                    }
                }, 100);
            });
            // This is used to unload the track. It's useful if you're experimenting with track locations
            /*    this.nativeAudio.unload('trackID').then(function() {
                   console.log("unloaded audio!");
               }, function(err) {
                   console.log("couldn't unload audio... " + err);
               }); */
            _this.smartAudio.preload('tabSwitch', 'assets/audio/bullitin.mp3');
            // 'trackID' can be anything
            _this.nativeAudio.preloadComplex('trackID', 'assets/audio/bullitin.mp3', 1, 1, 0).then(function () {
                console.log("audio loaded!");
            }, function (err) {
                console.log("audio failed: " + err);
            });
            _this.smartAudio.preload('tabSwitch2', 'assets/audio/claxon.mp3');
            // 'trackID' can be anything
            _this.nativeAudio.preloadComplex('trackID', 'assets/audio/claxon.mp3', 1, 1, 0).then(function () {
                console.log("audio loaded!");
            }, function (err) {
                console.log("audio failed: " + err);
            });
            /*             // This is used to unload the track. It's useful if you're experimenting with track locations
                        this.nativeAudio.unload('trackIDDd').then(function() {
                          console.log("unloaded audio!");
                      }, function(err) {
                          console.log("couldn't unload audio... " + err);
                      });
                
                      // 'trackID' can be anything
                      this.nativeAudio.preloadComplex('trackIDDd', 'assets/audio/pedidoRecibido.mp3', 1, 1, 0).then(function() {
                          console.log("audio loaded!");
                      }, function(err) {
                          console.log("audio failed: " + err);
                      });
             */
            var connectSubscription = _this.network.onConnect().subscribe(function () {
                console.log('network connected!');
                //   this.presentToast4("red Conectada")
                _this.nored = false;
                _this.vistanored = '';
                // this.loadMap();
                if (_this.network.type === 'wifi') {
                    console.log('we got a wifi connection, woohoo!');
                }
                _this.cd.detectChanges();
            });
            var disconnectSubscription = _this.network.onDisconnect().subscribe(function () {
                console.log('network dis connected!');
                _this.nored = true;
                _this.vistanored = 'nored';
                // this.loadMap();
                _this.presentToast4("red desconectada");
                _this.cd.detectChanges();
            });
        });
        if (this.map) {
            this.map.invalidateSize();
        }
        else {
            if (this.global.loadMap) {
                this.loadMap();
            }
        }
        // this.localizar() 
        // this.starGPS()
        this.geoLocation.watchPosition({ maximumAge: 3000, timeout: 5000, enableHighAccuracy: true }).subscribe(function (resp) {
            // this.starGPS()
            // this.startBackgroundGeolocation()
            if (resp.coords == null) {
                console.log("no hay gps 4 " + resp.coords);
                if (!_this.onlyone2) {
                    _this.map.flyTo([23.079736666666667, -82.46438500000001], 15);
                }
                _this.onlyone2 = true;
            }
            else {
                if (_this.global.gpsfix) {
                    _this.global.gpsfix = false;
                    if (resp.coords.latitude) {
                        _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                        //  this.map.flyTo([resp.coords.latitude, resp.coords.longitude], 15);
                        // this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude ],{draggable: false});
                        // this.markergps.addTo(this.map)
                        // animacion
                        if (_this.markergps) {
                            _this.markergps.removeFrom(_this.map);
                        }
                        var icon = L.divIcon({
                            className: 'custom-div-icon',
                            html: "<div   id='custom-overlay' ><div class='flb3'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle3'><div class='green-scanner3'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>",
                            // html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>weekend</i>",
                            iconSize: [30, 30],
                            iconAnchor: [9, 16]
                        });
                        var greenIcon = new L.Icon({
                            // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                            iconSize: [30, 40],
                            iconAnchor: [15, 37],
                        });
                        _this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: false, icon: icon });
                        // create popup contents
                        var customPopup = "<b>Mi posición</b><br/>";
                        // specify popup options 
                        var customOptions = {
                            //'maxWidth': '400',
                            //'width': '200',
                            offset: [0, -30]
                        };
                        // create popup contents
                        _this.markergps.addTo(_this.map);
                        _this.markergps.bindPopup(customPopup).openPopup();
                        //  this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                        _this.map.flyTo([resp.coords.latitude, resp.coords.longitude], 15);
                        //  this.map.panTo([resp.coords.latitude,resp.coords.longitude]);
                        _this.cd.detectChanges();
                        _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
                        // this.whait()
                    }
                    else {
                        _this.hayGPS = false; //para saber si hay o no gps y enviar o no el sms
                        console.log("no hay gps 1 ");
                    }
                    _this.destinosBoton();
                }
                else {
                    // this.presentToast4(resp)
                    if (resp.coords.latitude) {
                        // parte solo del radar
                        if (_this.onlyone) {
                            _this.onlyone = false;
                        }
                        // tomar el centro
                        // this.map.getCenter()
                        if (_this.marker3) {
                            _this.destino3 = _this.marker3.getLatLng();
                        }
                        if (_this.markergps) {
                            _this.markergps.removeFrom(_this.map);
                        }
                        var icon = L.divIcon({
                            className: 'custom-div-icon',
                            html: "<div   id='custom-overlay' ><div class='flb3'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle3'><div class='green-scanner3'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>",
                            // html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>weekend</i>",
                            iconSize: [30, 30],
                            iconAnchor: [9, 16]
                        });
                        var greenIcon = new L.Icon({
                            // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                            iconSize: [30, 40],
                            iconAnchor: [15, 37],
                        });
                        _this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: false, icon: icon });
                        // create popup contents
                        var customPopup = "<b>Mi posición</b><br/>";
                        // specify popup options 
                        var customOptions = {
                            //'maxWidth': '400',
                            //'width': '200',
                            offset: [0, -30]
                        };
                        // create popup contents
                        _this.markergps.addTo(_this.map);
                        // this.markergps.bindPopup(customPopup).openPopup(); 
                        //  this.markergps.bindPopup(customPopup);  
                        //  this.presentToast4("funcion buscar coordenadas")
                        _this.cd.detectChanges();
                    }
                }
            }
        }, function (error) {
            console.log("no hay gps 3 " + error);
        });
        this.vistaerror = '';
        this.vistatipo = 'direccion';
        this.botones = true;
        // this.routeControl2.hide()cd 
        if (this.mDistanseKm > 0) {
            // this.map.removeControl(this.routeControl3);
            this.active_polyline.clearLayers();
        }
        if (this.marker4) {
            this.marker4.removeFrom(this.map);
        }
        this.viaje = 1;
        this.tipo = 0;
        this.valid = false;
        this.vistatipomoneda = '';
        if (this.marker3) {
            this.marker3.addTo(this.map);
        }
        if (this.hechos) {
            this.vistaerror = 'hecho';
            this.vistatipo = ' ';
        }
        // this.vistaerror = 'datoschof'
        // this.whait()
        this.cd.detectChanges();
        // this.vistatipo = 'norute'
        // this.SEARCHpLACE(this.marker3)
        //  this.vistaerror = 'encamino' 
        // this.visto = true
        if (!this.pedidoCurso) {
            this.startTimerHoy();
        }
        else {
            this.pedentranscurso();
        }
        this.getClaxon();
    };
    TaxisPage.prototype.ionViewDidLoad = function () {
        //this.tabBarElement.style.display = 'none';
        /* setTimeout(() => {
         this.splash = false;
        /// this.tabBarElement.style.display = 'flex';
       }, 2000); */
        if (this.id == "000000") {
            this.global.global2 = true;
        }
        else {
            this.global.global2 = false;
        }
        this.aceptado = false;
        this.vestado = true;
        this.existetel = true;
        this.global.global1 = false;
        this.estaxista = false;
        this.esdemo = false;
        this.eschofer = false;
        this.emerge = false;
        this.emerge2 = false;
        this.clientenuevo = false;
        this.vadmin = false;
        this.buscaper = false;
        this.buscaper2 = false;
        // this.loadMap();
        // this.localizar()    
        // this.cargarTaxisDisponibles();
        this.contadorid = 20000;
        this.negocio = '';
        this.existetel2 = true; //para
        this.condi = false;
        this.bloquear = false;
        //variables para la calculadora
        this.hayGPS = false;
        this.vertodalista = true;
        this.mensajelista = false;
        this.siteName = '';
        this.shareImageNi = this.global.foto2 + '7WUGI64hXRnJaXlo03FYqojWJJ5RW9RH99ErQ5IW.png';
        //this.cargarCasaMatris();   
        //this.getDataUserTax()
        //this.getDataUserPer()
        // this.comprobar();
        //this.refrescar();
        //para el formulario de inscripcion
        this.emerge = true;
        this.detalles = false;
        // this.vistanored = 'nored'
        // this.vistaerror = 'norute'
        // this.destinosBoton()
        // this.destinosBoton2()
        this.focus = true;
        this.focus2 = true;
        this.cancelado = false;
    };
    TaxisPage.prototype.startTimer = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var i, flag, onetime, onetime2, _loop_1, this_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        flag = true;
                        onetime = true;
                        onetime2 = true;
                        _loop_1 = function () {
                            var id_1;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this_1.wait6sec()];
                                    case 1:
                                        _a.sent();
                                        console.log("star timer" + i);
                                        if (i > 80) {
                                            if (flag) {
                                                // this.cancelapi2()
                                                i = 4999;
                                            }
                                        }
                                        if (!this_1.encamino) {
                                            id_1 = this_1.idped.id;
                                            //   let id = 76 //68
                                            this_1.gasolineraService.getDataPedido(id_1).then(function (result) {
                                                var users2 = result;
                                                for (var _i = 0, users2_1 = users2; _i < users2_1.length; _i++) {
                                                    var carro = users2_1[_i];
                                                    console.log("pedido numero: " + carro.id);
                                                    _this.datosped = carro;
                                                    if (carro.est == "4") {
                                                        if (!_this.est4) {
                                                            _this.playAudio();
                                                            _this.est4 = true;
                                                        }
                                                        _this.cancelapi2();
                                                    }
                                                    if (carro.est == "3") {
                                                        // cambio de color del radar
                                                        console.log("encamino" + i);
                                                        if (!_this.est3) {
                                                            _this.playAudio();
                                                            _this.est3 = true;
                                                        }
                                                        _this.vistaerror = 'encamino';
                                                        _this.visto2 = false;
                                                    }
                                                    if (carro.est == "1") {
                                                        // this.presentToast4(" en espera " +carro.choferes.nam)  
                                                        if (!_this.est1) {
                                                            _this.playAudio();
                                                            _this.est1 = true;
                                                        }
                                                        _this.aceptado = true;
                                                        if (i > 20) {
                                                            if (i < 22) {
                                                                //  this.cancelapi2()
                                                                if (!_this.cancelado) {
                                                                    _this.vistaerror = 'demorado';
                                                                }
                                                                else {
                                                                }
                                                            }
                                                        }
                                                        if (i < 3) {
                                                            // this.map.setView([ carro.dat.curPosLat, carro.dat.curPosLng ], 15);
                                                            _this.map.flyTo([carro.dat.curPosLat, carro.dat.curPosLng], 15);
                                                        }
                                                        _this.cd.detectChanges();
                                                    }
                                                    /*  if(carro.est=="2"){
                                                       this.aceptado=false
                                                      // flag=false
                                                      // this.presentToast4(" visto ")
                                                       if (this.markers) { // Borra todos los marcadores que existen
                                                         for (let marker of this.markers) {
                                                           marker.removeFrom(this.map);
                                                         }
                                                       }
                                                       this.chvisto = carro.vis
                                                       this.encaminos()
                                                     } */
                                                    if (carro.est == "2") {
                                                        if (!_this.est2) {
                                                            _this.playAudio();
                                                            _this.est2 = true;
                                                        }
                                                        _this.aceptado = true;
                                                        flag = false;
                                                        if (_this.markers) {
                                                            for (var _a = 0, _b = _this.markers; _a < _b.length; _a++) {
                                                                var marker = _b[_a];
                                                                marker.removeFrom(_this.map);
                                                            }
                                                        }
                                                        // this.visto=false
                                                        _this.vistaerror = 'datoschof';
                                                        // this.posicionarTaxisEnMapa2(carro.choferes);//carga inical 
                                                        if (carro.choferes.idviaje == id_1) {
                                                            if (carro.choferes.idcl != _this.user.idcopia) {
                                                                //quitar la ruta
                                                                if (onetime) {
                                                                    _this.presentToast4(" En camino de recogida");
                                                                    _this.cancel3();
                                                                    // this.map.setView([ carro.dat.curPosLat, carro.dat.curPosLng ], 15);
                                                                    var bounds = L.latLngBounds(); // Instantiate LatLngBounds object
                                                                    var lat_lng = [carro.choferes.lat, carro.choferes.lng];
                                                                    bounds.extend(lat_lng);
                                                                    var lat_lng2 = [carro.dat.curPosLat, carro.dat.curPosLng];
                                                                    bounds.extend(lat_lng2);
                                                                    _this.map.fitBounds(bounds, { padding: [6, 6] });
                                                                    onetime = false;
                                                                }
                                                                _this.onetime2 = true;
                                                                _this.updateAngle(carro.choferes);
                                                            }
                                                            if (carro.choferes.idcl == _this.user.idcopia) {
                                                                // re hacer la ruta
                                                                if (_this.onetime2) {
                                                                    // this.mostraruta3()
                                                                    _this.presentToast4(" Realizándose");
                                                                    _this.onetime2 = false;
                                                                    _this.removeLayer2();
                                                                }
                                                                _this.visto2 = false;
                                                                _this.updateAngle(carro.choferes);
                                                                // this.map.setView([ carro.choferes.lat, carro.choferes.lat ], 15);
                                                            }
                                                        }
                                                        else {
                                                            if (carro.choferes.idcl == _this.user.idcopia) {
                                                                _this.presentToast4(" Terminado");
                                                                i = 4999;
                                                                _this.aceptado = false;
                                                                _this.terminado = true;
                                                                /*  if(this.routeControl4){
                                                                   this.map.removeControl(this.routeControl4);
                                                                 } */
                                                                if (_this.markerCar) {
                                                                    _this.markerCar.removeFrom(_this.map);
                                                                    //this.markerOrigin.removeFrom(this.map);
                                                                }
                                                                _this.cancel2();
                                                                _this.localizar();
                                                            }
                                                        }
                                                    }
                                                }
                                                //    this.loadingService.dismissLoading();
                                                _this.cargando = false;
                                                // this.startBackgroundGeolocation()
                                            }, function (err) {
                                                console.log(err);
                                                _this.loadingService.presentError();
                                                // this.loadingService.dismissLoading();
                                                _this.splash4 = false;
                                                _this.nored = true;
                                                _this.vistanored = 'nored';
                                                _this.cargando = false;
                                                _this.cd.detectChanges();
                                            });
                                            //  let id=639 // this.pedid
                                            // this.loadingService.presentLoading()
                                            /*          this.gasolineraService.getMensajesNego2especifi(this.pedid).subscribe(
                                                       (response: any)=>{
                                                         let users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                         console.log(response);
                                                     //   this.presentToast4(' llamada ' + i+ " al API, pedido: " +this.pedid);
                                                       //this.buscaper2=false
                                                             for (let carro of users3) {
                                                               if(carro.apr&&carro.hab){
                                                                this.encamino=true
                                                                this.tllegada= JSON.parse(carro.dat)
                                                                
                                                                 }else{
                                          
                                                                  if(carro.hab){
                                                                    this.vistaerror = 'encamino'
                                                                    this.visto=true
                                                                   // this.encamino=false
                                                                    this.hechos=false
                                          
                                                                  }
                                                                 }
                                          
                                                                 if(carro.pri){
                                                                // datos
                                                                    this.datosch=carro
                                                                    this.vistaerror = 'datoschof'
                                                                
                                                                    // this.hechos=false
                                          
                                                                }
                                          
                                                                 console.log("encamino "+this.encamino);
                                                                 console.log(this.datosch);
                                            
                                          
                                                               }
                                                         
                                                       //  this.loadingService.dismissLoading();
                                                       },
                                                       (error) => {
                                                         this.loadingService.presentError();
                                                         //this.loadingService.dismissLoading();
                                                       }
                                                     )
                                             */
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        };
                        this_1 = this;
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < 5000)) return [3 /*break*/, 4];
                        return [5 /*yield**/, _loop_1()];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.vistos = function () {
        this.vistaerror = 'hecho';
        this.vistatipo = ' ';
        this.hechos = true;
        this.visto = true;
        this.visto2 = true;
        this.encamino = false;
        this.validDesapear = true;
        /*   if (this.onlyone){
          //  this.startTimer()
            this.onlyone= false
          } */
    };
    TaxisPage.prototype.encaminos = function () {
        this.vistaerror = 'encamino';
        this.visto = true;
        this.visto2 = true;
        this.hechos = false;
        this.encamino = false;
        this.cd.detectChanges();
    };
    TaxisPage.prototype.changecolor = function () {
        this.colorcont++;
        if (this.colorcont == 1) {
            this.post.color = '1';
        }
        if (this.colorcont == 2) {
            this.post.color = '2';
        }
        if (this.colorcont == 3) {
            this.post.color = '3';
        }
        if (this.colorcont == 4) {
            this.post.color = '4';
        }
        if (this.colorcont == 5) {
            this.post.color = '5';
        }
        if (this.colorcont == 6) {
            this.post.color = '6';
        }
        if (this.colorcont == 7) {
            this.post.color = '7';
        }
        if (this.colorcont == 8) {
            this.post.color = '8';
        }
        if (this.colorcont == 9) {
            this.post.color = '9';
        }
        if (this.colorcont == 10) {
            this.post.color = '10';
        }
        if (this.colorcont == 11) {
            this.post.color = '11';
        }
        if (this.colorcont == 12) {
            this.post.color = '12';
        }
        if (this.colorcont == 13) {
            this.colorcont = 1;
            this.post.color = 'primary';
        }
    };
    TaxisPage.prototype.spanfalse = function () {
        this.splash2 = false;
    };
    TaxisPage.prototype.spantrue = function () {
        this.splash2 = true;
    };
    TaxisPage.prototype.pageScroller2 = function () {
        if (this.existetel) {
            this.splash2 = true;
            this.pageTop2.scrollToTop();
        }
        else {
            this.splash2 = true;
            this.pageTop2.scrollToTop();
        }
    };
    //prueba dark mode
    /* public nightmode(bool:boolean){
      this.ls.updateVariable('nightMode', bool);
    
      const systemDark = window.matchMedia("(prefers-color-scheme: dark)");
      systemDark.addListener(this.colorTest);
      if(bool){
        document.body.setAttribute('data-theme', 'dark');
      }else{
        document.body.setAttribute('data-theme', 'light');
      }
    }
     */
    TaxisPage.prototype.playText = function (con) {
        if (con == 1) {
            this.text = 'tienes un pedido';
        }
        if (con == 2) {
            this.text = 'tienes dos pedidos';
        }
        if (con == 3) {
            this.text = 'tienes tres pedidos';
        }
        if (con == 4) {
            this.text = 'tienes cuatro pedidos';
        }
        if (con == 5) {
            this.text = 'tienes cinco pedidos';
        }
        if (con == 6) {
            this.text = 'tienes seis pedidos';
        }
        if (con == 7) {
            this.text = 'tienes siete pedidos';
        }
        if (con == 8) {
            this.text = 'tienes ocho pedidos';
        }
        if (con == 9) {
            this.text = 'tienes nueve pedidos';
        }
        if (con > 9) {
            this.text = 'tienes muchos pedidos';
        }
        //poner aqui el backgroud this.backgroundMode.enable();
        this.tts.speak({
            text: this.text,
            rate: this.rate / 200,
            locale: this.locale
        })
            .then(function () { return console.log('Success'); })
            .catch(function (reason) { return console.log(reason); });
    };
    TaxisPage.prototype.what2 = function () {
        // this.presentToast4('Aqui se va al grupo de WhatsApp');
        var message = "Descarga esta app";
        //canShareVia(appName, message, subject, this.shareImageNi, this.siteName)
        // let message = "Descarga esta app";
        this.socialSharing.shareViaWhatsApp(message, this.shareImageNi, this.siteName).then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    TaxisPage.prototype.what = function () {
        // console.log(this.nego.nam);
        // console.log(this.nego.ini);
        var message = " Pedido " + '\n' + " Ruta: " + '\n' + " Personas: " + '\n' + " Hora: " + '\n' + " Día: " + '\n' + " Equipaje: " + '\n' + " Mascotas: " + '\n' + " Costo: ";
        console.log(message);
        this.socialSharing.shareViaWhatsAppToReceiver('5352951669', message, ' ').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    TaxisPage.prototype.telegram = function () {
        this.presentToast4('Aqui se va al grupo de Telegran');
        var message = "Descarga esta app";
        var subject = "Buen servicio";
        this.socialSharing.shareVia('org.telegram.messenger.web', message, subject, this.shareImageNi, 'https://t.me/mercocaribe').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    TaxisPage.prototype.instagram = function () {
        this.presentToast4('Aqui se va al grupo de Instagram');
        var message = "Descarga esta app";
        var subject = "Buen servicio";
        this.socialSharing.shareVia('org.telegram.messenger.web', message, subject, this.shareImageNi, 'https://t.me/mercocaribe').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    //inicio prueba de subir foto
    TaxisPage.prototype.changeListener = function ($event) {
        this.file = $event.target.files[0];
    };
    TaxisPage.prototype.trackByIdx = function (index) {
        return index;
    };
    TaxisPage.prototype.saveProfile_click = function () {
        console.log("saveProfile_click");
        // Add your code here
        /*   this.afAuth.authState.take(1).subscribe(auth => {
            this.afDatabase.object(`profile/${this.id}`).set(this.profile)
              .then(() => {
                this.uploadProfileImage();
                this.navCtrl.pop();
              });
          }) */
    };
    TaxisPage.prototype.uploadProfileImage = function () {
        console.log("uploadProfileImage");
        /*  let fileRef = firebase.storage().ref('profileImages/' + this.uid + ".jpg");
         fileRef.put(this.file).then(function(snapshot) {
           console.log('Uploaded a blob or file!');
         }); */
    };
    /* async uploadAvatar(token: string, avatar: File): Promise<Profile> {
      try {
        let formData = new FormData();
        formData.append('avatar', avatar, avatar.name);
        this.userProfile = await this.httpClient.post<Profile>(
          `${this.server}${this.profilesAvatarsRoute}`,
          formData,
          {}).toPromise();
        if (this.userProfile.avatar) {
          this.userProfile.avatar = await this.getUserAvatarBase64(token);
        }
        return this.userProfile;
      } catch (err) {
        throw new Error(err.status + " - " + err.statusText);
      }
    } */
    // borra a un anuncio
    TaxisPage.prototype.deleteUsuario = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: 'Si desea eliminar su usuario, oprima SI</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        console.log(_this.auto3.id);
                                        var i = {
                                            "id": _this.auto3.id,
                                            "idt": "xxxxxx"
                                        };
                                        var result = _this.gasolineraService.actualizarAnuncio2(i); //api 
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.estaxi = function () {
        this.eschofer = false;
        this.emerge = true;
        this.emerge2 = false;
    };
    TaxisPage.prototype.estaxi2 = function () {
        this.eschofer = true;
        this.emerge = false;
    };
    TaxisPage.prototype.estaxi3 = function () {
        //flag para taxista de moto o de auto
        this.mensajero = false;
        this.taxista2 = false; //moto
        this.emerge2 = true;
        this.emerge = false;
        this.negocio = "";
    };
    TaxisPage.prototype.estaxi4 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.mensajero = true;
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Información',
                                // subTitle: 'Alert subtitle...',
                                enableBackdropDismiss: true,
                                message: 'Seleccione la categoría de servicio a domicilio que corresponda a su negocio  ',
                                buttons: [
                                    {
                                        text: 'ACEPTAR',
                                        handler: function (data) {
                                            console.log(data);
                                            //this.presentToast4('OK clicked. Data -> ' + data ); 
                                            _this.negocio = data; // para A en save+ JSON.stringify(data)
                                            switch (data) {
                                                case "1":
                                                    _this.nombrenegocio = "	Alimentos Preparados";
                                                    break;
                                                case "2":
                                                    _this.nombrenegocio = "	Agro-Mercado";
                                                    break;
                                                /*       case "3":
                                                        this.nombrenegocio= "	Belleza";
                                                        break;
                                                        case "4":
                                                        this.nombrenegocio= "	Del hogar";
                                                        break; */
                                                case "5":
                                                    _this.nombrenegocio = "	Transporte";
                                                    break;
                                                /*   case "6":
                                                  this.nombrenegocio= "	Mascotas";
                                                  break;
                                                  case "7":
                                                  this.nombrenegocio= "	Fotos";
                                                  break;
                                                  case "8":
                                                  this.nombrenegocio= "	Modista sastre";
                                                  break;
                                                  case "9":
                                                  this.nombrenegocio= "	Empleada domestica";
                                                  break;
                                                  case "10":
                                                  this.nombrenegocio= "	Artesanos";
                                                  break;
                                                  case "11":
                                                  this.nombrenegocio= "	Clases";
                                                  break;
                                                  case "12":
                                                  this.nombrenegocio= "	Reparaciones ";
                                                  break;
                                                 */ case "13":
                                                    _this.nombrenegocio = "	Otros";
                                                    break;
                                                default:
                                                    _this.nombrenegocio = " Otros";
                                            }
                                            //this.nombrenegocio=JSON.stringify(data.name)
                                        },
                                        role: ''
                                    },
                                    {
                                        text: 'CANCELAR',
                                        handler: function (data) {
                                            // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                            data = 13;
                                            _this.negocio = data; // para A en save
                                            _this.nombrenegocio = " Otros";
                                            //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                            //value: '13'
                                        },
                                        role: 'cancel'
                                    }
                                ],
                                inputs: [
                                    {
                                        type: 'radio',
                                        id: 'opt1',
                                        name: 'opt1',
                                        'label': 'Alimentos Preparados',
                                        value: '1',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt2',
                                        name: 'opt2',
                                        'label': '	Agro-Mercado',
                                        value: '2',
                                        'checked': false
                                    },
                                    /* {
                                      type: 'radio',
                                      id: 'opt3',
                                      name: 'opt3',
                                      'label': '	Belleza',
                                      value: '3',
                                      'checked': false
                                    },
                                    {
                                    type: 'radio',
                                    id: 'opt4',
                                    name: 'opt4',
                                    'label': '	Del hogar',
                                    value: '4',
                                    'checked': false
                                    }, */
                                    {
                                        type: 'radio',
                                        id: 'opt5',
                                        name: 'opt5',
                                        'label': '	Transporte',
                                        value: '5',
                                        'checked': false
                                    },
                                    /* {
                                    type: 'radio',
                                    id: 'opt6',
                                    name: 'opt6',
                                    'label': '	Mascotas',
                                    value: '6',
                                    'checked': false
                                    },
                                    {
                                    type: 'radio',
                                    id: 'opt7',
                                    name: 'opt7',
                                    'label': '	Fotos',
                                    value: '7',
                                    'checked': false
                                    },
                                    {
                                    type: 'radio',
                                    id: 'opt8',
                                    name: 'opt8',
                                    'label': '	Modista sastre',
                                    value: '8',
                                    'checked': false
                                    },
                                    {
                                    type: 'radio',
                                    id: 'opt9',
                                    name: 'opt9',
                                    'label': '	Empleado doméstico',
                                    value: '9',
                                    'checked': false
                                    },
                                    {
                                    type: 'radio',
                                    id: 'opt10',
                                    name: 'opt10',
                                    'label': '	Artesanos',
                                    value: '10',
                                    'checked': false
                                    },
                                    {
                                    type: 'radio',
                                    id: 'opt11',
                                    name: 'opt11',
                                    'label': '	Clases',
                                    value: '11',
                                    'checked': false
                                    },
                                    {
                                    type: 'radio',
                                    id: 'opt12',
                                    name: 'opt12',
                                    'label': '	Reparaciones ',
                                    value: '12',
                                    'checked': false
                                    }, */
                                    {
                                        type: 'radio',
                                        id: 'opt13',
                                        name: 'opt13',
                                        'label': '	Otros',
                                        value: '13',
                                        'checked': false
                                    },
                                ]
                            })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        this.negocio = "";
                        this.taxista2 = true; //auto
                        this.emerge2 = true;
                        this.emerge = false;
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.comprobar = function () {
        // this.cargarTaxisDisponibles();
        this.getDataUserTax();
        /* if(this.eschofer){
            this.getDataUserTax()
        }else{
            //api de la tabla personal para buscar a un usuario especifico
            this.getDataUserPer()
        } */
    };
    // ionViewDidLeave() {
    //   this.subscription.unsubscribe();
    // }
    //Carga el mapa de leaflet
    TaxisPage.prototype.loadMap2 = function () {
        if (this.map) {
            L.map('map').off();
            L.map('map').remove();
        }
        //Límites del mapa
        /*  let southWest = L.latLng({lat: 22.955763, lng: -82.598737});
         let northEast = L.latLng({lat: 23.201655, lng: -81.090976});
         let bounds = new L.LatLngBounds(southWest, northEast); */
        this.map = L.map('map', { maxBoundsViscosity: 1.0, attributionControl: true, zoomControl: false });
        /*     L.tileLayer.mbTiles('assets/tiles/cuba.mbtiles', { 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'
              minZoom: 11, http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png
              maxZoom: 16
            }).addTo(this.map);
        */
        L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(this.map);
        this.map.setView([22.992960, -82.410490], 15); //23.103592,-82.466592
        /*   L.Routing.control({
            waypoints: [
              L.latLng(22.992960, -82.410490),
              L.latLng(22.982960, -82.400490)
            ], routeWhileDragging: true
          }).addTo(this.map); */
        //this.map.on('dblclick', (e:any) => { console.log(e.latlng); });
        //prueba
        //this.map.on('dblclick', (e:any) => { console.log(e.latlng); });
        /*
      var crosshairIcon = L.icon({
        iconUrl: 'assets/libs/leaflet/images/person.ico',
        iconSize:     [20, 20], // size of the icon
        iconAnchor:   [10, 10], // point of the icon which will correspond to marker's location
      });
      let crosshair = new L.marker(this.map.getCenter(), {icon: crosshairIcon, clickable:false});
      crosshair.addTo(this.map);

        
        this.map.on('move', (e:any) => {
          
         // console.log("algo sale" +this.map.getCenter());
          crosshair.setLatLng(this.map.getCenter());
        
        }); */
        /*  este da error
                this.map.on('move', function(e) {
                  crosshair.setLatLng(this.map.getCenter());
                }); */
    };
    TaxisPage.prototype.fly = function () {
        if (this.map) {
            this.map.invalidateSize();
        }
        this.map.setView([23.113592, -82.366592], 18);
        this.map.flyTo([23.113592, -82.366592], 18);
        this.cd.detectChanges();
    };
    TaxisPage.prototype.pan = function () {
        console.log("pan");
        this.map.setView([23.113592, -82.366592], 18);
        this.map.panTo([23.113592, -82.366592]);
    };
    TaxisPage.prototype.loadMap = function () {
        var _this = this;
        if (this.map) {
            L.map('map').off();
            L.map('map').remove();
        }
        //Límites del mapa
        /*     let southWest = L.latLng({lat: 22.91736457507185, lng: -82.6171084443657});
            let northEast = L.latLng({lat: 23.240795592592406, lng: -81.91418475778585});
            let bounds = new L.LatLngBounds(southWest, northEast); , { zoomControl:false } */
        this.map = L.map('map', { maxBoundsViscosity: 1.0, attributionControl: false, zoomControl: false });
        // this.map.setView([ this.carr.lat,this.carr.lng],  15);
        /*    this.map.on('load', (e:any) => {
             this.map.flyTo([23.113592,-82.366592], 18);
            console.log("map loaded");
            });
         */
        this.map.setView([23.079736666666667, -82.46438500000001], 13);
        //  this.map.setView([ 23.079736666666667,-82.46438500000001], 8);
        /*    L.tileLayer.mbTiles('assets/tiles/habana.mbtiles', {
              minZoom: 11,
              maxZoom: 16
            }).addTo(this.map);
            */ // 
        // https://api.mapbox.com/styles/v1/{username}/{style_id}/tiles/{tilesize}/{z}/{x}/{y}{@2x}
        //https://api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/1/1/0?access_token=pk.
        // streets-v9 outdoors-v9 light-v9 dark-v9 satellite-streets-v9
        if (this.mmap) {
            L.tileLayer('https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/{z}/{x}/{y}?access_token=pk.' + this.jwt, {
                attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
                maxZoom: 18
            }).addTo(this.map);
        }
        else {
            L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
                maxZoom: 18
            }).addTo(this.map);
        }
        //creacion del marcador verde con la posicion de la variable carro
        /*
               var greenIcon = new L.Icon({
                        
               // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',//icono sustituido
                iconSize: [30, 40], // size of the icon
                iconAnchor:   [15, 37],
              }); */
        //   "<div   id='custom-overlay' ><div class='flb'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle2'><div class='green-scanner2'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>"
        /*   var icon = L.divIcon({
             className: 'custom-div-icon',
            html: "<div   id='custom-overlay' ><div class='flb3'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle3'><div class='green-scanner3'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>",
       
           // html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>weekend</i>",
            iconSize: [30, 30],
            iconAnchor: [9, 16]
        });
       
        L.marker([ 23.113592,-82.366592], { icon: icon }).addTo(this.map);
       */
        var greenIcon = new L.Icon({
            // icon:icon,     
            //  iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
            iconSize: [30, 40],
            iconAnchor: [15, 37],
        });
        /* this.marker = L.marker([this.carr.lat, this.carr.lng ],{draggable: true, icon: greenIcon});
         this.marker.addTo(this.map); */
        //prueba tomar posicion dinamicamente
        //this.map.on('click', (e:any) => { console.log(e.latlng); });
        // this.marker2.on('dragend', function (e) { alert(" hola mundo"); });
        /*    this.map.on('move', (e:any) => {
            // console.log("algo sale" +this.map.getCenter());
             this.marker2.setLatLng(this.map.getCenter());
           
           }); */
        //nuevo
        this.marker3 = L.marker([23.079736666666667, -82.46438500000001], { draggable: false, riseOnHover: false, icon: greenIcon });
        //  this.marker3 = L.marker([this.carr.lat, this.carr.lng], {draggable: false, riseOnHover:false, icon: greenIcon});
        // this.markers.push(marker3);
        /*  marker.on('dblclick', () => {
           this.abrirDetallesCarro(carro)
         }); */
        // this.marker3.bindPopup(this.user.nam).openPopup();
        this.marker3.addTo(this.map);
        // this.map.flyTo([23.113592,-82.366592], 18);
        // this.map.panTo(this.marker3.getLatLng());
        this.global.loadMap = false;
        this.map.on('move', function (e) {
            // console.log("algo sale" +this.map.getCenter());
            _this.marker3.setLatLng(_this.map.getCenter());
            _this.validDesapear = true;
            _this.addresses = [];
            if (_this.focus) {
                _this.selectedAddress2 = "Moviendo el mapa...";
            }
            // this.validGeocode=false // desabilita los botones de origen/destino  
            _this.validDesapear2 = false;
            _this.validGeocode = false; // deshabilitados origen/destino         
            _this.cd.detectChanges();
            // this.vistatipo = ' '
            //quitar el controlador   
            //  if(this.routeControl) {         
            //   this.map.removeControl(this.routeControl);
            //  }
            //this.searchbar.setDisabledState(true);
        });
        var cuenta = 0;
        this.map.on('moveend', function (e) {
            // console.log("algo sale" +this.map.getCenter());
            // alert(' El mapa se dejo de mover ' );
            // this.vistatipo === 'direccion'
            //this.searchbar.setDisabledState(false);
            // this.searchbar._isFocus
            // this.presentToast4("moveend")
            if (_this.cerrado) {
                _this.cerrado = false;
                // this.map.setView([this.latitud,this.longitud ], 15);
            }
            _this.marker3.setLatLng(_this.map.getCenter());
            if (_this.focus) {
                // se movio el mapa
                _this.selectedAddress2 = "Buscando el lugar...";
                _this.validGeocode = false; // deshabilitados origen/destino 
                _this.validDesapear2 = true;
                // this.focus2 =true           
            }
            else {
                // se movio el mapa por que se abrio el teclado
                //this.selectedAddress2= "" 
                // this.validGeocode=false // deshabilitados origen/destino 
                _this.focus = true; // se restaura el valor para la proxima vez que se abra haga lo mismo
                // this.focus2 =false // se movio por primera vez el mapa por que se abrio el teclado 
            }
            /*       if(this.focus2){
                    this.validGeocode=false // deshabilitados origen/destino
                    
             
              
                  }else{
                    // se movio el mapa por segunda vez despues de abrirse el teclado (se cerro el teclado)
                    this.selectedAddress2= this.tempAddress
                    this.validGeocode=true // habilita los botones de origen/destino
                    this.focus2=true // restaura el valor
                    this.focus=true // se restaura el valor para la proxima de abrir teclado
                   
                  } */
            if (!_this.visto) {
                _this.validDesapear = false;
                if (_this.controlReverse) {
                    _this.controlReverse = false;
                    // this.keyboard.hide();
                    _this.selectedAddress2 = _this.tempAddress;
                    if (_this.selectedAddress2 == "") {
                        _this.validGeocode = false;
                    }
                    else {
                        // this.validGeocode=true // habilitados origen/destino
                        var centro = _this.marker3.getLatLng();
                        var LatCentro = centro.lat;
                        var LngCentro = centro.lng;
                        var lat2 = _this.resultReverseGeocode.lat; //23.076696671688204 
                        var lng2 = _this.resultReverseGeocode.lon; //-82.46484607458116
                        var difLat = Math.abs(lat2 - LatCentro); //+(lat2-LatCentro) 
                        var difLng = Math.abs(lng2 - LngCentro); //+(lng2 -LngCentro)
                        console.log("difLat: " + difLat + " difLng: " + difLng);
                        if (difLat < 0.001) {
                            if (difLng < 0.001) {
                                // this.selectedAddress2 = firstName + secondName + thirdName 
                                _this.places = [];
                                _this.selectedAddress2 = _this.tempAddress;
                                console.log("original recortado: " + _this.selectedAddress2);
                                console.log("original tempAddress: " + _this.tempAddress);
                                _this.validGeocode = true;
                            }
                            else {
                                _this.validGeocode = false;
                            }
                        }
                        else {
                            _this.validGeocode = false;
                        }
                    }
                    // centrar el mapa por que se cerro el teclado
                    // Move input back to original location
                }
                else {
                    if (!_this.muestraruta) {
                        if (_this.backbutttom) {
                            _this.backbutttom = false;
                        }
                        else {
                            /*  cuenta++
                             if(cuenta==1){
                               this.SEARCHpLACE(this.marker3)
                             }
                             if(cuenta>1){
                               this.SEARCHpLACE1(this.marker3)
                             } */
                            //  this.SEARCHpLACE1(this.marker3)
                            _this.centro = _this.map.getCenter();
                            _this.validDesapear2 = false;
                            _this.cd.detectChanges();
                            if (_this.cancelado) {
                                _this.cancelado = false;
                            }
                            else {
                                if (_this.focus) {
                                    // se movio el mapa
                                    _this.selectedAddress2 = "Buscando el lugar...";
                                    _this.validGeocode = false; // deshabilitados origen/destino 
                                    // this.focus2 =true    
                                    _this.destinosBoton2();
                                }
                                else {
                                    // se movio el mapa por que se abrio el teclado
                                    // this.selectedAddress2= "" 
                                    _this.focus = true; // se restaura el valor para la proxima vez que se abra haga lo mismo
                                    _this.focus2 = false; // se movio por primera vez el mapa por que se abrio el teclado 
                                    _this.validGeocode = false; // deshabilitados origen/destino 
                                    _this.places = [];
                                    _this.selectedAddress2 = _this.tempAddress;
                                    console.log("original recortado: " + _this.selectedAddress2);
                                    console.log("original tempAddress: " + _this.tempAddress);
                                    // this.validGeocode=true
                                }
                            }
                        }
                    }
                }
            }
            if (!_this.moveEnd) {
                //this.viaje++;
                // this.mostraruta(); 
                _this.destino = _this.map.getCenter();
                _this.removeLayer();
            }
            _this.moveEnd = true;
            // this.vistatipo = 'direccion'
        });
        this.map.invalidateSize();
        this.cd.detectChanges();
        //this.localizar()
    };
    //parte de la calculadora
    //Dialogo para el inicio de la pagina
    TaxisPage.prototype.openDialogocal = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert_1, alert_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.hayGPS) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.alertController.create({
                                subTitle: "<strong>Pasos:</strong>",
                                message: '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos lugares que siempre ha querido conocer usando el botón verde!! ',
                                buttons: [
                                    {
                                        text: 'Aceptar',
                                        role: 'cancel',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert_1 = _a.sent();
                        return [4 /*yield*/, alert_1.present()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS,'
                                + ' actívelo o busque un lugar con mejor señal. Cuando se muestre el marcador con su posición oprima el botón verde de la calculadora para conocer la distancia punto a punto. ¡También se pueden arrastrar los marcadores y calcular la distancia entre dos lugares que siempre ha querido conocer!! ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 4:
                        alert_2 = _a.sent();
                        return [4 /*yield*/, alert_2.present()];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    //cargarcasamatrices desde api casitas
    TaxisPage.prototype.cargarCasaMatris = function () {
        var _this = this;
        this.gasolineraService.getDataCasitas().subscribe(function (response) {
            _this.casitas = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            var flagMarker2 = L.icon({
                iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',
                iconSize: [45, 45],
            });
            var _loop_2 = function (casita) {
                marker = L.marker([casita.lat, casita.lng], { draggable: false, icon: flagMarker2, riseOnHover: true });
                _this.markers2.push(marker);
                marker.on('dblclick', function () {
                    _this.abrirDetallesCasaMatris(casita);
                });
                marker.addTo(_this.map);
            };
            var marker;
            // this.posicionarCasitasEnMapa(flagMarker); 
            //buscar si existe el ID en el JSON 
            for (var _i = 0, _a = _this.casitas; _i < _a.length; _i++) {
                var casita = _a[_i];
                _loop_2(casita);
            }
        }, function (error) {
        });
    };
    TaxisPage.prototype.probarApi2 = function () {
        var _this = this;
        console.log('revisar probarApi2 ');
        this.gasolineraService.revisar5().then(function (result) {
            console.log('revisar conex ' + result.hello);
            console.log('revisar ver ' + result.version);
            // let latest_date =this.datepipe.transform(hora, 'yyyy-MM-dd'); 
            // this.loadingService.dismissLoading(); 
        }, function (err) {
            // this.conex=false
            // console.log("no red"+err);  
            _this.presentToast4("red desconectada, oprima el botón azul para reintentar...");
        });
    };
    TaxisPage.prototype.posicionarTaxisEnMapa2 = function (carro) {
        var _this = this;
        console.log("ver nam: " + carro.nam);
        /*   if (this.markers) { // Borra todos los marcadores que existen
            for (let marker of this.markers) {
              marker.removeFrom(this.map);
            }
          }
          */
        var bol = true;
        /*   if(carro.tip="1"){
            bol=false
          }else{
            bol=true
          } */
        if (bol) {
            var flagMarker = L.icon({
                iconUrl: 'assets/imgs/car.png',
                //    iconUrl: 'assets/libs/leaflet/images/icono_moto.png',
                iconSize: [25, 41.5],
                // className: 'u-turn-icon'
                // iconAnchor: [42, 82]
                iconAnchor: [15, 20]
            });
        }
        else {
            var flagMarker = L.icon({
                // iconUrl: 'assets/libs/leaflet/images/gasolinerab.png',
                // iconUrl: 'assets/libs/leaflet/images/icono_moto.png',
                iconUrl: 'assets/imgs/flecha.jpg',
                iconSize: [50, 50],
            });
        }
        // const posicion = carro.ultima_posicion; carro.lat, carro.lng 
        this.markerCar = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker, rotationAngle: 0 });
        this.markers.push(this.markerCar);
        if (this.adm || this.gest) {
            this.markerCar.on('click', function () {
                // this.abrirDetallesCarro(carro)
                // this.abrirDetallesGasolinera(carro,this.tiemporealok) .substring(0,11)
                var popupContent1 = '<h1>' + (carro.nam) + '<br />' + (carro.tel) + '</h1>', //,
                popup1 = new L.Popup({ offset: [0, -12] });
                popup1.setLatLng([carro.lat, carro.lng]); // this.markerCar.getLatLng()
                popup1.setContent(popupContent1);
                _this.map.addLayer(popup1);
            });
        }
        // this.markerCar.setIconAngle(90);
        this.markerCar.addTo(this.map);
    };
    TaxisPage.prototype.updateAngle = function (carro) {
        var _this = this;
        if (this.theta != 0) {
            if (this.markers) {
                for (var _i = 0, _a = this.markers; _i < _a.length; _i++) {
                    var marker = _a[_i];
                    marker.removeFrom(this.map);
                }
            }
        }
        /*
        este : 23.113331, -82.362184
        oeste : 23.113390, -82.372355
        norte: 23.116133, -82.366626
        sur : 23.109936, -82.366690
         */
        var origen = this.markerCar.getLatLng();
        var LngOrigen = origen.lng;
        var LatOrigen = origen.lat;
        var XShift = (carro.lng) - LngOrigen; // longitudes 
        var YShift = (carro.lat) - LatOrigen; // latitudes
        var theta = Math.atan2(XShift, YShift); // range (-PI, PI]
        theta *= 180 / Math.PI; // rads to degs, range (-180, 180]
        // this.markerCar.setRotationAngle(theta);
        // this.presentToast4("está a: "+theta)
        this.theta = theta;
        /*
        
        //  let LngShift = LngOrigen - (-82.372355)
        // let LatShift = LatOrigen - (23.113390)
        if (LngShift<0){
            this.presentToast4("está al Este")
            this.markerCar.setRotationAngle(90);
          }else{
            this.presentToast4("está al Oeste")
            this.markerCar.setRotationAngle(270);
          }
    
          if (LatShift<0){
            this.presentToast4("está al Norte")
            this.markerCar.setRotationAngle(0);
          }else{
            this.presentToast4("está al Sur")
            this.markerCar.setRotationAngle(180);
          }
        */
        if (theta != 0) {
            if (this.markerCar) {
                this.markerCar.removeFrom(this.map);
            }
            var bol = true;
            /* if(carro.tip="1"){
              bol=false
            }else{
              bol=true
            } */
            if (bol) {
                var flagMarker = L.icon({
                    iconUrl: 'assets/imgs/car.png',
                    // iconUrl: 'assets/libs/leaflet/images/amarillo.png',
                    iconSize: [25, 41.5],
                    // className: 'u-turn-icon'
                    // iconAnchor: [42, 82]
                    iconAnchor: [15, 20]
                });
            }
            else {
                var flagMarker = L.icon({
                    // iconUrl: 'assets/libs/leaflet/images/gasolinerab.png',
                    // iconUrl: 'assets/libs/leaflet/images/amarillo.png',
                    iconUrl: 'assets/imgs/flecha.jpg',
                    iconSize: [50, 50],
                });
            }
            // const posicion = carro.ultima_posicion; carro.lat, carro.lng 23.113592,-82.366592
            this.markerCar = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker, rotationAngle: theta });
            // this.markers.push(marker);
            this.markerCar.on('click', function () {
                // this.abrirDetallesCarro(carro)
                // this.abrirDetallesGasolinera(carro,this.tiemporealok)
                var popupContent1 = (carro.nam).substring(0, 11), //'<p>Hello world!<br />This is a nice popup.</p>',
                popup1 = new L.Popup({ offset: [0, -12] });
                popup1.setLatLng(_this.markerCar.getLatLng());
                popup1.setContent(popupContent1);
                _this.map.addLayer(popup1);
            });
            // this.markerCar.setIconAngle(90);
            this.markerCar.addTo(this.map);
            this.cd.detectChanges();
        }
        if (this.onetime2) {
            this.soundclaxon(carro.lat, carro.lng);
        }
    };
    TaxisPage.prototype.getTrabajando = function () {
        var _this = this;
        // this.loadingService.presentLoading4();
        this.gasolineraService.getDataTrabajando().then(function (result) {
            _this.users2 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.lat != null) {
                    if (carro.lng != null) {
                        _this.posicionarTaxisEnMapa2(carro); //carga inical  
                    }
                }
            }
            // this.loadingService.dismissLoading();
            _this.cargando = false;
        }, function (err) {
            console.log(err);
            _this.loadingService.presentError();
            // this.loadingService.dismissLoading();
            _this.splash4 = false;
            _this.nored = true;
            _this.vistanored = 'nored';
            _this.cargando = false;
            _this.cd.detectChanges();
        });
    };
    TaxisPage.prototype.getDataPedido = function () {
        var _this = this;
        this.loadingService.presentLoading4();
        // let created_at = "2023-09-13"
        var id = this.user.id;
        this.gasolineraService.getDataPedido(id).then(function (result) {
            var users2 = result;
            var idpedido = 0;
            for (var _i = 0, users2_2 = users2; _i < users2_2.length; _i++) {
                var carro = users2_2[_i];
                console.log(carro.id);
                if (idpedido < carro.id) {
                    idpedido = carro.id;
                    _this.dataUser = carro;
                }
            }
            if (_this.dataUser.est == 1) {
                _this.presentToast4(" en espera ");
            }
            if (_this.dataUser.est == 2) {
                _this.presentToast4(" visto ");
            }
            if (_this.dataUser.est == 3) {
                _this.presentToast4(" aceptado " + _this.dataUser.choferes.lat);
                _this.updateAngle(_this.dataUser.choferes);
            }
            _this.loadingService.dismissLoading();
            _this.cargando = false;
            // this.startBackgroundGeolocation()
        }, function (err) {
            console.log(err);
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
            _this.splash4 = false;
            _this.nored = true;
            _this.vistanored = 'nored';
            _this.cargando = false;
            _this.cd.detectChanges();
        });
    };
    //Cargar taxis disponibles
    TaxisPage.prototype.cargarTaxisDisponibles = function () {
        // console.log("llego a la función"); 
        var _this = this;
        this.cargando = true;
        this.splash4 = true;
        this.loadingService.presentLoading4();
        this.nored = false;
        this.esperando = true;
        this.buscaper2 = false;
        this.noconex = true;
        this.gasolineraService.getDataPersona2(this.id).then(function (result) {
            _this.users2 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log("llego al usuario");
            for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                var carro = _a[_i];
                //  this.presentToast4("llego al usuario 2" + this.id)
                if (carro.idt == _this.id) {
                    if (carro.pri) {
                        if (carro.dem) {
                            _this.chofer = true;
                        }
                        _this.auto = carro;
                        _this.contadorid = carro.id;
                        _this.resultado = carro.nam;
                        _this.existetel = true; //para transmitir los datos y cambiar de vista
                        _this.global.global1 = true;
                        _this.vclaveprimaria = carro.id;
                        _this.vnombre = carro.nam;
                        _this.vtelefono = carro.tel;
                        // this.vchapa=response.cha
                        // this.vmodelo=response.mod
                        _this.vcorreo = carro.cor;
                        _this.vedad = carro.eda;
                        _this.estaxista = false; // true si el usuario es taxista
                        _this.esdemo = carro.dem; // true cuando deja de estar en demo
                        _this.aprovado = carro.apr;
                        _this.vinicio = carro.ini;
                        _this.vfechapago = carro.ven;
                        _this.bloquear = carro.blo;
                        //objeto con los datos de la persona 
                        _this.auto3 = carro;
                        var carrito = {
                            id: carro.id,
                            idt: carro.idt,
                            nombre: carro.nam,
                            telefono: carro.tel,
                            android: false,
                            ln: carro.lsn,
                            pri: carro.pri
                        };
                        _this.comp.push(carrito);
                        _this.global.compglob = _this.comp;
                        console.log(_this.comp);
                    }
                    else {
                        _this.tabla = true;
                        //id que se va a utilizar en salvar la posicion automatico
                        _this.auto = carro;
                        _this.auto3 = carro;
                        _this.taxista3 = carro.tax;
                        // this.estaxista=carro.tax  // true si el usuario esta en la tabla taxista
                        _this.estaxista = carro.btn;
                        _this.existetel = true; //para transmitir los datos y cambiar de vista
                        _this.global.global1 = true;
                        _this.vclaveprimaria = carro.id;
                        _this.vnombre = carro.nam;
                        _this.vtelefono = carro.tel;
                        _this.vchapa = carro.cha;
                        _this.vmodelo = carro.mod;
                        _this.vcorreo = carro.cor;
                        _this.vedad = carro.eda;
                        _this.vtarifa = carro.tar;
                        _this.esdemo = carro.dem; // true cuando deja de estar en demo
                        _this.aprovado = carro.apr;
                        _this.vinicio = carro.created_at;
                        _this.vfechapago = carro.ven;
                        _this.numerodefotos = carro.fot;
                        //objeto con los datos de la persona 
                        var carrito = {
                            id: carro.id,
                            idt: carro.idt,
                            nombre: carro.nam,
                            telefono: carro.tel,
                            android: false,
                            ln: carro.lsn,
                            pri: carro.pri
                        };
                        _this.comp.push(carrito);
                        _this.global.compglob = _this.comp;
                        // this.startBackgroundGeolocation2()        
                    }
                }
                if (carro.ida == _this.id) {
                    _this.tabla = true;
                    //id que se va a utilizar en salvar la posicion automatico
                    _this.auto = carro;
                    _this.auto3 = carro;
                    _this.taxista3 = carro.tax;
                    // this.estaxista=carro.tax  // true si el usuario esta en la tabla taxista
                    _this.estaxista = carro.btn;
                    _this.existetel = true; //para transmitir los datos y cambiar de vista
                    _this.global.global1 = true;
                    _this.vclaveprimaria = carro.id;
                    _this.vnombre = carro.nam;
                    _this.vtelefono = carro.tel;
                    _this.vchapa = carro.cha;
                    _this.vmodelo = carro.mod;
                    _this.vcorreo = carro.cor;
                    _this.vedad = carro.eda;
                    _this.vtarifa = carro.tar;
                    _this.esdemo = carro.dem; // true cuando deja de estar en demo
                    _this.aprovado = carro.apr;
                    _this.vinicio = carro.created_at;
                    _this.vfechapago = carro.ven;
                    _this.numerodefotos = carro.fot;
                    //objeto con los datos de la persona 
                    var carrito = {
                        id: carro.id,
                        idt: carro.idt,
                        nombre: carro.nam,
                        telefono: carro.tel,
                        android: false,
                        ln: carro.lsn,
                        pri: carro.pri
                    };
                    _this.comp.push(carrito);
                    _this.global.compglob = _this.comp;
                    //  this.startBackgroundGeolocation2()            
                }
                if (carro.tax) {
                    _this.latitude = carro.lat;
                    _this.longitude = carro.lng;
                    _this.auto2 = carro;
                    // this.global.globalCarro=carro 
                    // this.botontax=carro.btn
                    // this.botondiv=carro.div
                    // estado=carro.est
                    if (carro.tip) {
                        _this.tarifa = JSON.parse(carro.tip);
                        _this.tasa = JSON.parse(carro.tas);
                        console.log("tarifa: " + _this.tarifa.porciento);
                    }
                }
            }
            /*
                       */
            _this.loadingService.dismissLoading();
            _this.cargando = false;
            if (_this.auto.con > 0) {
                _this.verMensajes4();
            }
            if (_this.existetel) {
                console.log("si existe : ");
                _this.splash4 = false;
                // this.loadingService.dismissLoading();
                _this.playAudio();
                _this.openDialogo();
            }
            else {
                console.log("no existe : ");
                _this.splash4 = false;
                // this.loadingService.dismissLoading();
                _this.detallesp();
                _this.buscaper2 = false;
            }
            // this.startBackgroundGeolocation()
        }, function (err) {
            console.log(err);
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
            _this.splash4 = false;
            _this.nored = true;
            _this.vistanored = 'nored';
            _this.cargando = false;
            _this.cd.detectChanges();
        });
        // this.presentToast4('Un solo botón para hacer su pedido');
    };
    TaxisPage.prototype.iconoAbrirDetalles = function () {
        this.cambiaricono.nombre = this.auto2.nam;
        var id = this.id;
        var numfoto = this.numerodefotos;
        var comp = this.comp;
        var carro = this.auto2;
        //console.log("variable "+JSON.stringify(carro))
        //el segundo parametro es un callback con los datos de la otra pagina desde el pop()
        // this.navCtrl.push(TaxistaPage, {carro, callback: this.callback, id,numfoto, comp  })
    };
    TaxisPage.prototype.abrirDetallesPerson = function (carro) {
        //set nombre de carro en un variable global para definir a que carro se le cambiara el icono
        this.cambiaricono.nombre = carro.nam;
        //el segundo parametro es un callback con los datos de la otra pagina desde el pop()
        // this.navCtrl.push(PersonaPage, {carro, callback: this.callback})
    };
    TaxisPage.prototype.abrirDetallesCasaMatris = function (casamatris1) {
        // this.navCtrl.push(ReservasPage, {casamatris1})
    };
    TaxisPage.prototype.localizar = function () {
        // this.splash=true
        /*      if (this.markergps) { // Borra el marcador del gps azul de la calculadora
               this.markergps.removeFrom(this.map);
                 }
         
                 if (this.marker) { // Borra el marcador del gps verde de la calculadora
                   this.marker.removeFrom(this.map);
                     }
       
                      */
        /*
            if(this.hayLinea){ // Borra la linea verde del calculo de la distancia
                  this.map.removeLayer(this.polyline);
                } */
        var _this = this;
        this.geoLocation.getCurrentPosition().then(function (resp) {
            // this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
            //this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude ],{draggable: false});
            //this.markergps.addTo(this.map);
            if (resp.coords.latitude) {
                _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                //  this.map.flyTo([resp.coords.latitude, resp.coords.longitude], 15);
                // this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude ],{draggable: false});
                // this.markergps.addTo(this.map)
                // animacion
                if (_this.markergps) {
                    _this.markergps.removeFrom(_this.map);
                }
                var icon = L.divIcon({
                    className: 'custom-div-icon',
                    html: "<div   id='custom-overlay' ><div class='flb3'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle3'><div class='green-scanner3'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>",
                    // html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>weekend</i>",
                    iconSize: [30, 30],
                    iconAnchor: [9, 16]
                });
                var greenIcon = new L.Icon({
                    // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                    iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                    iconSize: [30, 40],
                    iconAnchor: [15, 37],
                });
                _this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: false, icon: icon });
                // create popup contents
                var customPopup = "<b>Mi posición</b><br/>";
                // specify popup options 
                var customOptions = {
                    //'maxWidth': '400',
                    //'width': '200',
                    offset: [0, -30]
                };
                // create popup contents
                _this.markergps.addTo(_this.map);
                _this.markergps.bindPopup(customPopup).openPopup();
                //  this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                _this.map.flyTo([resp.coords.latitude, resp.coords.longitude], 15);
                //  this.map.panTo([resp.coords.latitude,resp.coords.longitude]);
                _this.cd.detectChanges();
                _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
            }
            else {
                _this.hayGPS = false; //para saber si hay o no gps y enviar o no el sms
            }
            if (_this.global.gpsfix) {
                // this.starGPS()
                _this.global.gpsfix = false;
            }
        }).catch(function (error) {
            _this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            // this.map.flyTo([23.113592,-82.366592], 15);
        });
        if (this.terminado) {
            this.terminado = false;
            this.cancel2();
        }
    };
    TaxisPage.prototype.fixgps = function () {
        var _this = this;
        this.geoLocation.watchPosition({ maximumAge: 3000, timeout: 5000, enableHighAccuracy: true }).subscribe(function (resp) {
            // this.starGPS()
            // this.startBackgroundGeolocation()
            if (!_this.global.gpsfix) {
                _this.presentToast4(resp);
                if (resp.coords.latitude) {
                    // parte solo del radar
                    if (_this.onlyone) {
                        _this.onlyone = false;
                    }
                    // tomar el centro
                    // this.map.getCenter()
                    if (_this.marker3) {
                        _this.destino3 = _this.marker3.getLatLng();
                    }
                    if (_this.markergps) {
                        _this.markergps.removeFrom(_this.map);
                    }
                    var icon = L.divIcon({
                        className: 'custom-div-icon',
                        html: "<div   id='custom-overlay' ><div class='flb3'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle3'><div class='green-scanner3'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>",
                        // html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>weekend</i>",
                        iconSize: [30, 30],
                        iconAnchor: [9, 16]
                    });
                    var greenIcon = new L.Icon({
                        // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                        iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                        iconSize: [30, 40],
                        iconAnchor: [15, 37],
                    });
                    _this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: false, icon: icon });
                    // create popup contents
                    var customPopup = "<b>Mi posición</b><br/>";
                    // specify popup options 
                    var customOptions = {
                        //'maxWidth': '400',
                        //'width': '200',
                        offset: [0, -30]
                    };
                    // create popup contents
                    _this.markergps.addTo(_this.map);
                    // this.markergps.bindPopup(customPopup).openPopup(); 
                    //  this.markergps.bindPopup(customPopup);  
                    //  this.presentToast4("funcion buscar coordenadas")
                    _this.cd.detectChanges();
                }
            }
        }, function (error) {
        });
    };
    TaxisPage.prototype.whatp = function () {
        var _this = this;
        var message = this.vnombre + " ha realizado un pedido al negocio ";
        this.socialSharing.shareViaWhatsAppToReceiver(this.auto2.ini, message, ' ').then(function (res) {
            console.log("success : " + _this.auto2.ini);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
    };
    TaxisPage.prototype.startTimerNego = function () {
        return __awaiter(this, void 0, void 0, function () {
            var i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < 500)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.wait30sec()];
                    case 2:
                        _a.sent();
                        console.log("star timer" + i);
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.delTax = function () {
        return __awaiter(this, void 0, void 0, function () {
            var i, _i, _a, marker;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        i = 0;
                        _b.label = 1;
                    case 1:
                        if (!(i < 1)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.wait5sec()];
                    case 2:
                        _b.sent();
                        console.log("star timer" + i);
                        if (this.markers) {
                            for (_i = 0, _a = this.markers; _i < _a.length; _i++) {
                                marker = _a[_i];
                                marker.removeFrom(this.map);
                            }
                        }
                        _b.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.delTax2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var i, _i, _a, marker;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        i = 0;
                        _b.label = 1;
                    case 1:
                        if (!(i < 1)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.wait60sec()];
                    case 2:
                        _b.sent();
                        console.log("star timer" + i);
                        if (this.markers) {
                            for (_i = 0, _a = this.markers; _i < _a.length; _i++) {
                                marker = _a[_i];
                                marker.removeFrom(this.map);
                            }
                        }
                        _b.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.wait5sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 25000); });
    };
    TaxisPage.prototype.wait30sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 15000); });
    };
    TaxisPage.prototype.wait6sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 6000); });
    };
    TaxisPage.prototype.wait60sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 60000); });
    };
    TaxisPage.prototype.verpedido2 = function (carro) {
        //console.log(this.carrito);
        //console.log(carro.prd);  envio   
        this.pedido2 = JSON.parse(carro.dat);
        return this.pedido2.envio;
    };
    TaxisPage.prototype.guardar2 = function (carro) {
        var id = this.id;
        var numfoto = this.numerodefotos;
        // console.log(carro);
        //      this.navCtrl.push(PerfilPage, {carro, id, numfoto });//     
    };
    TaxisPage.prototype.guardar4 = function () {
        // console.log(carro);
        var carro = {
            idt: "admin",
            nam: "Administrador"
        };
        var bol = true;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_18__hola_hola__["a" /* HolaPage */], { carro: carro, bol: bol }); //     
    };
    TaxisPage.prototype.guardar6 = function (carro) {
        console.log(carro);
        var bol = false;
        if (this.vadmin) {
            bol = true;
        }
        else {
            bol = false;
        }
        //    this.navCtrl.push(ContactsPage, {carro,bol });//     
    };
    TaxisPage.prototype.abrirPaginaWelcome = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_15__welcome_welcome__["a" /* WelcomePage */]); //
    };
    TaxisPage.prototype.guardar = function (carro) {
        console.log(carro);
        if (carro.lat == 0) {
            this.presentToast4('El anuncio no posee coordenadas');
        }
        else {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__home_home__["a" /* HomePage */], { carro: carro }); //
        }
    };
    TaxisPage.prototype.abrirPaginaHelp = function () {
        var res = this.auto2.btn;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__help_help__["a" /* HelpPage */], { res: res }); //
    };
    TaxisPage.prototype.abrirPaginaAdmin = function () {
        var res = this.res;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_14__admin_admin__["a" /* AdminPage */], { res: res });
    };
    TaxisPage.prototype.abrir = function () {
        this.presentToast4('Aqui se va a la página de Facebook');
        //const browser = this.iab.create('https://www.facebook.com/Mi-Mensajero-102876134757196/?view_public_for=102876134757196');
        //browser.show(), browser.close();
        //browser.insertCSS(...);
        /* browser.on('loadstop').subscribe(event => {
           browser.insertCSS({ code: "body{color: red;" });
        }); */
    };
    TaxisPage.prototype.abrirWhats = function () {
    };
    // lo nuevo
    TaxisPage.prototype.tomarID = function () {
        //this.id= "d9d58a44-08a6-df2b"  
        /*      this.uniqueDeviceID.get()
            .then((uuid: any) => this.id = uuid.substring(0,6))
            .catch((error: any) => console.log(error));  */
        this.id = this.device.uuid.substring(0, 6);
        this.global.globalIdt = this.id;
        console.log("id: " + this.id);
        if (this.id == "000000") {
            this.global.global2 = true;
        }
        else {
            this.global.global2 = false;
            if (!this.existetel) {
                //this.connected=false
                //this.ionViewDidLoad()
                if (!this.cargando) {
                    this.cargarTaxisDisponibles();
                }
            }
        }
    };
    TaxisPage.prototype.verMensajesPendientes = function () {
        var _this = this;
        // this.loadingService.presentLoading()
        this.gasolineraService.getMensajesNegoTaxPend(this.auto2.id).subscribe(function (response) {
            _this.users3 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (!carro.apr && !carro.cam) {
                    // this.porciento=+(this.porciento+ parseFloat(carro.mensajeprincipal)).toFixed(2)
                    if (!carro.can) {
                        //this.playAudio2()  
                        _this.singlenotification();
                    }
                }
            }
            // this.total=+(this.porciento*10).toFixed(2)
            // this.loadingService.dismissLoading();
        }, function (error) {
            //  this.loadingService.presentError();
            //   this.loadingService.dismissLoading();
        });
    };
    TaxisPage.prototype.startBackgroundGeolocation2 = function () {
        var _this = this;
        var cont = 0;
        var config = {
            desiredAccuracy: 10,
            stationaryRadius: 20,
            distanceFilter: 0.5,
            debug: true,
            stopOnTerminate: false,
            notificationTitle: "Todo Taxi",
            startForeground: true,
            interval: 3000,
        };
        this.backgroundGeolocation.configure(config).then(function () {
            _this.backgroundGeolocation.on(__WEBPACK_IMPORTED_MODULE_9__ionic_native_background_geolocation__["b" /* BackgroundGeolocationEvents */].location)
                .subscribe(function (location) {
                console.log(location);
                _this.latnego = location.latitude; //.06974254 servicentro de tarara
                _this.lngnego = location.longitude; //.46458121   
                //  this.playAudio()                                                 
                _this.verMensajesPendientes();
            });
            //para si esta estacionario
            //para si esta en el backgroud
        });
        // start recording location
        this.backgroundGeolocation.start();
    };
    TaxisPage.prototype.startBackgroundGeolocation = function () {
        var _this = this;
        this.geoLocation.getCurrentPosition().then(function (resp) {
            if (_this.onlyone) {
                _this.onlyone = false;
            }
            // tomar el centro
            // this.map.getCenter()
            if (_this.marker3) {
                _this.destino3 = _this.marker3.getLatLng();
            }
            if (_this.markergps) {
                _this.markergps.removeFrom(_this.map);
            }
            var icon = L.divIcon({
                className: 'custom-div-icon',
                html: "<div   id='custom-overlay' ><div class='flb3'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle3'><div class='green-scanner3'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>",
                // html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>weekend</i>",
                iconSize: [30, 30],
                iconAnchor: [9, 16]
            });
            var greenIcon = new L.Icon({
                // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                iconSize: [30, 40],
                iconAnchor: [15, 37],
            });
            _this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: false, icon: icon });
            // create popup contents
            var customPopup = "<b>Mi posición</b><br/>";
            // specify popup options 
            var customOptions = {
                //'maxWidth': '400',
                //'width': '200',
                offset: [0, -30]
            };
            // create popup contents
            _this.markergps.addTo(_this.map);
            // this.markergps.bindPopup(customPopup).openPopup(); 
            //  this.markergps.bindPopup(customPopup);  
            //  this.presentToast4("funcion buscar coordenadas")
            _this.cd.detectChanges();
        }).catch(function (error) {
            //  this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            // this.map.flyTo([23.113592,-82.366592], 15);
        });
    };
    TaxisPage.prototype.presentToast = function () {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: 'Transmitiendo sus datos a los clientes ',
                            duration: 2000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 3000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.presentToast5 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 10000,
                            position: 'middle',
                            cssClass: 'custom-class'
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.libre = function () {
        this.vestado = true;
        //this.sendGPS(this.location2)
        this.presentToast2('LIBRE');
    };
    TaxisPage.prototype.ocupado = function () {
        this.vestado = "OCU";
        //this.sendGPS(this.location2)
        this.presentToast2('OCUPADO');
    };
    TaxisPage.prototype.descansando = function () {
        var _this = this;
        this.vestado = false;
        // this.sendGPS(this.location2)
        //Actualizar el GPS del Taxista
        var i = {
            "id": this.vclaveprimaria,
            //"idt":"d9999a",
            //"nam":"Alexander",
            // "lat":location.latitude,//.06974254 servicentro de tarara
            // "lng":location.longitude,//.46458121
            "est": this.vestado,
        };
        this.gasolineraService.updateTaxisGps(i) //api
            .then(function (result) {
            console.log(result);
            if (result['hello']) {
                _this.presentToast4('Negocio Cerrado');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
        // this.presentToast3()
    };
    TaxisPage.prototype.trabajando = function () {
        var _this = this;
        this.vestado = true;
        // this.sendGPS(this.location2)
        //Actualizar el GPS del Taxista
        var i = {
            "id": this.vclaveprimaria,
            "est": this.vestado,
        };
        this.gasolineraService.updateTaxisGps(i) //api
            .then(function (result) {
            console.log(result);
            if (result['hello']) {
                _this.presentToast4('Negocio Abierto');
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
        this.startTimer2();
    };
    TaxisPage.prototype.segmentChanged = function (ev) {
        console.log('Segment changed', ev);
        //this.toast=ev
        this.presentToast2(this.toast = ev);
    };
    TaxisPage.prototype.presentToast2 = function (ev) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: 'APARECERÁ EN EL MAPA DE LOS TAXIS ' + ev,
                            duration: 2000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.presentToast3 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: 'REVISE SI ESTÁ CERRADO EN EL MAPA',
                            duration: 2000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.presentToast6 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: 'REVISE SI ESTÁ ABIERTO EN EL MAPA ',
                            duration: 2000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    //poner o quitar servicio de taxis   
    TaxisPage.prototype.updateItem3 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '<br>¿Usted va a eliminar el servicio de Taxis en la App?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": _this.vclaveprimaria,
                                            "btn": false // la tarifa
                                            // "created_at":"2019-11-30 00:02:10",
                                            // "updated_at":"2019-11-30 00:02:10"           
                                        };
                                        var result = _this.gasolineraService.updateTaxis3(i); //api
                                        console.log("tarifas modificadas:" + JSON.stringify(i));
                                        _this.prev();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //poner o quitar servicio de taxis   
    TaxisPage.prototype.updateItem6 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '<br>¿Usted va a eliminar el pago con USD/EUR?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": _this.vclaveprimaria,
                                            "div": false // la tarifa
                                            // "created_at":"2019-11-30 00:02:10",
                                            // "updated_at":"2019-11-30 00:02:10"           
                                        };
                                        var result = _this.gasolineraService.updateTaxis5(i); //api
                                        console.log("tarifas modificadas:" + JSON.stringify(i));
                                        _this.prev();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //poner o quitar servicio de taxis   
    TaxisPage.prototype.updateItem7 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '<br>¿Usted va a Poner el pago con USD/EUR en la App?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": _this.vclaveprimaria,
                                            "div": true // la tarifa
                                            // "created_at":"2019-11-30 00:02:10",
                                            // "updated_at":"2019-11-30 00:02:10"           
                                        };
                                        var result = _this.gasolineraService.updateTaxis5(i); //api
                                        console.log("tarifas modificadas:" + JSON.stringify(i));
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //poner o quitar servicio de taxis   
    TaxisPage.prototype.updateItem8 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '<br>¿Usted va a Aceptar el pedido?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": carro.id,
                                            "idtm": _this.auto.idt // la tarifa
                                            // "created_at":"2019-11-30 00:02:10",
                                            // "updated_at":"2019-11-30 00:02:10"           
                                        };
                                        // let result = this.gasolineraService.updateTaxis3(i);//api
                                        // metodo del servicio que envia los datos
                                        _this.gasolineraService.createMensajero(i)
                                            .then(function (result) {
                                            // console.log(result);
                                            if (result['hello']) {
                                                _this.presentToast4('Pedido Tomado por usted');
                                            }
                                            else {
                                                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                                            }
                                        }, function (err) {
                                            console.log(err);
                                            _this.presentToast4('Ha ocurrido un error');
                                        });
                                        console.log("tarifas modificadas:" + JSON.stringify(i));
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    // actualizacion por parte del administrador para aprovar o desaprovar a un taxista
    TaxisPage.prototype.updateItemAdmin = function (carro) {
        var i = {
            "id": carro.id,
            //"idt":"d9999a",
            //"nam":"Alexander",
            //"lat":"23.06974254",//.06974254
            //"lng":"-82.46458121",//.46458121
            //"est":this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            "apr": this.aprov,
        };
        var result = this.gasolineraService.updateTaxisAdmin(i); //api
        console.log(result);
    };
    // actualizacion por parte del administrador para aprovar o desaprovar a un taxista
    TaxisPage.prototype.updateItemAdmin2 = function (carro) {
        var i = {
            "id": carro.id,
            //"idt":"d9999a",
            //"nam":"Alexander",
            //"lat":"23.06974254",//.06974254
            //"lng":"-82.46458121",//.46458121
            //"est":this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            "apr": this.aprov,
        };
        var result = this.gasolineraService.updatePersonAdmin(i); //api
        console.log(result);
    };
    // actualizacion por parte del administrador
    // borra a un taxista
    TaxisPage.prototype.deleteItem = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: 'Oprima Si, si desea eliminar al usuario.</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    cssClass: this.tipo_taxi !== 1 ? 'secondaryColor' : 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": carro.id,
                                        };
                                        var result = _this.gasolineraService.delete(i);
                                        //let index = this.datasource.source.indexOf(item);
                                        //this.datasource.source.splice(index,1);
                                        console.log(result);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.inscripcion2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: 'Debe inscribirse para acceder a esta funcionalidad. Oprima Si, si desea ir al menú de inscripción.</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    cssClass: this.tipo_taxi !== 1 ? 'secondaryColor' : 'primaryColor',
                                    handler: function () {
                                        //  this.vista='lista'
                                        // this.pageScrollers1()
                                        //let index = this.datasource.source.indexOf(item);
                                        //this.datasource.source.splice(index,1);
                                        _this.detallesp();
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //busca al taxista a partir del id en la tabla 
    TaxisPage.prototype.getDataUser = function (carro) {
        var _this = this;
        this.loadingService.presentLoading();
        this.gasolineraService.getDataUser(carro.id).subscribe(function (response) {
            //this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.resultado = carro.id; // response.nam
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    //para buscar persona especifico
    TaxisPage.prototype.getDataUserPer = function () {
        var _this = this;
        //this.loadingService.presentLoading();
        if (!this.estaxista) {
            this.buscaper2 = false;
            this.gasolineraService.getDataPersona(this.id).subscribe(function (response) {
                _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    if (_this.id == carro.idt) {
                        if (carro.pri) {
                            _this.contadorid = carro.id;
                            _this.resultado = carro.nam;
                            _this.existetel = true; //para transmitir los datos y cambiar de vista
                            _this.global.global1 = true;
                            _this.vclaveprimaria = carro.id;
                            _this.vnombre = carro.nam;
                            _this.vtelefono = carro.tel;
                            // this.vchapa=response.cha
                            // this.vmodelo=response.mod
                            _this.vcorreo = carro.cor;
                            _this.vedad = carro.eda;
                            _this.estaxista = false; // true si el usuario es taxista
                            _this.esdemo = carro.dem; // true cuando deja de estar en demo
                            _this.aprovado = carro.apr;
                            _this.vinicio = carro.ini;
                            _this.vfechapago = carro.ven;
                            _this.buscaper = true;
                        }
                    }
                }
                //  this.loadingService.dismissLoading();
            }, function (error) {
                _this.loadingService.presentError();
                _this.loadingService.dismissLoading();
            });
        }
        console.log(this.resultado);
    };
    //para buscar todas las personas
    TaxisPage.prototype.getDataUserPersonas = function () {
        var _this = this;
        //this.loadingService.presentLoading();
        this.buscaper2 = false;
        this.gasolineraService.getDataPersonas().subscribe(function (response) {
            _this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            //  this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    // borra a una persona
    TaxisPage.prototype.deleteItem2 = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: 'Oprima Si, si desea eliminar a su usuario.</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    cssClass: this.tipo_taxi !== 1 ? 'secondaryColor' : 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": carro.id,
                                        };
                                        var result = _this.gasolineraService.deleteperso(i);
                                        //let index = this.datasource.source.indexOf(item);
                                        //this.datasource.source.splice(index,1);
                                        console.log(result);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.fijapos2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>¡Información!</strong>",
                            message: '¿Usted va a situar al negocio en este lugar en el Mapa?</br>',
                            buttons: [
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Si',
                                    cssClass: this.tipo_taxi !== 1 ? 'secondaryColor' : 'primaryColor',
                                    handler: function () {
                                        var i = {
                                            "id": _this.vclaveprimaria,
                                            //"idt":"d9999a",
                                            //"nam":"Alexander",
                                            "lat": _this.latnego,
                                            "lng": _this.lngnego,
                                        };
                                        var result = _this.gasolineraService.updateTaxisGpsNego(i); //api
                                        console.log(result);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.fijapos = function () {
        if (this.estaxista) {
            // this.presentToast4('Usted es el administrador del negocio ');
            this.fijapos2();
        }
        else {
        }
    };
    TaxisPage.prototype.myAlert_show4 = function (tipo, costo) {
        var _this = this;
        if (this.existetel) {
            var monedas = [
                {
                    "nam": "MLC",
                    "val": (this.costoviaje / this.mlc).toFixed(2),
                    "flag": "mlc"
                },
                {
                    "nam": "USD",
                    "val": (this.costoviaje / this.usd).toFixed(2),
                    "flag": "us"
                },
                {
                    "nam": "EUR",
                    "val": (this.costoviaje / this.eur).toFixed(2),
                    "flag": "eu"
                },
                {
                    "nam": "RUB",
                    "val": (this.costoviaje / this.rub).toFixed(2),
                    "flag": "ru"
                }
            ];
            var carro = this.auto2;
            var comp = this.auto;
            console.log("carro: " + JSON.stringify(carro));
            console.log("comp: " + JSON.stringify(comp));
            var nego = +(this.user.parametros.parametros.porciento);
            var porc = +(((costo * nego) / 100).toFixed(2));
            var vehiculo = "";
            var pasajeros = this.nombrenegocio;
            switch (tipo) {
                case "1":
                    vehiculo = "Moto";
                    // pasajeros="1"
                    break;
                case "2":
                    vehiculo = "Básico";
                    // pasajeros="4"
                    break;
                case "3":
                    vehiculo = "Confort";
                    // pasajeros="4"
                    break;
                case "4":
                    vehiculo = "Minivan";
                    // pasajeros="7"
                    break;
                default:
            }
            var res = false;
            if (this.reservar) {
                res = true;
            }
            // new json
            var i = {
                "tip": tipo,
                "est": "1",
                "idch": "1",
                "idcl": this.user.idcopia,
                "total": costo,
                "porc": porc,
                "prov": true,
                "acept": false,
                "reserva": res,
                "dat": {
                    "id": this.user.idcopia,
                    "nom": this.user.nam,
                    "ven": this.user.parametros.parametros.nam,
                    "porc": porc,
                    "envio": costo,
                    "total": costo + " CUP",
                    "moneda": "cupflag",
                    "telneg": this.user.parametros.parametros.tel,
                    "curPosLat": this.origen.lat,
                    "curPosLng": this.origen.lng,
                    "origename": this.origename,
                    "telpedido": this.user.tel,
                    "negoPosLat": this.destino.lat,
                    "negoPosLng": this.destino.lng,
                    "destinoname": this.destinoname,
                    "dia_recogida": this.myDate1,
                    "hora_recogida": this.myDate2,
                },
                "prd": {
                    // "dia": "3 9",
                    // "hora": "21:39", 
                    "otros": "vacío",
                    "animales": this.mascota,
                    "equipaje": this.equipaje,
                    "vehiculo": vehiculo,
                    "pasajeros": pasajeros
                },
                "vis": monedas
            };
            console.log("origename: " + this.origename);
            console.log("curPosLat: " + this.origen.lat);
            console.log("curPosLng: " + this.origen.lng);
            console.log("destinoname: " + this.destinoname);
            console.log("negoPosLat: " + this.destino.lat);
            console.log("negoPosLng: " + this.destino.lng);
            console.log("i: " + JSON.stringify(i));
            console.log("id: " + JSON.stringify(this.user.idcopia));
            // this.navCtrl.push(GasolinasPage , {carro, comp,tip, ruta, total, origen, destino, mascota,equipaje, tipoauto, tabla, origename, destinoname, callback: this.myCallbackFunction2  });//
            this.gasolineraService.createOrder(i).then(function (result) {
                // console.log(result);
                // let user = JSON.parse(result[0])
                // console.log("user : "+user);
                if (result[0].idcl == _this.user.idcopia) {
                    _this.idped = result[0];
                    _this.clientenuevo = true;
                    // this.presentToast4('Gracias por inscribirse ' + this.idped.id); 
                    // console.log("rx: "+ this.idped) 
                    // this.revisar2()
                    _this.origename2 = _this.origename;
                    _this.destinoname2 = _this.destinoname;
                    _this.costoviaje = costo;
                    // this.dat = this.dataFromOtherPage3.dat
                    _this.aceptado = true;
                    _this.getTrabajando();
                    _this.delTax();
                    _this.vistos();
                    _this.startTimer(); //api para revisar el pedido
                    if (_this.mascota) {
                        _this.presentToast4("Si viaja con mascotas, el precio puede aumentar.");
                    }
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
        else {
            // mostra menu para ir a la pagina de inscripcion
            this.inscripcion2();
        }
    };
    TaxisPage.prototype.myAlert_show3 = function (tipo, costo) {
        var _this = this;
        if (this.existetel) {
            var monedas = [
                {
                    "nam": "MLC",
                    "val": (this.costoviaje / this.mlc).toFixed(2),
                    "flag": "mlc"
                },
                {
                    "nam": "USD",
                    "val": (this.costoviaje / this.usd).toFixed(2),
                    "flag": "us"
                },
                {
                    "nam": "EUR",
                    "val": (this.costoviaje / this.eur).toFixed(2),
                    "flag": "eu"
                },
                {
                    "nam": "RUB",
                    "val": (this.costoviaje / this.rub).toFixed(2),
                    "flag": "ru"
                }
            ];
            var carro = this.auto2;
            var comp = this.auto;
            console.log("carro: " + JSON.stringify(carro));
            console.log("comp: " + JSON.stringify(comp));
            var nego = +(this.user.parametros.parametros.porciento);
            var porc = +(((costo * nego) / 100).toFixed(2));
            var vehiculo = "";
            var pasajeros = this.nombrenegocio;
            switch (tipo) {
                case "1":
                    vehiculo = "Moto";
                    // pasajeros="1"
                    break;
                case "2":
                    vehiculo = "Básico";
                    // pasajeros="4"
                    break;
                case "3":
                    vehiculo = "Confort";
                    // pasajeros="4"
                    break;
                case "4":
                    vehiculo = "Minivan";
                    // pasajeros="7"
                    break;
                default:
            }
            // new json
            var i = {
                "tip": tipo,
                "est": "1",
                "idch": "1",
                "idcl": this.user.idcopia,
                "total": costo,
                "porc": porc,
                "prov": false,
                "acept": false,
                "dat": {
                    "id": this.user.idcopia,
                    "nom": this.user.nam,
                    "ven": this.user.parametros.parametros.nam,
                    "porc": porc,
                    "envio": costo,
                    "total": costo + " CUP",
                    "moneda": "cupflag",
                    "telneg": this.user.parametros.parametros.tel,
                    "curPosLat": this.origen.lat,
                    "curPosLng": this.origen.lng,
                    "origename": this.origename,
                    "telpedido": this.user.tel,
                    "negoPosLat": this.destino.lat,
                    "negoPosLng": this.destino.lng,
                    "destinoname": this.destinoname
                },
                "prd": {
                    // "dia": "3 9",
                    // "hora": "21:39", 
                    "otros": "vacío",
                    "animales": this.mascota,
                    "equipaje": this.equipaje,
                    "vehiculo": vehiculo,
                    "pasajeros": pasajeros
                },
                "vis": monedas
            };
            console.log("origename: " + this.origename);
            console.log("curPosLat: " + this.origen.lat);
            console.log("curPosLng: " + this.origen.lng);
            console.log("destinoname: " + this.destinoname);
            console.log("negoPosLat: " + this.destino.lat);
            console.log("negoPosLng: " + this.destino.lng);
            console.log("i: " + JSON.stringify(i));
            console.log("id: " + JSON.stringify(this.user.idcopia));
            // this.navCtrl.push(GasolinasPage , {carro, comp,tip, ruta, total, origen, destino, mascota,equipaje, tipoauto, tabla, origename, destinoname, callback: this.myCallbackFunction2  });//
            this.gasolineraService.createOrder(i).then(function (result) {
                // console.log(result);
                // let user = JSON.parse(result[0])
                // console.log("user : "+user);
                if (result[0].idcl == _this.user.idcopia) {
                    _this.idped = result[0];
                    _this.clientenuevo = true;
                    // this.presentToast4('Gracias por inscribirse ' + this.idped.id); 
                    // console.log("rx: "+ this.idped) 
                    // this.revisar2()
                    _this.origename2 = _this.origename;
                    _this.destinoname2 = _this.destinoname;
                    _this.costoviaje = costo;
                    // this.dat = this.dataFromOtherPage3.dat
                    _this.aceptado = true;
                    _this.getTrabajando();
                    _this.delTax();
                    _this.vistos();
                    _this.startTimer(); //api para revisar el pedido
                    if (_this.mascota) {
                        _this.presentToast4("Si viaja con mascotas, el precio puede aumentar.");
                    }
                }
                else {
                    _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
                }
            }, function (err) {
                console.log(err);
            });
        }
        else {
            // mostra menu para ir a la pagina de inscripcion
            this.inscripcion2();
        }
        //parte antigua que busca los taxis
        /*
                  if (this.marker) { // Borra el marcador del gps verde de la calculadora
                    this.marker.removeFrom(this.map);
                      }
                if(this.hayLinea){ // Borra la linea verde del calculo de la distancia
                      this.map.removeLayer(this.polyline);
                    }
        
                  this.loadingService.presentLoading();
                    this.gasolineraService.getDataNegocio(5).subscribe(
                      (response: any)=>{
                        this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                        this.carros = response;
                        console.log(response.length);
                        if(response.length==0){
                          this.mensajelista=true
                        }else{
                          this.mensajelista=false
                        }
             
                          this.posicionarPersonEnMapa3();
                      this.loadingService.dismissLoading();
                      
                      },
                      (error) => {
                        this.buscaper2=false
                        this.loadingService.presentError();
                        this.loadingService.dismissLoading();
                      }
                    )
                     */
    };
    TaxisPage.prototype.myAlert_show2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: 'Búsqueda',
                            // subTitle: 'Alert subtitle...',
                            enableBackdropDismiss: true,
                            message: 'Seleccione una provincia ',
                            buttons: [
                                {
                                    text: 'ACEPTAR',
                                    handler: function (data) {
                                        // console.log('OK clicked. Data -> ' + JSON.stringify(data));
                                        // this.presentToast4('OK clicked. Data -> ' + JSON.stringify(data)); 
                                        /*
                                                if (this.marker) { // Borra el marcador del gps verde de la calculadora
                                                  this.marker.removeFrom(this.map);
                                                    }
                                              if(this.hayLinea){ // Borra la linea verde del calculo de la distancia
                                                    this.map.removeLayer(this.polyline);
                                                  }
                                        
                                                 this.loadingService.presentLoading();
                                                  this.gasolineraService.getDataNegocio(data).subscribe(
                                                    (response: any)=>{
                                                      this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                                      this.carros = response;
                                                      console.log(response.length);
                                                      if(response.length==0){
                                                        this.mensajelista=true
                                                      }else{
                                                        this.mensajelista=false
                                                      }
                                                      
                                                     this.posicionarPersonEnMapa2();
                                                     this.loadingService.dismissLoading();
                                                     
                                                    },
                                                    (error) => {
                                                      this.buscaper2=false
                                                      this.loadingService.presentError();
                                                      this.loadingService.dismissLoading();
                                                    }
                                                  )
                                         */
                                        switch (data) {
                                            case "1":
                                                // Pinar del rio
                                                _this.map.setView([22.41667, -83.83333], 11);
                                                break;
                                            case "2":
                                                // Artemisa
                                                _this.map.setView([22.81667, -82.76667], 11);
                                                break;
                                            case "3":
                                                // La Habana
                                                _this.map.setView([23.08333, -82.3], 11);
                                                break;
                                            case "4":
                                                // Mayabeque (san jose de las lajas)
                                                _this.map.setView([22.96667, -82.15], 11);
                                                break;
                                            case "5":
                                                // Matanzas 
                                                _this.map.setView([22.66667, -81.16667], 10);
                                                break;
                                            case "6":
                                                // Cienfuegos
                                                _this.map.setView([22.26667, -80.45], 11);
                                                break;
                                            case "7":
                                                // Villa Clara
                                                _this.map.setView([22.4, -79.96667], 11);
                                                break;
                                            case "8":
                                                // Sancti Spíritus
                                                _this.map.setView([21.93333, -79.43333], 11);
                                                break;
                                            case "9":
                                                // Ciego de Ávila
                                                _this.map.setView([21.96667, -78.63333], 11);
                                                break;
                                            case "10":
                                                // Camaguey
                                                _this.map.setView([21.35, -77.85], 11);
                                                break;
                                            case "11":
                                                // Las Tunas
                                                _this.map.setView([20.96667, -76.95], 11);
                                                break;
                                            case "12":
                                                // Granma
                                                _this.map.setView([20.28333, -76.86667], 11);
                                                break;
                                            case "13":
                                                // Holguin
                                                _this.map.setView([20.88333, -76.25], 11);
                                                break;
                                            case "14":
                                                // Santiago de Cuba
                                                _this.map.setView([20.01667, -75.81667], 11);
                                                break;
                                            case "15":
                                                // Guantanamo
                                                _this.map.setView([20.15, -75.2], 11);
                                                break;
                                            case "16":
                                                // La Isla
                                                _this.map.setView([21.7, -82.81667], 11);
                                                break;
                                            default:
                                        }
                                    },
                                    role: ''
                                },
                                {
                                    text: 'CANCELAR',
                                    handler: function (data) {
                                        // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                        // this.presentToast4('Abbrechen clicked. Data -> ' + JSON.stringify(data)); 
                                    },
                                    role: 'cancel'
                                }
                            ],
                            inputs: [
                                {
                                    type: 'radio',
                                    id: 'opt1',
                                    name: 'opt1',
                                    'label': ' Pinar del Río',
                                    value: '1',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt2',
                                    name: 'opt2',
                                    'label': '	Artemisa ',
                                    value: '2',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt3',
                                    name: 'opt3',
                                    'label': '	La Habana',
                                    value: '3',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt4',
                                    name: 'opt4',
                                    'label': '	Mayabeque',
                                    value: '4',
                                    'checked': false
                                }, {
                                    type: 'radio',
                                    id: 'opt5',
                                    name: 'opt5',
                                    'label': '	Matanzas',
                                    value: '5',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt6',
                                    name: 'opt6',
                                    'label': '	Cienfuegos',
                                    value: '6',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt7',
                                    name: 'opt7',
                                    'label': '	Villa Clara',
                                    value: '7',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt8',
                                    name: 'opt8',
                                    'label': '	Sancti Spíritus',
                                    value: '8',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt9',
                                    name: 'opt9',
                                    'label': '	Ciego de Ávila ',
                                    value: '9',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt10',
                                    name: 'opt10',
                                    'label': '	Camagüey',
                                    value: '10',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt11',
                                    name: 'opt11',
                                    'label': '	Las Tunas',
                                    value: '11',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt12',
                                    name: 'opt12',
                                    'label': '	Granma',
                                    value: '12',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt13',
                                    name: 'opt13',
                                    'label': '	Holguín',
                                    value: '13',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt14',
                                    name: 'opt14',
                                    'label': '	Santiago de Cuba',
                                    value: '14',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt15',
                                    name: 'opt15',
                                    'label': '	Guantánamo',
                                    value: '15',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt16',
                                    name: 'opt16',
                                    'label': '	La Isla',
                                    value: '16',
                                    'checked': false
                                },
                            ]
                        })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.buscarcel = function (carro) {
        var _this = this;
        //quitar marcador verde
        if (this.marker) {
            this.marker.removeFrom(this.map);
        }
        //this.openDialogo3()
        //busca el id del telefono en la tabla taxista 
        console.log("mensajero idt: " + carro.idtm);
        this.loadingService.presentLoading();
        this.gasolineraService.getDataUserTax(carro.idtm).subscribe(function (response) {
            _this.users = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log("mensajero: " + _this.users);
            for (var _i = 0, _a = _this.users; _i < _a.length; _i++) {
                var carro_1 = _a[_i];
                if (carro_1.est) {
                    _this.mensa = carro_1;
                }
            }
            console.log("mensajero: " + _this.mensa.nam);
            //setview
            _this.iralmapa2(_this.mensa);
            //this.map.setView([carro.lat, carro.lng ], 15);
            //remueve todos los marcadores y pone solo a la persona
            /*    var flagMarker = L.icon({
                 iconUrl: 'assets/libs/leaflet/images/marker-taxi-rojo.png',
                 iconSize: [40, 40], // size of the icon
               });
               this.posicionarPersonEnMapa(flagMarker,false); */
            _this.loadingService.dismissLoading();
            //this.getDataUserTax() // para volver a cargar los datos del usuario en Verse en el Mapa
        }, function (error) {
            //this.buscaper2=false
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
    };
    //Dialogo para el inicio de la pagina
    TaxisPage.prototype.openDialogo3 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.origename = this.selectedAddress2;
                        return [4 /*yield*/, this.alertController.create({
                                //subTitle: "<strong>Pasos:</strong>",
                                message: 'Mueva el mapa hasta que el marcador verde esté en el Destino del viaje, luego oprima el botón de abajo que dice <strong>Destino</strong>.</br>  '
                                    + '</br>Nota:</br> También puede escribir el nombre del lugar o la calle en la barra de direcciones. ',
                                buttons: [
                                    {
                                        text: 'Aceptar',
                                        role: 'cancel',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.prev = function () {
        this.slides.slidePrev();
        this.pageScrollers1();
    };
    TaxisPage.prototype.goToSlide1 = function () {
        this.slides.slideTo(0, 500);
    };
    TaxisPage.prototype.goToSlide2 = function () {
        this.slides.slideTo(1, 500);
    };
    TaxisPage.prototype.goToSlide3 = function () {
        this.slides.slideTo(2, 500);
    };
    TaxisPage.prototype.goToSlide4 = function () {
        this.slides.slideTo(3, 500);
    };
    TaxisPage.prototype.goToSlide5 = function () {
        this.slides.slideTo(4, 500);
    };
    TaxisPage.prototype.desaprovado = function () {
        this.aprov = false;
    };
    TaxisPage.prototype.aprova = function () {
        this.aprov = true;
    };
    ////////////////////// codigo que no se usa  /////////////////
    //para buscar taxista especifico
    TaxisPage.prototype.iralmapa = function (carro) {
        this.vista = 'mapa';
        this.map.setView([carro.lat, carro.lng], 15);
        /*
        if (this.markers) { // Borra todos los marcadores de los negocios
          for (let marker of this.markers) {
            marker.removeFrom(this.map);
          }
        }
  
          if(this.hayLinea){ // Borra la linea verde del calculo de la distancia
                this.map.removeLayer(this.polyline);
              } */
        if (this.marker) {
            this.marker.removeFrom(this.map);
        }
        //pone el marcador verde 
        var greenIcon = new L.Icon({
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
            // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 55],
            popupAnchor: [1, -34],
        });
        this.marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: greenIcon });
        this.marker.addTo(this.map);
        /*     if(carro.tax){
              //poner icono de negocio en el lugar
              var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                iconSize: [40, 40], // size of the icon
              });
    
            }else{
              //poner icono de mensajero en el lugar
              //taxi motico o persona person
              var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/person.ico', // cambiado
                iconSize: [32, 32], // size of the icon
              });
            }
       
            var marker = L.marker([carro.lat, carro.lng], {draggable: false, icon: flagMarker, riseOnHover:true});
            this.markers.push(marker);
            marker.on('dblclick', () => {
              this.abrirDetallesCarro(carro)
            });
            marker.bindPopup(carro.nam +" (Dos toques rápidos para ver detalles)").openPopup();
            marker.addTo(this.map);
         */
        this.map.setView([carro.lat, carro.lng], 15);
    };
    TaxisPage.prototype.iralmapa2 = function (carro) {
        this.vista = 'mapa';
        this.map.setView([carro.lat, carro.lng], 15);
    };
    //para buscar taxista especifico
    TaxisPage.prototype.getDataUserTax = function () {
        var _this = this;
        // this.loadingService.presentLoading();
        this.buscaper2 = false;
        this.gasolineraService.getDataUserTax(this.id).subscribe(function (response) {
            _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (_this.id == carro.idt) {
                    _this.auto = carro;
                    _this.existetel = true; //para transmitir los datos y cambiar de vista
                    _this.global.global1 = true;
                    _this.vclaveprimaria = carro.id;
                    _this.vnombre = carro.nam;
                    _this.vtelefono = carro.tel;
                    _this.vchapa = carro.cha;
                    _this.vmodelo = carro.mod;
                    _this.vcorreo = carro.cor;
                    _this.vedad = carro.eda;
                    _this.vtarifa = carro.tar;
                    _this.estaxista = true; // true si el usuario es taxista
                    _this.esdemo = carro.dem; // true cuando deja de estar en demo
                    _this.aprovado = carro.apr;
                    _this.vinicio = carro.created_at;
                    _this.vfechapago = carro.ven;
                }
                else {
                    //this.existetel=false
                }
            }
            if (!_this.existetel) {
                //busca en la tabla persona
                _this.loadingService.dismissLoading();
                // this.getDataUserPer()
                _this.buscaper2 = false;
                _this.gasolineraService.getDataPersona(_this.id).subscribe(function (response) {
                    _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                    for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                        var carro = _a[_i];
                        if (_this.id == carro.idt) {
                            _this.resultado = carro.nam;
                            _this.existetel = true; //para transmitir los datos y cambiar de vista
                            _this.global.global1 = true;
                            _this.vclaveprimaria = carro.id;
                            _this.vnombre = carro.nam;
                            _this.vtelefono = carro.tel;
                            // this.vchapa=response.cha
                            // this.vmodelo=response.mod
                            _this.vcorreo = carro.cor;
                            _this.vedad = carro.eda;
                            _this.estaxista = false; // true si el usuario es taxista
                            _this.esdemo = carro.dem; // true cuando deja de estar en demo
                            _this.aprovado = carro.apr;
                            _this.vinicio = carro.ini;
                            _this.vfechapago = carro.ven;
                            _this.buscaper = true;
                            _this.buscaper2 = true;
                        }
                    }
                    //  this.loadingService.dismissLoading();
                }, function (error) {
                    _this.loadingService.presentError();
                    _this.loadingService.dismissLoading();
                });
            }
            //  this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        console.log(this.resultado);
    };
    TaxisPage.prototype.sendGPS = function (location) {
        var _this = this;
        if (location.speed == undefined) {
            location.speed = 0;
        }
        var timestamp = new Date(location.time);
        this.http
            .post(this.gps_update_link, // backend api to post
        {
            Id: this.id,
            Vel: location.speed,
            Lng: location.longitude,
            Lat: location.latitude,
            Est: this.vestado,
            Hor: timestamp
        }, {})
            .then(function (data) {
            console.log("POST Request is successful ", data);
            _this.backgroundGeolocation.finish(); // FOR IOS ONLY
            // BackgroundGeolocation.endTask(taskKey);
        })
            .catch(function (error) {
            _this.backgroundGeolocation.finish(); // FOR IOS ONLY
            console.log(error);
        });
    };
    //pruebas despues se quita
    TaxisPage.prototype.updateItemGps = function () {
        var i = {
            "id": this.vclaveprimaria,
            //"idt":"d9999a",
            //"nam":"Alexander",
            "lat": "23.07074254",
            "lng": "-82.47458121",
            "est": this.vestado,
            //"cha":"1234",
            //"mod":"1234",
            //"tel":"5555555",
            //"cor":"asasa@sas.com",
            // "eda":"18",
            //"lla":0,
            "apr": this.aprovado,
            //"ini":"2019-11-30 00:02:10",
            //"ven":"2019-11-30 00:02:10",
            //"tax":false,
            "dem": this.esdemo,
        };
        var result = this.gasolineraService.updatePersonaGps(i); //api
        console.log(result);
    };
    TaxisPage.prototype.getMisPost = function () {
        var _this = this;
        this.loadingService.presentLoading();
        //this.buscaper2=false
        this.gasolineraService.getDataOferta(this.id).subscribe(function (response) {
            _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.esperando = true;
            for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                var carro = _a[_i];
                //para si es administrador poner los id de los anuncios
                //    if(this.id==carro.ini){
                //      this.admin=true
                //  }
                if (_this.id == carro.idt) {
                    // this.presentToast4('SI existe el usuario persona.'); 
                    _this.estaxista = false; // para dejar poner la vista de los post del usuario especifico
                    _this.existetel2 = false; //para no buscar en la tablataxista al idt
                    _this.existetel = true; // para poder escribir anuncio y no mostrar el formulario de inscripcion
                    _this.global.global1 = true;
                    //this.auto=carro 
                    if (carro.det) {
                        _this.aprovado = true;
                    }
                    _this.contadorid = carro.id;
                    _this.vnombre = carro.nam;
                    _this.vtelefono = carro.tel;
                    _this.vcorreo = carro.cor;
                    _this.vedad = carro.eda;
                }
            }
            // si no existe el usuario en la tabla persona, buscar el idt en la tabla taxista para cargar los datos
            if (_this.existetel2) {
                // this.presentToast4('No existe el usuario persona.');
                _this.gasolineraService.getDataUserTax(_this.id).subscribe(function (response) {
                    _this.users2 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
                    for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                        var carro = _a[_i];
                        if (_this.id == carro.idt) {
                            _this.estaxista = true; // Para no mostrar el primer post que sale en blanco por que los datos se toman de la api de los taxistas           
                            _this.existetel = true; //para poder escribir anuncios y no poner el formulario de inscripcion
                            _this.global.global1 = true;
                            // this.contador=0 // para permitir hacer anuncios
                            // this.contadoranucios=6
                            //this.vclaveprimaria=carro.id 
                            _this.vnombre = carro.nam;
                            _this.vtelefono = carro.tel;
                            _this.vchapa = carro.cha;
                            _this.vmodelo = carro.mod;
                            _this.vcorreo = carro.cor;
                            _this.vedad = carro.eda;
                            // this.esdemo=carro.dem // true cuando deja de estar en demo
                            // this.aprovado=carro.apr
                            _this.vinicio = carro.created_at;
                            _this.vfechapago = carro.ven;
                            _this.vtarifa = carro.tar;
                        }
                        else {
                            //this.existetel=false
                        }
                    }
                }, function (error) {
                    _this.loadingService.presentError();
                    _this.loadingService.dismissLoading();
                });
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            //this.esperando=false
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
        });
        //console.log(this.resultado);	
        if (!this.existetel) {
            this.clientenuevo = false;
            this.esperando = true;
            this.pageScrollers1();
        }
    };
    //Dialogo para el inicio de la pagina
    TaxisPage.prototype.openDialogo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.hayLinea) {
                            //this.hayLinea--;
                            //alert(this.hayLinea);
                            this.map.removeLayer(this.polyline);
                            this.hayLinea = false;
                        }
                        this.vista = 'mapa';
                        return [4 /*yield*/, this.alertController.create({
                                //subTitle: "<strong>Pasos:</strong>",
                                //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                                // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                                // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                                message: 'Mueva el mapa hasta que el marcador verde esté en el origen del viaje, luego oprima el botón de abajo que dice <strong>Origen</strong>.  ',
                                buttons: [
                                    {
                                        text: 'Aceptar',
                                        role: 'cancel',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //Cargar taxis Ocupados
    /*  cargarMovil(){
      this.loadingService.presentLoading();
      this.gasolineraService.getDataTaxis().subscribe(
        (response: any)=>{
          this.carros = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
          var flagMarker = L.icon({
            iconUrl: 'assets/libs/leaflet/images/marker-taxi-rojo.png',
            iconSize: [40, 40], // size of the icon
          });
          this.posicionarTaxisEnMapa(flagMarker,false);
          
          this.esperando=false;//usado para comprobar la conexion a internet
           //buscar si existe el ID en el JSON
           for (let carro of this.carros) {
            if (carro.idtel==this.id) {
              this.existetel=true//para transmitir los datos
              this.vnombre=carro.name
            }else{
              this.existetel=false
            }
          }
          this.loadingService.dismissLoading();
        },
        (error) => {
          
          this.esperando=false;//usado para comprobar la conexion a internet
          this.loadingService.presentError();
          this.loadingService.dismissLoading();
        }
      )
    }  */
    TaxisPage.prototype.posicionarPersonEnMapa = function (flagMarker, flag) {
        var _this = this;
        this.vista = 'mapa';
        if (this.markers) {
            for (var _i = 0, _a = this.markers; _i < _a.length; _i++) {
                var marker_1 = _a[_i];
                marker_1.removeFrom(this.map);
            }
        }
        //flag para diferenciar entre libre y ocupado 
        if (flag) {
            //taxi amarillo
            var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',
                iconSize: [45, 45],
            });
        }
        else {
            //taxi rojo , poner una moto o un celular
            var flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/big_smile.ico',
                iconSize: [45, 45],
            });
        }
        //taxi carita sonrriente
        var flagMarker2 = L.icon({
            iconUrl: 'assets/libs/leaflet/images/big_smile.ico',
            iconSize: [45, 45],
        });
        //taxi motico
        var flagMarker3 = L.icon({
            iconUrl: 'assets/libs/leaflet/images/person.ico',
            iconSize: [40, 40],
        });
        //taxi rojo
        var flagMarker4 = L.icon({
            iconUrl: 'assets/libs/leaflet/images/marker-taxi-rojo.png',
            iconSize: [45, 45],
        });
        var _loop_3 = function (carro) {
            if (carro.pri) {
                if (!carro.apr) {
                    // if(carro.tax){
                    // se ve por es un taxista en DEMO
                    if (carro.est) {
                        //pone los carros todos en amarillo
                        if (this_2.dataFromOtherPage == null) {
                            //const posicion = carro.ultima_posicion;
                            marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker, riseOnHover: true });
                            this_2.markers.push(marker);
                            marker.on('dblclick', function () {
                                _this.abrirDetallesPerson(carro);
                            });
                            marker.bindPopup(carro.nam + " (Dos toques rápidos para ver detalles)").openPopup();
                            marker.addTo(this_2.map);
                            this_2.map.setView([carro.lat, carro.lng], 15);
                        }
                        //icono 1
                        if (this_2.dataFromOtherPage == 1) {
                            if (this_2.cambiaricono.nombre == carro.nam) {
                                //const posicion = carro.ultima_posicion;
                                marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker2, riseOnHover: true });
                                this_2.markers.push(marker);
                                marker.on('dblclick', function () {
                                    _this.abrirDetallesPerson(carro);
                                });
                                marker.bindPopup(carro.nam + " (Dos toques rápidos para ver detalles)").openPopup();
                            }
                            else {
                                // const posicion = carro.ultima_posicion;
                                marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker, riseOnHover: true });
                                this_2.markers.push(marker);
                                marker.on('dblclick', function () {
                                    _this.abrirDetallesPerson(carro);
                                });
                                marker.bindPopup(carro.nam + " (Dos toques rápidos para ver detalles)").openPopup();
                                marker.addTo(this_2.map);
                                this_2.map.setView([carro.lat, carro.lng], 15);
                            }
                            marker.addTo(this_2.map);
                            this_2.map.setView([carro.lat, carro.lng], 15);
                        }
                        //icono 2
                        if (this_2.dataFromOtherPage == 2) {
                            if (this_2.cambiaricono.nombre == carro.nam) {
                                //const posicion = carro.ultima_posicion;
                                marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker3, riseOnHover: true });
                                this_2.markers.push(marker);
                                marker.on('dblclick', function () {
                                    _this.abrirDetallesPerson(carro);
                                });
                                marker.bindPopup(carro.nam + " (Dos toques rápidos para ver detalles)").openPopup();
                            }
                            else {
                                //const posicion = carro.ultima_posicion;
                                marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker, riseOnHover: true });
                                this_2.markers.push(marker);
                                marker.on('dblclick', function () {
                                    _this.abrirDetallesPerson(carro);
                                });
                                marker.bindPopup(carro.nam + " (Dos toques rápidos para ver detalles)").openPopup();
                                marker.addTo(this_2.map);
                                this_2.map.setView([carro.lat, carro.lng], 15);
                            }
                            marker.addTo(this_2.map);
                            this_2.map.setView([carro.lat, carro.lng], 15);
                        }
                        //icono 3
                        if (this_2.dataFromOtherPage == 3) {
                            if (this_2.cambiaricono.nombre == carro.nam) {
                                //const posicion = carro.ultima_posicion;
                                marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker4, riseOnHover: true });
                                this_2.markers.push(marker);
                                marker.on('dblclick', function () {
                                    _this.abrirDetallesPerson(carro);
                                });
                                marker.bindPopup(carro.nam + " (Dos toques rápidos para ver detalles)").openPopup();
                            }
                            else {
                                //const posicion = carro.ultima_posicion;
                                marker = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker, riseOnHover: true });
                                this_2.markers.push(marker);
                                marker.on('dblclick', function () {
                                    _this.abrirDetallesPerson(carro);
                                });
                                marker.bindPopup(carro.nam + " (Dos toques rápidos para ver detalles)").openPopup();
                                marker.addTo(this_2.map);
                                this_2.map.setView([carro.lat, carro.lng], 15);
                            }
                            marker.addTo(this_2.map);
                            this_2.map.setView([carro.lat, carro.lng], 15);
                        }
                    }
                }
            }
        };
        var this_2 = this, marker, marker, marker, marker, marker, marker, marker;
        for (var _b = 0, _c = this.users; _b < _c.length; _b++) {
            var carro = _c[_b];
            _loop_3(carro);
        }
    };
    // poner casita con popup
    TaxisPage.prototype.wait20sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 20000); });
    };
    TaxisPage.prototype.startTimer2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.timer2) return [3 /*break*/, 4];
                        this.timer2 = false;
                        i = void 0;
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < 500)) return [3 /*break*/, 4];
                        if (!!this.timer3) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.wait20sec()];
                    case 2:
                        _a.sent();
                        console.log("star timer" + i);
                        //this.playText3()
                        //this.singlenotification()
                        this.gasolineraService.revisar2(this.id).then(function (result) {
                            console.log(result);
                            _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
                            var con = 0;
                            for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                var carro = _a[_i];
                                if (!carro.apr) {
                                    con++;
                                }
                            }
                            if (con > 0) {
                                _this.playText(con);
                                _this.singlenotification();
                            }
                        }, function (err) {
                            console.log(err);
                        });
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.wait10sec = function () {
        return new Promise(function (resolve) { setTimeout(function () { return resolve("tick"); }, 30000); });
    };
    TaxisPage.prototype.startTimer3 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        //timer automatico 
                        this.timer3 = true;
                        this.notificationAlreadyReceived = true;
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < 500)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.wait10sec()];
                    case 2:
                        _a.sent();
                        console.log("star timer" + i);
                        // this.playText2()
                        // this.singlenotification() 
                        //
                        if (this.estaxista) {
                            this.gasolineraService.revisar2(this.id).then(function (result) {
                                console.log(result);
                                _this.users3 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                var con = 0;
                                for (var _i = 0, _a = _this.users3; _i < _a.length; _i++) {
                                    var carro = _a[_i];
                                    if (!carro.apr) {
                                        con++;
                                    }
                                }
                                if (con > 0) {
                                    _this.playText(con);
                                    _this.singlenotification();
                                }
                            }, function (err) {
                                console.log(err);
                            });
                        }
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.playText2 = function () {
        var text = 'Pedido Recibido.';
        var rate = 1;
        var locale = 'es-ES';
        //poner aqui el backgroud
        this.tts.speak({
            text: text,
            rate: rate / 200,
            locale: locale
        })
            .then(function () { return console.log('Success'); })
            .catch(function (reason) { return console.log(reason); });
    };
    TaxisPage.prototype.playText3 = function () {
        var text = 'timer uno.';
        var rate = 1;
        var locale = 'es-ES';
        //poner aqui el backgroud
        this.tts.speak({
            text: text,
            rate: rate / 200,
            locale: locale
        })
            .then(function () { return console.log('Success'); })
            .catch(function (reason) { return console.log(reason); });
    };
    TaxisPage.prototype.singlenotification = function () {
        var msg = ' ¡Tiene un pedido!';
        var uri = this.global.foto2 + 'IKKTocPPrlnQYY1C9ZMBqQxDXf6CEsIhOWH5Bg7E.png';
        // Schedule a single notification
        this.localNotifications.schedule({
            id: 1,
            text: msg,
        });
        this.playAudio2();
    };
    // prueba
    TaxisPage.prototype.origenViaje = function () {
        //  
        if (this.nored) {
            this.presentToast4("No hay conexión al servidor");
        }
        else {
            if (this.splash4) {
                this.presentToast4("Conectándose... Por favor espere");
            }
            else {
                if (this.viaje == 1) {
                    // this.marker3.setLatLng(this.map.getCenter());
                    // this.origen = this.marker3.getLatLng();
                    this.origen = this.map.getCenter();
                    //creacion del marcador azul con el origen
                    var blueIcon = new L.Icon({
                        // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                        // iconUrl: 'assets/libs/leaflet/images/marker-icon.png',//icono sustituido marker-shadow
                        iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                        // shadowUrl: 'assets/libs/leaflet/images/marker-shadow.png',
                        // iconSize: [40, 40], // size of the icon
                        iconSize: [30, 40],
                        // shadowSize:   [50, 64], // size of the shadow
                        iconAnchor: [15, 37],
                    });
                    this.marker4 = L.marker([this.origen.lat, this.origen.lng], { draggable: false, riseOnHover: false, icon: blueIcon });
                    this.marker4.addTo(this.map);
                    this.marker4.setLatLng(this.map.getCenter());
                    this.viaje++;
                    this.aeropuerto(this.origen.lat, this.origen.lng);
                    this.openDialogo3();
                }
                else if (this.viaje == 2) {
                    this.destino = this.map.getCenter();
                    this.aeropuerto(this.destino.lat, this.destino.lng);
                    this.loadingService.presentLoading();
                    this.destinoname = this.selectedAddress2;
                    this.muestraruta = true;
                    this.viaje++;
                    this.removeLayer();
                    //this.mostraruta();
                }
                else if (this.viaje == 3) {
                    this.tarifa2 = false;
                    this.openDialogo4();
                }
            }
        }
    };
    TaxisPage.prototype.removeLayer = function () {
        /*   this.map.eachLayer((layer: any) => {
            console.log("capa: "+JSON.stringify(layer.options))
            
            if (layer.options.waypoints && layer.options.waypoints.length) {
              // console.log("capa: "+JSON.stringify(layer.options))
              this.map.removeLayer(layer);
             }
          });
         */
        var _this = this;
        /*   L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(this.map);
         */
        var wayPoint1 = this.origen; //L.latLng(23.112630565754614, -82.3680209949998);
        var wayPoint2 = this.destino; // L.latLng(23.105999317209307, -82.37488744971604);
        var rWP1 = new L.Routing.Waypoint;
        rWP1.latLng = wayPoint1;
        var rWP2 = new L.Routing.Waypoint;
        rWP2.latLng = wayPoint2;
        console.log('wayPoint1: ' + wayPoint1);
        console.log(" wayPoint2 : " + JSON.stringify(wayPoint2));
        var myRoute = L.Routing.osrmv1();
        /* myRoute.on('routesfound', (e:any)=>  {
        
        
        });  */
        myRoute.route([rWP1, rWP2], function (err, routes) {
            var distance = routes[0].summary.totalDistance;
            console.log('routing distance: ' + distance);
            console.log(" routes[0] : " + JSON.stringify(routes[0]));
            if (distance > 0) {
                _this.moveEnd = true;
                // this.loadingService.presentLoading()
                _this.vistaerror = '';
                if (_this.marker3) {
                    _this.destino2 = _this.marker3.getLatLng();
                }
                if (_this.marker3) {
                    _this.marker3.removeFrom(_this.map);
                }
                if (_this.marker4) {
                    _this.marker4.removeFrom(_this.map);
                }
                console.log("todo bien hasta aqui 2");
                // this.tipoAuto()
                _this.vistatipo = 'norute';
                _this.botones = false;
                if (_this.tabla) {
                    _this.vistatipo = 'noruteadmin';
                }
                // this.destino2 = this.inputWaypoints[1].latLng
                //  this.routes = []
                //  this.routes2 = []
                // this.routes = routes[0];
                // this.routes2 = routes[0];
                _this.valid = false;
                _this.vistatipomoneda = '';
                console.log(" instrucciones : " + JSON.stringify(routes[0].instructions));
                _this.coordinates = routes[0].coordinates;
                _this.summary = routes[0].summary;
                _this.inputWaypoints = routes[0].inputWaypoints;
                _this.origen = _this.inputWaypoints[0].latLng;
                console.log(" lat origen pagando: " + _this.origen.lat);
                console.log(" lng origen pagando: " + _this.origen.lng);
                _this.destino = _this.inputWaypoints[1].latLng;
                console.log(" lat destino pagando: " + _this.destino.lat);
                console.log(" lng destino pagando: " + _this.destino.lng);
                // console.log(" destino lng : "+ JSON.stringify(this.destino.lng))      
                _this.mDistanseKm = +(_this.summary.totalDistance / 1000).toFixed(2);
                console.log(" Distancia: " + _this.mDistanseKm);
                //let float=parseFloat(this.mDistanseKm)
                //let float2=parseFloat(this.carro.curPos.tar)  
                /*      let basico=this.user.parametros.parametros.basico.costo //this.tarifa.auto    // ver despues
                    let confort=this.user.parametros.parametros.confort.costo //this.tarifa.minivan    // ver despues
                    let microbus=this.user.parametros.parametros.micro.costo //this.tarifa.microbus    // ver despues
                    let moto=this.user.parametros.parametros.moto.costo //this.tarifa.microbus    // ver despues
                
                
                    let banderaauto = Number(this.user.parametros.parametros.basico.bandera)   //350 this.tarifa.band_auto
                    let banderaminivan = Number(this.user.parametros.parametros.confort.bandera) // this.tarifa.band_minivan
                    let banderamicrobus = Number(this.user.parametros.parametros.micro.bandera) //this.tarifa.band_microbus
                    let banderamoto = Number(this.user.parametros.parametros.moto.bandera) //this.tarifa.band_microbus
              */
                if (!_this.tarifa2) {
                    //tarifa1
                    if (_this.mDistanseKm < 2.5) {
                        _this.cbasico = +(_this.banderaauto);
                        _this.cconfort = +(_this.banderaminivan);
                        _this.cmicrob = +(_this.banderamicrobus);
                        _this.cmoto = +(_this.banderamoto);
                        _this.cbasico2 = +(_this.banderaauto);
                        _this.porcBasico = +(((_this.cbasico2 * _this.nego_porciento) / 100).toFixed(2));
                        _this.cconfort2 = +(_this.banderaminivan);
                        _this.porcConfort = +(((_this.cconfort2 * _this.nego_porciento) / 100).toFixed(2));
                        _this.cmicrob2 = +(_this.banderamicrobus);
                        _this.porcMicro = +(((_this.cmicrob2 * _this.nego_porciento) / 100).toFixed(2));
                        _this.cmoto2 = +(_this.banderamoto);
                        _this.porcMoto = +(((_this.cmoto2 * _this.nego_porciento) / 100).toFixed(2));
                    }
                    else {
                        _this.cbasico = +((_this.mDistanseKm - 2.5) * _this.user_basico + _this.banderaauto).toFixed(2);
                        _this.cconfort = +((_this.mDistanseKm - 2.5) * _this.user_confort + _this.banderaminivan).toFixed(2);
                        _this.cmicrob = +((_this.mDistanseKm - 2.5) * _this.user_microbus + _this.banderamicrobus).toFixed(2);
                        _this.cmoto = +((_this.mDistanseKm - 2.5) * _this.user_moto + _this.banderamoto).toFixed(2);
                        var fix1 = _this.cbasico;
                        var fix2 = _this.cconfort;
                        var fix3 = _this.cmicrob;
                        var fix4 = _this.cmoto;
                        var total1 = _this.Mathceil10(fix1, 1);
                        var total2 = _this.Mathceil10(fix2, 1);
                        var total3 = _this.Mathceil10(fix3, 1);
                        var total4 = _this.Mathceil10(fix4, 1);
                        // this.cbasico2=+(total1-fix1).toFixed(2)
                        _this.cbasico2 = total1;
                        _this.porcBasico = +(((_this.cbasico2 * _this.nego_porciento) / 100).toFixed(2));
                        // this.cconfort2=+(total2-fix2).toFixed(2)
                        _this.cconfort2 = total2;
                        _this.porcConfort = +(((_this.cconfort2 * _this.nego_porciento) / 100).toFixed(2));
                        // this.cmicrob2=+(total3-fix3).toFixed(2)
                        _this.cmicrob2 = total3;
                        _this.porcMicro = +(((_this.cmicrob2 * _this.nego_porciento) / 100).toFixed(2));
                        // this.cmicrob2=+(total3-fix3).toFixed(2)
                        _this.cmoto2 = total4;
                        _this.porcMoto = +(((_this.cmoto2 * _this.nego_porciento) / 100).toFixed(2));
                    }
                }
                else {
                    //tarifa1
                    if (_this.mDistanseKm < 2.5) {
                        _this.cbasico = +(_this.banderaauto2);
                        _this.cconfort = +(_this.banderaminivan2);
                        _this.cmicrob = +(_this.banderamicrobus2);
                        _this.cmoto = +(_this.banderamoto2);
                        _this.cbasico2 = +(_this.banderaauto2);
                        _this.porcBasico = +(((_this.cbasico2 * _this.nego_porciento) / 100).toFixed(2));
                        _this.cconfort2 = +(_this.banderaminivan2);
                        _this.porcConfort = +(((_this.cconfort2 * _this.nego_porciento) / 100).toFixed(2));
                        _this.cmicrob2 = +(_this.banderamicrobus2);
                        _this.porcMicro = +(((_this.cmicrob2 * _this.nego_porciento) / 100).toFixed(2));
                        _this.cmoto2 = +(_this.banderamoto2);
                        _this.porcMoto = +(((_this.cmoto2 * _this.nego_porciento) / 100).toFixed(2));
                    }
                    else {
                        _this.cbasico = +((_this.mDistanseKm - 2.5) * _this.user_basico2 + _this.banderaauto2).toFixed(2);
                        _this.cconfort = +((_this.mDistanseKm - 2.5) * _this.user_confort2 + _this.banderaminivan2).toFixed(2);
                        _this.cmicrob = +((_this.mDistanseKm - 2.5) * _this.user_microbus2 + _this.banderamicrobus2).toFixed(2);
                        _this.cmoto = +((_this.mDistanseKm - 2.5) * _this.user_moto2 + _this.banderamoto2).toFixed(2);
                        var fix1 = _this.cbasico;
                        var fix2 = _this.cconfort;
                        var fix3 = _this.cmicrob;
                        var fix4 = _this.cmoto;
                        var total1 = _this.Mathceil10(fix1, 1);
                        var total2 = _this.Mathceil10(fix2, 1);
                        var total3 = _this.Mathceil10(fix3, 1);
                        var total4 = _this.Mathceil10(fix4, 1);
                        // this.cbasico2=+(total1-fix1).toFixed(2)
                        _this.cbasico2 = total1;
                        _this.porcBasico = +(((_this.cbasico2 * _this.nego_porciento) / 100).toFixed(2));
                        // this.cconfort2=+(total2-fix2).toFixed(2)
                        _this.cconfort2 = total2;
                        _this.porcConfort = +(((_this.cconfort2 * _this.nego_porciento) / 100).toFixed(2));
                        // this.cmicrob2=+(total3-fix3).toFixed(2)
                        _this.cmicrob2 = total3;
                        _this.porcMicro = +(((_this.cmicrob2 * _this.nego_porciento) / 100).toFixed(2));
                        // this.cmicrob2=+(total3-fix3).toFixed(2)
                        _this.cmoto2 = total4;
                        _this.porcMoto = +(((_this.cmoto2 * _this.nego_porciento) / 100).toFixed(2));
                    }
                }
                //console.log(' distancia: '+ this.mDistanseKm2)
                //console.log(' resultados: '+ this.resultado)
                //console.log(' variable carro 1: '+this.carro.curPos.tar )
                // console.log(" routes all: "+ JSON.stringify(this.routes))
                console.log(" routes: " + JSON.stringify(routes[0]));
                _this.inputWaypoints = routes[0].inputWaypoints;
                console.log(" inputWaypoints: " + JSON.stringify(_this.inputWaypoints));
                // this.origename = this.routes[0].instructions[0].road;
                // console.log(" Nombre inicial: "+ JSON.stringify(this.origename))
                for (var _i = 0, _a = _this.inputWaypoints; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    if (carro.latLng) {
                        _this.inputWaypoints2.push(carro.latLng);
                        // console.log(" carro: "+ JSON.stringify(carro.latLng))
                    }
                    // 
                }
                console.log(" inputWaypoints2: " + JSON.stringify(_this.inputWaypoints2));
                _this.destino = _this.inputWaypoints2.pop();
                console.log(" destino como pop: " + JSON.stringify(_this.destino.lng));
                var greenIcon = new L.Icon({
                    // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                    iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                    iconSize: [30, 40],
                    iconAnchor: [15, 37],
                });
                _this.markergpsOrigen = L.marker([_this.origen.lat, _this.origen.lng], { draggable: false, icon: greenIcon });
                // create popup contents
                var customPopup = "<b>Origen</b><br/>";
                // specify popup options 
                var customOptions = {
                    //'maxWidth': '400',
                    //'width': '200',
                    offset: [0, -30]
                };
                // create popup contents
                _this.markergpsOrigen.addTo(_this.map);
                _this.markergpsOrigen.bindPopup(customPopup).openPopup();
                var greenIcon = new L.Icon({
                    // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                    iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                    iconSize: [30, 40],
                    iconAnchor: [15, 37],
                });
                _this.markergpsDestino = L.marker([_this.destino.lat, _this.destino.lng], { draggable: false, icon: greenIcon });
                // create popup contents
                var customPopup = "<b>Destino</b><br/>";
                // specify popup options 
                var customOptions = {
                    //'maxWidth': '400',
                    //'width': '200',
                    offset: [0, -30]
                };
                // create popup contents
                _this.markergpsDestino.addTo(_this.map);
                _this.markergpsDestino.bindPopup(customPopup).openPopup();
                //this.map.setView([ this.destino.lat,  this.destino.lng], 15);
                console.log("todo bien hasta aqui");
                /*        this.latlngs = [
                         [this.origen.lat,this.origen.lng],
                         [this.destino2.lat,this.destino2.lng] // this.destino2.lat,this.destino2.lng
                       ];
                       //linea para tomar el bounds
                       this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1});
                       // zoom the map to the polyline
                       this.map.fitBounds(this.polyline.getBounds(), { padding: [60, 60] });
                       this.loadingService.dismissLoading();
                 */
                _this.placeholder = _this.mDistanseKm.toString() + " kilómetros";
                // this.destinoname = this.selectedAddress2     
                _this.traceCount = 0;
                _this.hayLinea = false;
                // this.traceroute()    
                // prueba
                _this.traceCount2++;
                var latlngs = Array();
                _this.hayLinea = true;
                var cont = 1;
                var lastDest = routes[0].coordinates[routes[0].coordinates.length - 1];
                routes[0].coordinates.forEach(function (coord, index) {
                    // console.log(" element : "+ element )
                    setTimeout(function () {
                        console.log("traceroute element : " + coord.lat);
                        //Get latlng from first marker 'blue'
                        if (cont < 1) {
                            latlngs.pop();
                            cont++;
                        }
                        else {
                            latlngs.push(coord);
                            _this.polyline2 = L.polyline(latlngs, { color: '#287fca', opacity: 0.5, weight: 7, smoothFactor: 1 }).addTo(_this.active_polyline);
                            cont++;
                            console.log("linea dibujada ");
                            if (_this.traceCount2 < 2) {
                            }
                        }
                        // active_polyline
                        // this.polyline2 = L.polyline(latlngs, {color: 'white',weight: 2,smoothFactor: 1}).addTo(this.map);
                        //this.polyline2 = L.polyline(coord, {color: 'white',weight: 2,smoothFactor: 1});
                        // marker4.setLatLng(coord.lat,coord.lng); 
                        // this.marker3.setLatLng(coord.lat,coord.lng); 
                    }, 2 * index);
                });
                _this.active_polyline = L.featureGroup().addTo(_this.map);
                /*      if(this.map){
                    this.map.fitBounds(this.active_polyline.getBounds(), { padding: [60, 60] });
                  }
                */
                /*   var bounds = L.latLngBounds() // Instantiate LatLngBounds object
                                        
                  let lat_lng = [this.destino.lat,this.destino.lng]
                  bounds.extend(lat_lng)
                
                  let lat_lng2 = [this.origen.curPosLat,this.origen.curPosLng]
                  bounds.extend(lat_lng2)
                
                  this.map.fitBounds(bounds, { padding: [6, 6] })
                */
                _this.active_polyline.clearLayers();
                _this.cd.detectChanges();
                _this.loadingService.dismissLoading();
                //linea para tomar el bounds
                //this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1});
                // zoom the map to the polyline
            }
        }, function (err) {
            console.log(err);
            _this.loadingService.dismissLoading();
            _this.vistaerror = 'norute';
            _this.vistatipo = ' ';
            //this.presentToast4("error en la ruta")
            _this.repetir = true;
            _this.viaje--;
            /*
              if(this.map){
                this.map.removeControl(this.routeControl3);
                this.viaje--;
              }
           */
        });
    };
    TaxisPage.prototype.removeLayer2 = function () {
        var _this = this;
        this.moveEnd = true;
        // this.loadingService.presentLoading()
        this.vistaerror = '';
        if (this.marker3) {
            this.destino2 = this.marker3.getLatLng();
        }
        if (this.marker3) {
            this.marker3.removeFrom(this.map);
        }
        if (this.marker4) {
            this.marker4.removeFrom(this.map);
        }
        console.log("todo bien hasta aqui 2");
        // this.vistatipo = 'norute'
        this.botones = false;
        if (this.tabla) {
            this.vistatipo = 'noruteadmin';
        }
        this.valid = false;
        this.vistatipomoneda = '';
        //  console.log(" instrucciones : "+ JSON.stringify(routes[0].instructions))
        //    this.summary = routes[0].summary;
        //  this.inputWaypoints=routes[0].inputWaypoints  
        this.origen = this.inputWaypoints[0].latLng;
        console.log(" lat origen pagando: " + this.origen.lat);
        console.log(" lng origen pagando: " + this.origen.lng);
        this.destino = this.inputWaypoints[1].latLng;
        console.log(" lat destino pagando: " + this.destino.lat);
        console.log(" lng destino pagando: " + this.destino.lng);
        // console.log(" destino lng : "+ JSON.stringify(this.destino.lng))      
        this.mDistanseKm = +(this.summary.totalDistance / 1000).toFixed(2);
        console.log(" Distancia: " + this.mDistanseKm);
        //console.log(' distancia: '+ this.mDistanseKm2)
        //console.log(' resultados: '+ this.resultado)
        //console.log(' variable carro 1: '+this.carro.curPos.tar )
        // console.log(" routes all: "+ JSON.stringify(this.routes))
        // console.log(" routes: "+ JSON.stringify(routes[0]))
        // this.inputWaypoints=routes[0].inputWaypoints  
        console.log(" inputWaypoints: " + JSON.stringify(this.inputWaypoints));
        // this.origename = this.routes[0].instructions[0].road;
        // console.log(" Nombre inicial: "+ JSON.stringify(this.origename))
        for (var _i = 0, _a = this.inputWaypoints; _i < _a.length; _i++) {
            var carro = _a[_i];
            if (carro.latLng) {
                this.inputWaypoints2.push(carro.latLng);
                // console.log(" carro: "+ JSON.stringify(carro.latLng))
            }
            // 
        }
        console.log(" inputWaypoints2: " + JSON.stringify(this.inputWaypoints2));
        this.destino = this.inputWaypoints2.pop();
        console.log(" destino como pop 3: " + JSON.stringify(this.destino.lng));
        var greenIcon = new L.Icon({
            // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
            iconSize: [30, 40],
            iconAnchor: [15, 37],
        });
        this.markergpsOrigen = L.marker([this.origen.lat, this.origen.lng], { draggable: false, icon: greenIcon });
        // create popup contents
        var customPopup = "<b>Origen</b><br/>";
        // specify popup options 
        var customOptions = {
            //'maxWidth': '400',
            //'width': '200',
            offset: [0, -30]
        };
        // create popup contents
        this.markergpsOrigen.addTo(this.map);
        this.markergpsOrigen.bindPopup(customPopup).openPopup();
        var greenIcon = new L.Icon({
            // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
            iconSize: [30, 40],
            iconAnchor: [15, 37],
        });
        this.markergpsDestino = L.marker([this.destino.lat, this.destino.lng], { draggable: false, icon: greenIcon });
        // create popup contents
        var customPopup = "<b>Destino</b><br/>";
        // specify popup options 
        var customOptions = {
            //'maxWidth': '400',
            //'width': '200',
            offset: [0, -30]
        };
        // create popup contents
        this.markergpsDestino.addTo(this.map);
        this.markergpsDestino.bindPopup(customPopup).openPopup();
        //this.map.setView([ this.destino.lat,  this.destino.lng], 15);
        console.log("todo bien hasta aqui");
        /*        this.latlngs = [
                 [this.origen.lat,this.origen.lng],
                 [this.destino2.lat,this.destino2.lng] // this.destino2.lat,this.destino2.lng
               ];
               //linea para tomar el bounds
               this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1});
               // zoom the map to the polyline
               this.map.fitBounds(this.polyline.getBounds(), { padding: [60, 60] });
               this.loadingService.dismissLoading();
         */
        this.placeholder = this.mDistanseKm.toString() + " kilómetros";
        // this.destinoname = this.selectedAddress2     
        this.traceCount = 0;
        this.hayLinea = false;
        // this.traceroute()    
        // prueba
        this.traceCount2++;
        var latlngs = Array();
        this.hayLinea = true;
        var cont = 1;
        // var lastDest = routes[0].coordinates[routes[0].coordinates.length -1]
        this.coordinates.forEach(function (coord, index) {
            // console.log(" element : "+ element )
            setTimeout(function () {
                console.log("traceroute element : " + coord.lat);
                //Get latlng from first marker
                if (cont < 1) {
                    latlngs.pop();
                    cont++;
                }
                else {
                    latlngs.push(coord);
                    _this.polyline2 = L.polyline(latlngs, { color: 'blue', weight: 7, smoothFactor: 1 }).addTo(_this.active_polyline);
                    cont++;
                    console.log("linea dibujada ");
                    if (_this.traceCount2 < 2) {
                    }
                }
                // active_polyline
                // this.polyline2 = L.polyline(latlngs, {color: 'white',weight: 2,smoothFactor: 1}).addTo(this.map);
                //this.polyline2 = L.polyline(coord, {color: 'white',weight: 2,smoothFactor: 1});
                // marker4.setLatLng(coord.lat,coord.lng); 
                // this.marker3.setLatLng(coord.lat,coord.lng); 
            }, 2 * index);
        });
        this.active_polyline = L.featureGroup().addTo(this.map);
        /*      if(this.map){
            this.map.fitBounds(this.active_polyline.getBounds(), { padding: [60, 60] });
          }
        */
        /*   var bounds = L.latLngBounds() // Instantiate LatLngBounds object
                                
          let lat_lng = [this.destino.lat,this.destino.lng]
          bounds.extend(lat_lng)
        
          let lat_lng2 = [this.origen.curPosLat,this.origen.curPosLng]
          bounds.extend(lat_lng2)
        
          this.map.fitBounds(bounds, { padding: [6, 6] })
        */
        this.active_polyline.clearLayers();
        this.cd.detectChanges();
    };
    TaxisPage.prototype.mostraruta = function () {
        var _this = this;
        this.moveEnd = true;
        this.loadingService.presentLoading();
        this.vistaerror = '';
        if (this.map) {
            if (this.nohayGPS) {
                this.map.removeControl(this.routeControl3);
            }
            //prueba        
            /* this.posicionactual.lon=-82.366592;
            this.posicionactual.lat=23.113592 ; */
            //var origen =this.marker2.getLatLng(); 
            //var destino =this.marker3.getLatLng(); 
            this.destino2 = this.marker3.getLatLng();
            /*    L.Routing.control({
                 waypoints: [...],
                 router: L.Routing.mapbox('your-access-token-here')
                 // your other options go here
             }); */
            /*    this.routeControl2 =L.Routing.control({
                     waypoints: [
                       L.latLng(this.origen.lat,this.origen.lng),
                       L.latLng(destino.lat,destino.lng)
                     
                     ],
                      router: L.Routing.mapbox('pk.eyJ1IjoiaGFiYW5hc2VydmljZW50cm8iLCJhIjoiY2twZHQ3eXhnMXIwNDJvcDd2YzFzcDkycSJ9.eQ80vtUjN2QneGR6oVxH_w'),
                      controls: {instructions: false},
                    
                     // units: 'imperial',
                     language: 'es-ES',
                     instructions: false,
                    show: false,
                    showAlternatives:false,
                     routeWhileDragging: false,
                     //autoRoute: false,
                    
                     lineOptions: {
                       styles: [{
                         color: 'red',
                         opacity: 1,
                         weight: 3,
                         smoothFactor: 1
                         // lineCap:'round',
                         // linJoin:'round'
                       }]
                     },
                     
                   }).addTo(this.map);
            
             */
            this.routeControl3 = L.Routing.control({
                waypoints: [
                    /*           L.latLng(this.origen.lat,this.origen.lng),
                              L.latLng(this.destino2.lat,this.destino2.lng) */
                    L.latLng(23.105999317209307, -82.37488744971604),
                    L.latLng(23.112630565754614, -82.3680209949998)
                ],
                show: false,
            }).addTo(this.map);
            /*       ,
                     controls: {instructions: false},
                   
                    // units: 'imperial',
                   // language: 'es-ES',
                    instructions: false,
                   show: false,
                   showAlternatives:false,
                    routeWhileDragging: false,
                    //autoRoute: false,
                   
                    lineOptions: {
                      styles: [{
                        color: 'green',
                        opacity: 1,
                        weight: 8,
                        smoothFactor: 1
                        // lineCap:'round',
                        // linJoin:'round'
                      }]
                    }, */
            /*       this.routeControl3.on('routesfound', (e:any)=>  {
            
                               //creacion del marcador azul con el origen
                               var blueIcon = new L.Icon({
                                // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                                // iconUrl: 'assets/libs/leaflet/images/marker-icon.png',//icono sustituido marker-shadow
                                 iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',//icono sustituido
                                // shadowUrl: 'assets/libs/leaflet/images/marker-shadow.png',
                                 // iconSize: [40, 40], // size of the icon
                                 iconSize: [30, 40], // size of the icon
                                // shadowSize:   [50, 64], // size of the shadow
                                 iconAnchor:   [15, 37], // point of the icon which will correspond to marker's location
                                
                                });
            
                                var marker4 = L.marker([this.origen.lat,this.origen.lng], {draggable: true, riseOnHover:false, icon: blueIcon});
                                marker4.addTo(this.map);
            
                      e.routes[0].coordinates.forEach(function (coord, index) {
                      
                        // console.log(" element : "+ element )
                        setTimeout(() => {
                          console.log(" element : "+ coord.lat )
                          // this.polyline2 = L.polyline(coord, {color: 'white',weight: 2,smoothFactor: 1});
                          marker4.setLatLng(coord.lat,coord.lng);
                          
                        }, 300 * index );
            
                    });
            
                    
                       //trazar la linea entre los marcadores
                     //  this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1});
                       
                       // zoom the map to the polyline
                      // this.map.fitBounds(this.polyline.getBounds(), { padding: [60, 60] });
                      // this.loadingService.dismissLoading();
            
                    
                  });
                  // console.log(" routeControl2 modificar: "+ JSON.stringify(this.routeControl2))
             */
            this.routeControl3.on('routesfound', function (e) {
                _this.routes = [];
                _this.routes2 = [];
                _this.routes = e.routes;
                _this.routes2 = e.routes;
                _this.valid = false;
                _this.vistatipomoneda = '';
                console.log(" instrucciones : " + JSON.stringify(_this.routes[0].instructions));
                /*
                         let count =0
                        for (let carro of this.routes[0].instructions) {
                          console.log("instrucciones texto : "+ carro.text)
                          this.routes[0].instructions[count].text=""
                          console.log("instrucciones texto : "+ this.routes[0].instructions[count].text)
                          //this.routes[0].instructions.text[count]=""
                          count++
                        }
                 */
                // this.routeControl2.addTo(this.map);
                /*
                      let gjson = [{
                        "type":"Head",
                        "distance":267.085,
                        "time":46.181,
                        "road":" ",
                        "direction":"SE",
                        "index":0,
                        "mode":"driving",
                        "text":" "},
                        {
                          "type":"Right",
                          "distance":221.138,
                          "time":44.297,
                          "road":" ",
                          "direction":"W",
                          "index":16,
                          "mode":"driving",
                          "modifier":"Right",
                          "text":" "
                        },
                        {
                          "type":"Right",
                          "distance":75.148,
                          "time":16.447,
                          "road":"Rabí",
                          "direction":"N",
                          "index":19,
                          "mode":"driving",
                          "modifier":"Right",
                          "text":" "
                        },
                        {
                          "type":"DestinationReached",
                          "distance":0,
                          "time":0,
                          "road":"Rabí",
                          "direction":"N",
                          "index":21,
                          "mode":"driving",
                          "modifier":"Right",
                          "text":" "
                        }
                       ]
              
               */
                // this.routes[0].instructions= this.routes[0].instructions[JSON.stringify(gjson)]
                //  [{"type":"Head","distance":267.085,"time":46.181,"road":" ","direction":"SE","index":0,"mode":"driving","text":" "},{"type":"Right","distance":221.138,"time":44.297,"road":" ","direction":"W","index":16,"mode":"driving","modifier":"Right","text":" "},{"type":"Right","distance":75.148,"time":16.447,"road":"Rabí","direction":"N","index":19,"mode":"driving","modifier":"Right","text":" "},{"type":"DestinationReached","distance":0,"time":0,"road":"Rabí","direction":"N","index":21,"mode":"driving","modifier":"Right","text":" "}]
                _this.summary = _this.routes[0].summary;
                // alert distance and time in km and minutes
                // alert('');
                // console.log('Total distance is ' + this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(this.summary.totalTime % 3600 / 60) + ' minutes');
                // let all=+JSON.stringify(e)
                //console.log(" routesfound: "+JSON.stringify(all));
                _this.inputWaypoints = _this.routes[0].inputWaypoints;
                /*       for (let carro of this.inputWaypoints) {
                        this.inputWaypoints2.push(carro);
                      }
                      console.log(" inputWaypoints 2: "+ JSON.stringify(this.inputWaypoints2[0]))
                 */
                _this.origen = _this.inputWaypoints[0].latLng;
                console.log(" lat origen pagando: " + _this.origen.lat);
                console.log(" lng origen pagando: " + _this.origen.lng);
                _this.destino = _this.inputWaypoints[1].latLng;
                console.log(" lat destino pagando: " + _this.destino.lat);
                console.log(" lng destino pagando: " + _this.destino.lng);
                // console.log(" destino lng : "+ JSON.stringify(this.destino.lng))      
                _this.mDistanseKm = +(_this.summary.totalDistance / 1000).toFixed(2);
                console.log(" Distancia: " + _this.mDistanseKm);
                //let float=parseFloat(this.mDistanseKm)
                //let float2=parseFloat(this.carro.curPos.tar)  
                var basico = _this.user.parametros.parametros.basico.costo; //this.tarifa.auto    // ver despues           
                var confort = _this.user.parametros.parametros.confort.costo; //this.tarifa.minivan    // ver despues 
                var microbus = _this.user.parametros.parametros.micro.costo; //this.tarifa.microbus    // ver despues 
                var moto = _this.user.parametros.parametros.moto.costo; //this.tarifa.microbus    // ver despues 
                var banderaauto = Number(_this.user.parametros.parametros.basico.bandera); //350 this.tarifa.band_auto
                var banderaminivan = Number(_this.user.parametros.parametros.confort.bandera); // this.tarifa.band_minivan
                var banderamicrobus = Number(_this.user.parametros.parametros.micro.bandera); //this.tarifa.band_microbus
                var banderamoto = Number(_this.user.parametros.parametros.moto.bandera); //this.tarifa.band_microbus
                if (_this.mDistanseKm < 2.5) {
                    _this.cbasico = +(banderaauto);
                    _this.cconfort = +(banderaminivan);
                    _this.cmicrob = +(banderamicrobus);
                    _this.cmoto = +(banderamoto);
                    _this.cbasico2 = +(banderaauto);
                    _this.porcBasico = +(((_this.cbasico2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                    _this.cconfort2 = +(banderaminivan);
                    _this.porcConfort = +(((_this.cconfort2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                    _this.cmicrob2 = +(banderamicrobus);
                    _this.porcMicro = +(((_this.cmicrob2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                    _this.cmoto2 = +(banderamoto);
                    _this.porcMoto = +(((_this.cmoto2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                }
                else {
                    _this.cbasico = +((_this.mDistanseKm - 2.5) * basico + banderaauto).toFixed(2);
                    _this.cconfort = +((_this.mDistanseKm - 2.5) * confort + banderaminivan).toFixed(2);
                    _this.cmicrob = +((_this.mDistanseKm - 2.5) * microbus + banderamicrobus).toFixed(2);
                    _this.cmoto = +((_this.mDistanseKm - 2.5) * moto + banderamoto).toFixed(2);
                    /*
                              let fix=+(this.total).toFixed(2)
                              this.total2=this.Mathceil10(fix,1)
                              this.porciento=+(this.total2-this.total).toFixed(2)
                              console.log("total: " + this.total2);
                               */
                    var fix1 = _this.cbasico;
                    var fix2 = _this.cconfort;
                    var fix3 = _this.cmicrob;
                    var fix4 = _this.cmoto;
                    var total1 = _this.Mathceil10(fix1, 1);
                    var total2 = _this.Mathceil10(fix2, 1);
                    var total3 = _this.Mathceil10(fix3, 1);
                    var total4 = _this.Mathceil10(fix4, 1);
                    // this.cbasico2=+(total1-fix1).toFixed(2)
                    _this.cbasico2 = total1;
                    _this.porcBasico = +(((_this.cbasico2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                    // this.cconfort2=+(total2-fix2).toFixed(2)
                    _this.cconfort2 = total2;
                    _this.porcConfort = +(((_this.cconfort2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                    // this.cmicrob2=+(total3-fix3).toFixed(2)
                    _this.cmicrob2 = total3;
                    _this.porcMicro = +(((_this.cmicrob2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                    // this.cmicrob2=+(total3-fix3).toFixed(2)
                    _this.cmoto2 = total4;
                    _this.porcMoto = +(((_this.cmoto2 * _this.user.parametros.parametros.porciento) / 100).toFixed(2));
                }
                //console.log(' distancia: '+ this.mDistanseKm2)
                //console.log(' resultados: '+ this.resultado)
                //console.log(' variable carro 1: '+this.carro.curPos.tar )
                // console.log(" routes all: "+ JSON.stringify(this.routes))
                console.log(" routes[0] " + JSON.stringify(_this.routes[0]));
                _this.inputWaypoints = _this.routes[0].inputWaypoints;
                console.log(" inputWaypoints: " + JSON.stringify(_this.inputWaypoints));
                // this.origename = this.routes[0].instructions[0].road;
                // console.log(" Nombre inicial: "+ JSON.stringify(this.origename))
                for (var _i = 0, _a = _this.inputWaypoints; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    if (carro.latLng) {
                        _this.inputWaypoints2.push(carro.latLng);
                        console.log(" carro: " + JSON.stringify(carro.latLng));
                    }
                    // 
                }
                console.log(" inputWaypoints2: " + JSON.stringify(_this.inputWaypoints2));
                _this.destino = _this.inputWaypoints2.pop();
                console.log(" destino como pop 1: " + JSON.stringify(_this.destino.lng));
                //this.map.setView([ this.destino.lat,  this.destino.lng], 15);
                console.log("todo bien hasta aqui");
                _this.latlngs = [
                    [_this.origen.lat, _this.origen.lng],
                    [_this.destino2.lat, _this.destino2.lng]
                ];
                //linea para tomar el bounds
                _this.polyline = L.polyline(_this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 });
                // zoom the map to the polyline
                _this.map.fitBounds(_this.polyline.getBounds(), { padding: [60, 60] });
                _this.loadingService.dismissLoading();
                if (_this.marker3) {
                    _this.marker3.removeFrom(_this.map);
                }
                if (_this.marker4) {
                    _this.marker4.removeFrom(_this.map);
                }
                console.log("todo bien hasta aqui 2");
                // this.tipoAuto()
                _this.vistatipo = 'norute';
                _this.botones = false;
                if (_this.tabla) {
                    _this.vistatipo = 'noruteadmin';
                }
                var curPos2 = _this.destino;
                // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
                _this.ruta = "https://www.google.com/maps?saddr=" + curPos2.lat + "," + curPos2.lng + "&daddr=" + _this.origen.lat + "," + _this.origen.lng;
                _this.repetir = false;
                // this.presentToast5("Seleccione el tipo de vehículo o trace una nueva ruta.")   
                _this.placeholder = _this.mDistanseKm.toString() + " kilómetros";
                // this.destinoname = this.selectedAddress2     
                /*
                               if(this.map){
                
                                this.map.removeControl(this.routeControl2);
                               
                                L.Routing.control({
                                  waypoints: [
                                    L.latLng(this.origen.lat,this.origen.lng),
                                    L.latLng(destino.lat,destino.lng)
                                  ],
                                  language: 'es-ES',
                                // instructions: "false",
                                }).addTo(this.map);
                
                              }
                
                 */
                //creacion del marcador azul con el origen
                var blueIcon = new L.Icon({
                    // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                    // iconUrl: 'assets/libs/leaflet/images/marker-icon.png',//icono sustituido marker-shadow
                    iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
                    // shadowUrl: 'assets/libs/leaflet/images/marker-shadow.png',
                    // iconSize: [40, 40], // size of the icon
                    iconSize: [30, 40],
                    // shadowSize:   [50, 64], // size of the shadow
                    iconAnchor: [15, 37],
                });
                // var marker4 = L.marker([this.origen.lat,this.origen.lng], {draggable: true, riseOnHover:false, icon: blueIcon});
                // marker4.addTo(this.map);
                /*             e.routes[0].coordinates.forEach(function (coord, index) {
                            
                               
                              // console.log(" element : "+ element )
                              setTimeout(() => {
                                console.log(" element : "+ coord.lat )
                                // this.polyline2 = L.polyline(coord, {color: 'white',weight: 2,smoothFactor: 1});
                                // marker4.setLatLng(coord.lat,coord.lng);
                
                                // this.marker4.setLatLng(coord.lat,coord.lng);
                                
                              }, 1000 * index );
                
                          });
                
                 */
                _this.traceCount = 0;
                _this.hayLinea = false;
                // this.traceroute()
            });
            this.routeControl3.on('routingerror', function (e) {
                _this.loadingService.dismissLoading();
                _this.vistaerror = 'norute';
                _this.vistatipo = ' ';
                //this.presentToast4("error en la ruta")
                _this.repetir = true;
                if (_this.map) {
                    _this.map.removeControl(_this.routeControl3);
                    _this.viaje--;
                }
            });
            this.nohayGPS = true;
            // this.openDialogo()
        }
    };
    TaxisPage.prototype.traceroute = function () {
        var _this = this;
        this.traceCount++;
        /*   //creacion del marcador azul con el origen
          var blueIcon = new L.Icon({
           // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
           // iconUrl: 'assets/libs/leaflet/images/marker-icon.png',//icono sustituido marker-shadow
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',//icono sustituido
           // shadowUrl: 'assets/libs/leaflet/images/marker-shadow.png',
            // iconSize: [40, 40], // size of the icon
            iconSize: [30, 40], // size of the icon
           // shadowSize:   [50, 64], // size of the shadow
            iconAnchor:   [15, 37], // point of the icon which will correspond to marker's location
           
           });
     
     
            var marker41 = L.marker([this.origen.lat,this.origen.lng], {draggable: true, riseOnHover:false, icon: blueIcon});
            marker41.addTo(this.map);
      */
        /*        var ll2 = L.latLng([ this.origen.lat,this.origen.lng]);
              var mm = L.marker(ll2).addTo(this.map);
              mm.bindPopup("Hey i'm the second marker"); // 'routingerror', (e:any)=>
         */
        var latlngs = Array();
        //Get latlng from first marker
        //  latlngs.pop()
        // latlngs[0]=[]
        // latlngs.push(this.origen);
        this.hayLinea = true;
        var cont = 1;
        var lastDest = this.routes[0].coordinates[this.routes[0].coordinates.length - 1];
        this.routes[0].coordinates.forEach(function (coord, index) {
            // console.log(" element : "+ element )
            if (!_this.botones) {
                setTimeout(function () {
                    console.log("traceroute element : " + coord.lat);
                    //Get latlng from first marker
                    if (cont < 1) {
                        latlngs.pop();
                        cont++;
                    }
                    else {
                        latlngs.push(coord);
                        if (!_this.botones && _this.traceCount < 2) {
                            _this.polyline2 = L.polyline(latlngs, { color: 'yellow', weight: 2, smoothFactor: 1 }).addTo(_this.active_polyline);
                            cont++;
                        }
                        if (lastDest.lat == coord.lat && _this.traceCount < 1) {
                            _this.active_polyline.clearLayers();
                            if (!_this.botones) {
                                _this.traceroute();
                            }
                        }
                    }
                    // this.polyline2 = L.polyline(latlngs, {color: 'white',weight: 2,smoothFactor: 1}).addTo(this.map);
                    //this.polyline2 = L.polyline(coord, {color: 'white',weight: 2,smoothFactor: 1});
                    // marker4.setLatLng(coord.lat,coord.lng); 
                    // this.marker3.setLatLng(coord.lat,coord.lng); 
                }, 300 * index);
            }
        });
        this.active_polyline = L.featureGroup().addTo(this.map);
        this.active_polyline.clearLayers();
        // polyline = L.polyline(mypolyline).addTo(active_polyline);
    };
    TaxisPage.prototype.Mathceil10 = function (value, exp) {
        return this.decimalAdjust('ceil', value, exp);
    };
    TaxisPage.prototype.decimalAdjust = function (type, value, exp) {
        // Si el exp no está definido o es cero...
        if (typeof exp === 'undefined' || +exp === 0) {
            return Math[type](value);
        }
        value = +value;
        exp = +exp;
        // Si el valor no es un número o el exp no es un entero...
        if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
            return NaN;
        }
        // Shift
        value = value.toString().split('e');
        value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));
        // Shift back
        value = value.toString().split('e');
        return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));
    };
    TaxisPage.prototype.cancel = function () {
        this.reservar = false;
        this.muestraruta = false;
        this.traceCount = 4;
        this.tipo = 0;
        this.valid = false;
        this.vistatipomoneda = '';
        this.vistaerror = '';
        this.vistatipo = 'direccion';
        // this.routeControl2.hide()
        /*  if(this.map){
         // this.map.removeControl(this.routeControl2);
          this.map.removeControl(this.routeControl3);
         // this.active_polyline.clearLayers();
         } */
        if (this.hayLinea) {
            //this.hayLinea--;
            //alert(this.hayLinea); markergpsDestino
            if (this.markergpsDestino) {
                this.markergpsDestino.removeFrom(this.map);
            }
            if (this.markergpsOrigen) {
                this.markergpsOrigen.removeFrom(this.map);
            }
            this.map.removeLayer(this.active_polyline);
            //  this.map.removeLayer(this.polyline2);
            this.hayLinea = false;
        }
        if (this.marker4) {
            this.marker4.removeFrom(this.map);
        }
        this.viaje = 1;
        this.marker3.addTo(this.map);
        this.botones = true;
        this.cancelado = true;
        this.localizar2();
        this.cd.detectChanges();
        // this.selectedAddress2 = this.tempAddress
        // this.validGeocode=true // habilitados origen/destino  
        this.openDialogo();
    };
    TaxisPage.prototype.cancel2 = function () {
        var _this = this;
        this.hechos = false;
        this.encamino = true;
        this.muestraruta = false;
        this.traceCount = 4;
        this.tipo = 0;
        this.valid = false;
        this.vistatipomoneda = '';
        this.visto = false;
        this.visto2 = true;
        this.validDesapear = false;
        this.botones = true;
        this.vistaerror = '';
        this.vistatipo = 'direccion';
        // this.routeControl2.hide()
        this.screenOrientation.onChange().subscribe(function () {
            setTimeout(function () {
                if (_this.map) {
                    _this.map.invalidateSize();
                }
            }, 100);
        });
        if (this.mDistanseKm > 0) {
            // this.map.removeControl(this.routeControl3);
            this.active_polyline.clearLayers();
        }
        if (this.marker4) {
            this.marker4.removeFrom(this.map);
        }
        if (this.markerCar) {
            this.markerCar.removeFrom(this.map);
        }
        if (this.hayLinea) {
            //this.hayLinea--;
            //alert(this.hayLinea); markergpsDestino
            if (this.markergpsDestino) {
                this.markergpsDestino.removeFrom(this.map);
            }
            if (this.markergpsOrigen) {
                this.markergpsOrigen.removeFrom(this.map);
            }
            this.map.removeLayer(this.active_polyline);
            //  this.map.removeLayer(this.polyline2);
            this.hayLinea = false;
        }
        this.viaje = 1;
        this.marker3.addTo(this.map);
        this.botones = true;
        this.cancelado = true;
        this.localizar();
        this.cd.detectChanges();
        this.SEARCHpLACE1(this.marker3);
        // this.openDialogo();
    };
    TaxisPage.prototype.cancel3 = function () {
        var _this = this;
        this.screenOrientation.onChange().subscribe(function () {
            setTimeout(function () {
                if (_this.map) {
                    _this.map.invalidateSize();
                }
            }, 100);
        });
        /*  if(this.mDistanseKm>0){
           this.map.removeControl(this.routeControl3);
           this.active_polyline.clearLayers();
         }
           if (this.marker4) { // Borra el marcador del gps
             this.marker4.removeFrom(this.map);
           }
         */
        if (this.markergpsDestino) {
            this.markergpsDestino.removeFrom(this.map);
        }
        if (this.markergpsOrigen) {
            this.markergpsOrigen.removeFrom(this.map);
        }
        this.map.removeLayer(this.active_polyline);
        //  this.map.removeLayer(this.polyline2);
        this.hayLinea = false;
        this.viaje = 1;
        // this.marker3.addTo(this.map);
        this.botones = true;
        // this.localizar()
        this.cd.detectChanges();
        // this.SEARCHpLACE(this.marker3)
        // this.openDialogo();
    };
    //Dialogo para el inicio de la pagina
    TaxisPage.prototype.openDialogo4 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",
                            message: '¿Desea marcar un nuevo Origen y Destino?  ',
                            buttons: [
                                {
                                    text: 'Si',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.vistaerror = '';
                                        _this.vistatipo = 'direccion';
                                        // this.routeControl2.hide()
                                        if (_this.map) {
                                            // this.map.removeControl(this.routeControl3);
                                        }
                                        if (_this.marker4) {
                                            _this.marker4.removeFrom(_this.map);
                                        }
                                        _this.viaje = 1;
                                        _this.marker3.addTo(_this.map);
                                        _this.openDialogo();
                                    }
                                },
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.vistaerror = '';
                                        if (_this.repetir) {
                                            _this.mostraruta();
                                        }
                                        else {
                                            if (_this.hecho) {
                                                _this.tipoAuto();
                                            }
                                        }
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //Dialogo para el inicio de la pagina
    TaxisPage.prototype.tipoAuto = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var costo, basico, confort, micro, moto, alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.hecho = true;
                        basico = this.cbasico + ' Pesos';
                        confort = this.cconfort + ' Pesos';
                        micro = this.cmicrob + ' Pesos';
                        moto = this.cmoto + ' Pesos';
                        // this.tarifa=JSON.parse(carro.tip)
                        // this.tasa=JSON.parse(carro.tas)
                        this.tipo = 0;
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Seleccione el tipo de vehículo  ',
                                // subTitle: 'Seleccione el tipo de vehículo  ',
                                // message:  'Seleccione el tipo de vehículo  ',
                                cssClass: 'profalert',
                                buttons: [
                                    {
                                        text: 'Básico:   ' + basico,
                                        role: 'null',
                                        cssClass: 'profalert',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                            _this.tipo = 1;
                                            _this.pasajeros();
                                        }
                                    },
                                    {
                                        text: 'Confort (aire acondicionado):   ' + confort,
                                        role: 'null',
                                        cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                        handler: function (blah) {
                                            _this.tipo = 2;
                                            _this.pasajeros();
                                        }
                                    },
                                    {
                                        text: 'Microbús:   ' + micro,
                                        role: 'null',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                            _this.tipo = 3;
                                            _this.pasajeros();
                                        }
                                    },
                                    {
                                        text: 'Moto:   ' + moto,
                                        role: 'null',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                            _this.tipo = 4;
                                            _this.pasajeros();
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.pasajeros = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: '¿LLeva equipaje?  ',
                            // subTitle: 'Seleccione el tipo de vehículo  ',
                            // message:  'Seleccione el tipo de vehículo  ',
                            cssClass: 'profalert',
                            buttons: [
                                {
                                    text: 'Sí   ',
                                    role: 'null',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.equipaje = true;
                                        // this.mascotas()
                                        if (_this.tipo == 1) {
                                            _this.nombrenegocio = "1";
                                            _this.mascotas();
                                        }
                                        else if (_this.tipo == 2) {
                                            _this.cantPasajeros();
                                        }
                                        else if (_this.tipo == 3) {
                                            _this.cantPasajeros();
                                        }
                                        else if (_this.tipo == 4) {
                                            _this.cantPasajeros2();
                                        }
                                    }
                                },
                                {
                                    text: 'No   ',
                                    role: 'null',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                        _this.equipaje = false;
                                        // this.mascotas()    
                                        if (_this.tipo == 1) {
                                            _this.nombrenegocio = "1";
                                            _this.mascotas();
                                        }
                                        else if (_this.tipo == 2) {
                                            _this.cantPasajeros();
                                        }
                                        else if (_this.tipo == 3) {
                                            _this.cantPasajeros();
                                        }
                                        else if (_this.tipo == 4) {
                                            _this.cantPasajeros2();
                                        }
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.mascotas = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: '¿LLeva mascotas?  ',
                            // subTitle: 'Seleccione el tipo de vehículo  ',
                            // message:  'Seleccione el tipo de vehículo  ',
                            cssClass: 'profalert',
                            buttons: [
                                {
                                    text: 'Sí   ',
                                    role: 'null',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.mascota = true;
                                        if (_this.tipo == 1) {
                                            _this.myAlert_show3('1', _this.cmoto2);
                                        }
                                        else if (_this.tipo == 2) {
                                            _this.myAlert_show3('2', _this.cbasico2);
                                        }
                                        else if (_this.tipo == 3) {
                                            _this.myAlert_show3('3', _this.cconfort2);
                                        }
                                        else if (_this.tipo == 4) {
                                            _this.myAlert_show3('4', _this.cmicrob2);
                                        }
                                    }
                                },
                                {
                                    text: 'No   ',
                                    role: 'null',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                        _this.mascota = false;
                                        if (_this.tipo == 1) {
                                            _this.myAlert_show3('1', _this.cmoto2);
                                        }
                                        else if (_this.tipo == 2) {
                                            _this.myAlert_show3('2', _this.cbasico2);
                                        }
                                        else if (_this.tipo == 3) {
                                            _this.myAlert_show3('3', _this.cconfort2);
                                        }
                                        else if (_this.tipo == 4) {
                                            _this.myAlert_show3('4', _this.cmicrob2);
                                        }
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.pasajeros2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: '¿LLeva equipaje?  ',
                            // subTitle: 'Seleccione el tipo de vehículo  ',
                            // message:  'Seleccione el tipo de vehículo  ',
                            cssClass: 'profalert',
                            buttons: [
                                {
                                    text: 'Sí   ',
                                    role: 'null',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.equipaje = true;
                                        _this.mascotas2();
                                    }
                                },
                                {
                                    text: 'No   ',
                                    role: 'null',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                        _this.equipaje = false;
                                        _this.mascotas2();
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.mascotas2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: '¿LLeva mascotas?  ',
                            // subTitle: 'Seleccione el tipo de vehículo  ',
                            // message:  'Seleccione el tipo de vehículo  ',
                            cssClass: 'profalert',
                            buttons: [
                                {
                                    text: 'Sí   ',
                                    role: 'null',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.mascota = true;
                                        if (_this.tipo == 1) {
                                            _this.myAlert_show4('1', _this.cmoto2);
                                        }
                                        else if (_this.tipo == 2) {
                                            _this.myAlert_show4('2', _this.cbasico2);
                                        }
                                        else if (_this.tipo == 3) {
                                            _this.myAlert_show4('3', _this.cconfort2);
                                        }
                                        else if (_this.tipo == 4) {
                                            _this.myAlert_show4('4', _this.cmicrob2);
                                        }
                                    }
                                },
                                {
                                    text: 'No   ',
                                    role: 'null',
                                    cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                    handler: function (blah) {
                                        _this.mascota = false;
                                        if (_this.tipo == 1) {
                                            _this.myAlert_show4('1', _this.cmoto2);
                                        }
                                        else if (_this.tipo == 2) {
                                            _this.myAlert_show4('2', _this.cbasico2);
                                        }
                                        else if (_this.tipo == 3) {
                                            _this.myAlert_show4('3', _this.cconfort2);
                                        }
                                        else if (_this.tipo == 4) {
                                            _this.myAlert_show4('4', _this.cmicrob2);
                                        }
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.ofertar = function () {
        return __awaiter(this, void 0, void 0, function () {
            var precio, porciento;
            return __generator(this, function (_a) {
                this.oferta = true;
                if (this.tipo == 1) {
                    this.pasapasa = this.cmoto2;
                }
                else if (this.tipo == 2) {
                    this.pasapasa = this.cbasico2;
                }
                else if (this.tipo == 3) {
                    this.pasapasa = this.cconfort2;
                }
                else if (this.tipo == 4) {
                    this.pasapasa = this.cmicrob2;
                }
                precio = this.pasapasa;
                porciento = this.rebaja;
                this.valorMin = +(((precio * porciento) / 100).toFixed(2));
                this.valorMin2 = precio - this.valorMin;
                // this.pasapasa = "hola"//precio
                // title: 'Usted puede hacer su oferta  '+this.pasapasa,
                // subTitle: 'Los precios altos se muestran primero a los choferes  ' +this.pasapasa,
                this.minval = false;
                this.valid = false;
                this.vistatipomoneda = '';
                this.vistaoferta = "vistaoferta";
                return [2 /*return*/];
            });
        });
    };
    TaxisPage.prototype.add = function () {
        this.minval = false;
        this.pasapasa = this.pasapasa + 20;
    };
    TaxisPage.prototype.remove = function () {
        if (this.valorMin2 < this.pasapasa) {
            this.pasapasa = this.pasapasa - 10;
        }
        else {
            this.minval = true;
            this.presentToast4("Usted ha llegado al valor mínimo");
        }
    };
    TaxisPage.prototype.ofeCancelar = function () {
        this.vistaoferta = "";
        this.valid = true;
        this.vistatipomoneda = 'si';
        this.oferta = false;
    };
    TaxisPage.prototype.ofeAceptar = function () {
        this.vistaoferta = "";
        this.valid = true;
        this.vistatipomoneda = 'si';
        this.oferta = false;
        if (this.tipo == 1) {
            this.cmoto2 = this.pasapasa;
            this.costoviaje = this.cmoto2;
        }
        else if (this.tipo == 2) {
            this.cbasico2 = this.pasapasa;
            this.costoviaje = this.cbasico2;
        }
        else if (this.tipo == 3) {
            this.cconfort2 = this.pasapasa;
            this.costoviaje = this.cconfort2;
        }
        else if (this.tipo == 4) {
            this.cmicrob2 = this.pasapasa;
            this.costoviaje = this.cmicrob2;
        }
    };
    TaxisPage.prototype.vistaDatos = function () {
        this.vista = 'lista';
    };
    TaxisPage.prototype.noconec = function () {
        this.nored = !this.nored;
        if (this.nored) {
            this.vistanored = 'nored';
            this.cd.detectChanges();
        }
        else {
            this.vistanored = '';
            this.cd.detectChanges();
        }
    };
    TaxisPage.prototype.detallesp = function () {
        var datos;
        var tipuser = "";
        var esnego = this.estaxista;
        var id = this.id;
        var tiptabla = this.tabla;
        console.log(' pagina taxi:' + this.auto2.nam);
        console.log(' tipo:' + tipuser);
        console.log(' datos :' + this.auto.nam);
        //  this.nored = false 
        // this.existetel = false
        // existe=false
        /*       if (existe){
                if (tiptabla){
                  // es nego o gestor
                        if (esnego){
                          // es negocio
                            tipuser="nego"
                            datos = this.auto2
                        }else{
                          // es gestor
                          tipuser="gestor"
                          datos = this.auto
                        }
                
                        //datos = this.auto2
                }else{
                  //es cliente o chofer
                  if(this.chofer){
                    tipuser="chofer"
                    
        
                  }else{
                    tipuser="cliente"
                  }
                  datos = this.auto
                }
        
              }else{
                datos = this.auto
              }
         */
        var existe = true; //this.existetel
        /*    if(this.adm){
             tipuser="nego"
           }else{
             tipuser="cliente"
           }
      */
        tipuser = "cliente";
        datos = this.user;
        if (this.nored) {
            this.presentToast4("No hay conexión a Internet");
        }
        else {
            if (this.splash4) {
                this.presentToast4("Conectándose... Por favor espere");
            }
            else {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_24__detailssss_detailssss__["a" /* DetailssssPage */], { datos: datos, existe: existe, tipuser: tipuser, id: id, callback: this.myCallbackFunction });
            }
        }
    };
    TaxisPage.prototype.moto = function () {
        // this.vistatipo = ''
        if (!this.oferta) {
            this.tipo = 1;
            this.valid = true;
            this.vistatipomoneda = 'si';
            this.costoviaje = this.cmoto2;
        }
        // this.pasajeros()
    };
    TaxisPage.prototype.basico = function () {
        // this.vistatipo = ''
        if (!this.oferta) {
            this.tipo = 2;
            this.valid = true;
            this.vistatipomoneda = 'si';
            this.costoviaje = this.cbasico2;
        }
        // this.pasajeros()
    };
    TaxisPage.prototype.confort = function () {
        // this.vistatipo = ''
        if (!this.oferta) {
            this.tipo = 3;
            this.valid = true;
            this.vistatipomoneda = 'si';
            this.costoviaje = this.cconfort2;
        }
        // this.pasajeros()
    };
    TaxisPage.prototype.microbus = function () {
        // this.vistatipo = ''
        if (!this.oferta) {
            this.tipo = 4;
            this.valid = true;
            this.vistatipomoneda = 'si';
            this.costoviaje = this.cmicrob2;
        }
        // this.pasajeros()
    };
    TaxisPage.prototype.basico2 = function () {
        // this.vistatipo = ''
        this.valid = true;
        this.vistatipomoneda = 'si';
        this.cbasico = this.cbasico2;
        this.costo = this.cbasico;
        this.autocomplete = this.costo.toString();
        this.tipo = 2;
        //this.pasajeros()
    };
    TaxisPage.prototype.confort2 = function () {
        // this.vistatipo = ''
        this.valid = true;
        this.vistatipomoneda = 'si';
        this.cconfort = this.cconfort2;
        this.costo = this.cconfort;
        this.autocomplete = this.costo.toString();
        this.tipo = 3;
        //this.pasajeros()
    };
    TaxisPage.prototype.microbus2 = function () {
        // this.vistatipo = ''
        this.cmicrob = this.cmicrob2;
        this.costo = this.cmicrob;
        this.autocomplete = this.costo.toString();
        this.valid = true;
        this.vistatipomoneda = 'si';
        this.tipo = 4;
        //this.pasajeros()
    };
    TaxisPage.prototype.playAudio = function () {
        console.log("playing audio");
        /*  this.nativeAudio.play('trackID').then(function() {
             console.log("playing audio!");
         }, function(err) {
             console.log("error playing audio: " + err);
         }); */
        this.smartAudio.play('tabSwitch');
    };
    TaxisPage.prototype.playAudio2 = function () {
        console.log("playing audio");
        this.nativeAudio.play('trackIDDd').then(function () {
            console.log("playing audio!");
        }, function (err) {
            console.log("error playing audio: " + err);
        });
    };
    TaxisPage.prototype.guardar3 = function () {
        // this.startBackgroundGeolocation2()
        var carro = this.user;
        var bol = true;
        var idtm = this.user.idt; // idt de este usuario
        var idtmid = this.user.id; // id de este usuario
        console.log(' idtm:' + idtm);
        console.log(' idtmid:' + idtmid);
        console.log(' carro:' + carro);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_19__hello_hello__["a" /* HelloPage */], { carro: carro, bol: bol, idtm: idtm, idtmid: idtmid }); //     
    };
    TaxisPage.prototype.detalle = function () {
        // this.startBackgroundGeolocation2()
        var user = this.user;
        console.log(' carro:' + user);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_33__detalle_detalle__["a" /* DetallePage */], { user: user }); // , {carro,bol, idtm, idtmid }     
    };
    TaxisPage.prototype.calculaloca = function () {
        this.repetir2 = !this.repetir2;
        console.log("bolean: " + this.repetir2);
        if (this.repetir2) {
            this.cbasico = 0;
            this.cconfort = 0;
            this.cmicrob = 0;
            this.cbasico2 = 0;
            this.cconfort2 = 0;
            this.cmicrob2 = 0;
            this.vistatipo = 'noruteadmin';
        }
        else {
            this.vistatipo = 'direccion';
        }
    };
    TaxisPage.prototype.updateSearchResults = function () {
        console.log("updateSearchResults: " + this.autocomplete); //search input will display
        //calcula a partir del costo del viaje la tarifa por kilómetro
        //this.mDistanseKm=this.autocomplete
        var basico = this.user.parametros.parametros.basico.costo; //this.tarifa.auto    // ver despues           
        var confort = this.user.parametros.parametros.confort.costo; //this.tarifa.minivan    // ver despues 
        var microbus = this.user.parametros.parametros.micro.costo; //this.tarifa.microbus    // ver despues 
        var banderaauto = Number(this.user.parametros.parametros.basico.bandera); //350
        var banderaminivan = Number(this.user.parametros.parametros.confort.bandera);
        var banderamicrobus = Number(this.user.parametros.parametros.micro.bandera);
        this.costo = Number(this.autocomplete);
        if (this.tipo == 1) {
            this.cbasico2 = Number(this.autocomplete);
            this.porcBasico = +(((this.cbasico2 * this.user.parametros.parametros.porciento) / 100).toFixed(2)); // this.tarifa.porciento
            this.porc = this.porcBasico;
            this.tarifa.auto = +(+(+(this.cbasico2 - banderaauto)) / (this.mDistanseKm - 2.5)).toFixed(2);
            console.log("cbasico2: " + this.cbasico2); //search input will display
            console.log("banderaauto: " + banderaauto);
            console.log("mDistanseKm: " + this.mDistanseKm);
            /*    console.log("tarifa.auto: "+this.tarifa.auto) */
            // this.cbasico=+((this.mDistanseKm-2.5)*basico+banderaauto).toFixed(2)
        }
        if (this.tipo == 2) {
            // this.cconfort2=+(total2-fix2).toFixed(2)
            this.cconfort2 = Number(this.autocomplete);
            this.porcConfort = +(((this.cconfort2 * this.user.parametros.parametros.porciento) / 100).toFixed(2));
            this.porc = this.porcConfort;
            this.tarifa.minivan = +(+(+(this.cconfort2 - banderaminivan)) / (this.mDistanseKm - 2.5)).toFixed(2);
        }
        if (this.tipo == 3) {
            // this.cmicrob2=+(total3-fix3).toFixed(2)
            this.cmicrob2 = Number(this.autocomplete);
            this.porcMicro = +(((this.cmicrob2 * this.user.parametros.parametros.porciento) / 100).toFixed(2));
            this.porc = this.porcMicro;
            this.tarifa.microbus = +(+(+(this.cmicrob2 - banderamicrobus)) / (this.mDistanseKm - 2.5)).toFixed(2);
        }
        // basico=+((+(this.cbasico2-banderaauto))/(this.mDistanseKm-2.5)).toFixed(2)
        // this.cconfort=+((this.mDistanseKm-2.5)*confort+banderaminivan).toFixed(2)
        // this.cmicrob=+((this.mDistanseKm-2.5)*microbus+banderamicrobus).toFixed(2)
        /*
              let fix=+(this.total).toFixed(2)
              this.total2=this.Mathceil10(fix,1)
              this.porciento=+(this.total2-this.total).toFixed(2)
              console.log("total: " + this.total2);
               */
        var fix1 = basico;
        var fix2 = confort;
        var fix3 = microbus;
        var total1 = this.Mathceil10(fix1, 1);
        var total2 = this.Mathceil10(fix2, 1);
        var total3 = this.Mathceil10(fix3, 1);
        // this.cbasico2=+(total1-fix1).toFixed(2)
        this.tarifa.auto = total1;
        // this.cconfort2=+(total2-fix2).toFixed(2)
        this.tarifa.minivan = total2;
        // this.cmicrob2=+(total3-fix3).toFixed(2)
        this.tarifa.microbus = total3;
        //  this.placeholder=this.mDistanseKm
        // calcula a partir de la distancia el costo del viaje
        /*  this.mDistanseKm=this.autocomplete
     
         let basico=this.tarifa.auto    // ver despues
         let confort=this.tarifa.minivan    // ver despues
         let microbus=this.tarifa.microbus    // ver despues
         let banderaauto = Number(this.tarifa.band_auto)   //350
         let banderaminivan = Number(this.tarifa.band_minivan)
         let banderamicrobus = Number(this.tarifa.band_microbus)
     
         if(this.mDistanseKm<2.5){
           this.cbasico=+(banderaauto)
           this.cconfort=+(banderaminivan)
           this.cmicrob=+(banderamicrobus)
     
           // this.cbasico2=+(total1-fix1).toFixed(2)
           this.cbasico2=+(banderaauto)
     
           // this.cconfort2=+(total2-fix2).toFixed(2)
           this.cconfort2=+(banderaminivan)
     
           // this.cmicrob2=+(total3-fix3).toFixed(2)
           this.cmicrob2=+(banderamicrobus)
     
         }else{
           this.cbasico=+((this.mDistanseKm-2.5)*basico+banderaauto).toFixed(2)
           this.cconfort=+((this.mDistanseKm-2.5)*confort+banderaminivan).toFixed(2)
           this.cmicrob=+((this.mDistanseKm-2.5)*microbus+banderamicrobus).toFixed(2)
     
     
           let fix1=this.cbasico
           let fix2=this.cconfort
           let fix3=this.cmicrob
     
           let total1=this.Mathceil10(fix1,1)
           let total2=this.Mathceil10(fix2,1)
           let total3=this.Mathceil10(fix3,1)
     
           // this.cbasico2=+(total1-fix1).toFixed(2)
           this.cbasico2=total1
     
           // this.cconfort2=+(total2-fix2).toFixed(2)
           this.cconfort2=total2
     
           // this.cmicrob2=+(total3-fix3).toFixed(2)
           this.cmicrob2=total3
         }
     
       //  this.placeholder=this.mDistanseKm */
    };
    TaxisPage.prototype.hideSearch = function () {
        this.autocomplete = "";
    };
    TaxisPage.prototype.yourSearchFunction = function () {
        console.log("yourSearchFunction: " + this.autocomplete); //search input will display
    };
    TaxisPage.prototype.updateSearchResults2 = function (data) {
        console.log("updateSearchResults: " + this.autocomplete2); //search input will display
        // this.selectedAddress=data
    };
    TaxisPage.prototype.hideSearch2 = function () {
        this.autocomplete2 = "";
    };
    TaxisPage.prototype.yourSearchFunction2 = function () {
        console.log("yourSearchFunction: " + this.autocomplete2); //search input will display
    };
    TaxisPage.prototype.revisar = function (carro) {
        var a = this.autocomplete.toLowerCase();
        var b = carro.name.toLowerCase();
        if (b.includes(a)) {
            return true;
        }
        else {
            return false;
        }
    };
    TaxisPage.prototype.focused = function (event) {
        this.focus = false;
        this.focus2 = false;
        this.validGeocode = false;
        this.tempAddress = this.selectedAddress2;
        this.selectedAddress2 = "";
        this.cd.detectChanges();
        console.log("seleccionada la barra ");
        console.log("event: " + event.value);
    };
    TaxisPage.prototype.checkBlur = function (event) {
        this.focus = false;
        // this.validGeocode=true
        if (this.selectedAddress2 == "") {
            this.validGeocode = false;
        }
        else {
            //this.validGeocode=true // habilitados origen/destino
            var centro = this.marker3.getLatLng();
            var LatCentro = centro.lat;
            var LngCentro = centro.lng;
            var lat2 = this.resultReverseGeocode.lat; //23.076696671688204 
            var lng2 = this.resultReverseGeocode.lon; //-82.46484607458116
            var difLat = Math.abs(lat2 - LatCentro); //+(lat2-LatCentro) 
            var difLng = Math.abs(lng2 - LngCentro); //+(lng2 -LngCentro)
            console.log("difLat: " + difLat + " difLng: " + difLng);
            if (difLat < 0.001) {
                if (difLng < 0.001) {
                    // this.selectedAddress2 = firstName + secondName + thirdName 
                    console.log("original recortado: " + this.selectedAddress2);
                    this.validGeocode = true;
                }
                else {
                    this.validGeocode = false;
                }
            }
            else {
                this.validGeocode = false;
            }
        }
        /*   if(this.botones&&!this.validDesapear){
        
          }else{
            this.selectedAddress2 = this.tempAddress
          }
         */
        this.selectedAddress2 = this.tempAddress;
        var centro = this.marker3.getLatLng();
        this.map.setView([centro.lat, centro.lng], 15);
        console.log("salida de la busqueda ");
        console.log("event: " + event.value);
        this.cd.detectChanges();
        // this.SEARCHpLACE1(this.marker3)
    };
    TaxisPage.prototype.search = function (event) {
        // event.target.blur();
        // esconder el teclado sacando de foco la barra de busqueda
        // this.searchbar._fireBlur
        //this.searchbar.clearInput(null);
        // this.renderer1.invokeElementMethod(event.target, 'blur');
        var _this = this;
        //this.addresses2 =""
        console.log("llego a la función buscar por palabra");
        console.log("event: " + event.value); //search input will display
        //this.validDesapear2=true
        var searchTerm = event.value.toLowerCase();
        if (searchTerm && searchTerm.length > 0) {
            /*     this.mapboxService.search_word(searchTerm).subscribe((features: Feature[]) => {
                    this.addresses = features.map(feat => feat.place_name);
                   //  this.addresses = features.map(feat => feat.center);
                   // console.log("center: "+this.addresses)
                  });
             */
            this.selectedAddress2 = "";
            this.validGeocode = false; // deshabilitados origen/destino 
            // this.loadingService.presentLoading5();    
            this.gasolineraService.getDataPersona23(searchTerm).then(function (result) {
                _this.addresses = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
                console.log("llego al usuario a forward geoc ");
                console.log("this.addresses: " + JSON.stringify(_this.addresses));
                var a = JSON.stringify(_this.addresses);
                if (a == "[]") {
                    _this.presentToast4("No hay resultados. Pruebe con el nombre de calle  o del lugar, solos.");
                }
                _this.searchbar.inputBlurred();
                _this.validGeocode = false; // deshabilitados origen/destino
                _this.cd.detectChanges();
                _this.validDesapear2 = false;
                for (var _i = 0, _a = _this.addresses; _i < _a.length; _i++) {
                    var carro = _a[_i];
                }
                // this.loadingService.dismissLoading();
                // this.startBackgroundGeolocation()
            }, function (err) {
                console.log(err);
                _this.validDesapear2 = false;
                // this.loadingService.presentError();
                // this.loadingService.dismissLoading();
            });
        }
        else {
            this.addresses = [];
            this.selectedAddress2 = this.tempAddress;
            // this.validGeocode=true // habilitados origen/destino 
            if (this.selectedAddress2 == "") {
                this.validGeocode = false;
            }
            else {
                this.validGeocode = true; // habilitados origen/destino
                /*      var centro =this.marker3.getLatLng();
                     let LatCentro = centro.lat
                     let LngCentro = centro.lng
                     
                     let lat2 = this.resultReverseGeocode.lat //23.076696671688204
                     let lng2= this.resultReverseGeocode.lon //-82.46484607458116
                     let difLat = Math.abs(lat2-LatCentro) //+(lat2-LatCentro)
                     let difLng = Math.abs(lng2 -LngCentro) //+(lng2 -LngCentro)
                     
                     console.log("difLat: " +difLat+ " difLng: "+ difLng)
                
                     if(difLat<0.001){
                       if(difLng<0.001){
                         // this.selectedAddress2 = firstName + secondName + thirdName
                         console.log("original recortado: "+ this.selectedAddress2)
                         this.validGeocode=true
                       }else{
                         this.validGeocode=false
                       }
                     }else{
                       this.validGeocode=false
                     }
                 */
            }
        }
        /*
              if(this.addresses.length > 0){
                this.addresses.pop()
                this.addresses.push(nam)
               // this.selectedAddress = nam;
                this.addresses2 = nam;
              }else{
                this.addresses.push(nam)
               // this.selectedAddress = nam;
                 this.addresses2 = nam;
              }
            */
    };
    TaxisPage.prototype.onSelect = function (address) {
        this.searchbar.inputBlurred();
        this.cd.detectChanges();
        console.log("address: " + address.display_name); //search input will display
        console.log("point: " + address.lat);
        this.resultReverseGeocode = address;
        console.log("resultReverseGeocode: " + JSON.stringify(this.resultReverseGeocode));
        this.selectedAddress2 = address.display_name;
        //recortar nombre
        var fullname = this.selectedAddress2; //"Praveen Tripathi James";
        var names = fullname.split(",");
        var firstName = names[0];
        // let lastName = names[(names.length -1)];
        var secondName = names[1];
        var thirdName = names[2];
        // let fourthName =names[3];
        console.log("firstName: " + firstName);
        console.log("secondName: " + secondName);
        console.log("thirdName: " + thirdName);
        // console.log("fourthName: "+ fourthName)
        this.selectedAddress2 = firstName + secondName + thirdName;
        console.log("original recortado: " + this.selectedAddress2);
        this.tempAddress = this.selectedAddress2; // address.display_name;
        this.destinoname = this.selectedAddress2; //address.display_name;
        this.addresses = [];
        this.validDesapear2 = false;
        this.controlReverse = true;
        this.focus2 = false; // para en el "moveend" habilitar btn origen/destino
        // this.search(null)
        // this.addresses2 = address
        this.searchbar.clearInput(null);
        this.coord.push(+(address.lat));
        this.coord2.push(+(address.lon));
        this.map.setView([address.lat, address.lon], 15);
        // para centrar el mapa por que se cerro el teclado
        // Move input back to original location
        this.latitud = address.lat;
        this.longitud = address.lon;
        this.cerrado = true;
    };
    TaxisPage.prototype.searchPlace = function (event) {
        var destino = event.getLatLng();
        console.log("destino: " + destino.lat + destino.lng); //search input will display
        var coord = destino.lng + "," + destino.lat;
        var lat = destino.lat;
        var lng = destino.lng;
        /*
          this.mapboxService.search_gps_to_places(lat, lng).subscribe((features: Feature[]) => {
            this.addresses = features.map(feat => feat.place_name);
        
            console.log("destino: "+ this.addresses)    //search input will display
          }); */
    };
    //Cargar taxis disponibles
    TaxisPage.prototype.SEARCHpLACE = function (event) {
        var _this = this;
        this.marker3.setLatLng(this.map.getCenter());
        this.cd.detectChanges();
        var destino = event.getLatLng();
        // let coord:string=destino.lng+","+destino.lat
        var lat = destino.lat;
        this.coord.push(lat);
        var lat2 = this.coord.slice(-2).shift();
        var lat2f = lat2.toFixed(4);
        var latf = lat.toFixed(4);
        console.log("lat: " + lat);
        console.log("latf: " + latf);
        console.log("lat2f: " + lat2f);
        var lng = destino.lng;
        this.coord2.push(lng);
        var lng2 = this.coord2.slice(-2).shift();
        var lng2f = lng2.toFixed(4);
        var lngf = lng.toFixed(4);
        console.log("lng: " + lng);
        console.log("lngf: " + lngf);
        console.log("lng2f: " + lng2f);
        if (lngf == lng2f && latf == lat2f) {
        }
        else {
            console.log("llego a la función buscar por  coordenada");
            if (this.addresses.length > 0) {
                this.validDesapear2 = false;
            }
            else {
                this.searchbar.clearInput(null);
                // this.updateSearchResults2("Buscando lugar...")
                /*  this.selectedAddress2= "Buscando lugar..."
                 this.validGeocode=false
                 this.validDesapear2=true
                 
                 this.cd.detectChanges(); */
                // this.map.off
                // console.log("destino: "+ destino.lat+destino.lng)    //search input will display
                this.buscando = this.buscando + 1;
                console.log("buscando " + this.buscando);
                this.gasolineraService.getDataPersona22(lat, lng).then(function (result) {
                    // this.users2 
                    // console.log("llego al usuario " + JSON.stringify(result));
                    console.log("respuesta " + _this.buscando);
                    // console.log("buscando2 "+ this.buscando2);
                    if (result.place_id > 0) {
                        if (_this.addresses.length > 0) {
                        }
                        else {
                            _this.buscando2 = _this.buscando2 + 1;
                            if (_this.buscando2 == _this.buscando) {
                                //console.log("buscando2 "+ this.buscando2);
                                _this.validDesapear2 = false;
                                var nam = result.display_name; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                console.log("llego a reverse geo " + nam);
                                // this.validGeocode=true
                                var centro = _this.marker3.getLatLng();
                                var LatCentro = centro.lat;
                                var LngCentro = centro.lng;
                                var lat2_1 = _this.resultReverseGeocode.lat; //23.076696671688204 
                                var lng2_1 = _this.resultReverseGeocode.lon; //-82.46484607458116
                                var difLat = Math.abs(lat2_1 - LatCentro); //+(lat2-LatCentro) 
                                var difLng = Math.abs(lng2_1 - LngCentro); //+(lng2 -LngCentro)
                                console.log("difLat: " + difLat + " difLng: " + difLng);
                                if (difLat < 0.001) {
                                    if (difLng < 0.001) {
                                        // this.selectedAddress2 = firstName + secondName + thirdName 
                                        console.log("original recortado: " + _this.selectedAddress2);
                                        _this.validGeocode = true;
                                    }
                                    else {
                                        _this.validGeocode = false;
                                    }
                                }
                                else {
                                    _this.validGeocode = false;
                                }
                                _this.searchbar.clearInput(null);
                                // this.updateSearchResults2(nam)
                                _this.addresses3[_this.buscando - 1] = nam; // JSON.stringify(data)
                                console.log("this.addresses3[] = " + _this.addresses3.toString());
                                // this.selectedAddress2=nam
                                // this.destinoname=nam
                                // this.searchbar.clearInput(null);
                                _this.marker3.setLatLng(_this.map.getCenter());
                                _this.cd.detectChanges();
                            }
                        }
                        // parte de buscar al negocio si este no se ha recibido pero hay conexión
                        /*
                              if(!this.auto2.tax&&!this.cargando){
                                this.cargarTaxisDisponibles()
                        
                              } */
                    }
                    /*             console.log("this.addresses3.length = " +this.addresses3.length);
                                console.log("buscando "+ this.buscando);
                                let int=this.addresses3.length
                                let count=0
                                for (let carro of this.addresses3) {
                                  // JSON.stringify(data)
                                    count++
                    
                                    if(this.buscando==count){
                                      if(int==count){
                                        this.selectedAddress2=carro
                                        console.log("selectedAddress2 = " +this.selectedAddress2);
                                        console.log("count = " +count);
                                      }
                                    }
                    
                                  }
                    
                                  this.cd.detectChanges();    */
                    //  this.loadingService.dismissLoading();
                    // this.startBackgroundGeolocation()
                }, function (err) {
                    console.log(err);
                    _this.validDesapear2 = false;
                    _this.buscando = 2;
                    _this.buscando2 = 2;
                    //  this.loadingService.presentError();
                    // this.loadingService.dismissLoading();
                });
                /*            console.log("this.addresses3.length = " +this.addresses3.length);
                           console.log("buscando "+ this.buscando);
                           let int=this.addresses3.length
                           let count=0
                           for (let carro of this.addresses3) {
                             // JSON.stringify(data)
                               count++
                
                               if(this.buscando==count){
                                 if(int==count){
                                   this.selectedAddress2=carro
                                   console.log("selectedAddress2 = " +this.selectedAddress2);
                                   console.log("count = " +count);
                                 }
                               }
                
                             }
                
                             this.cd.detectChanges();    */
            }
        }
        // this.presentToast4('Un solo botón para hacer su pedido');
    };
    //Dialogo para el inicio de la pagina
    TaxisPage.prototype.openDialogo7 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",
                            //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                            // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                            // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                            message: '¿Desea cancelar el pedido?  ',
                            buttons: [
                                {
                                    text: 'Si',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.tarifa2 = false;
                                        _this.oferta = false;
                                        _this.vistaoferta = "";
                                        _this.cancel();
                                    }
                                },
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    //Dialogo para el inicio de la pagina
    TaxisPage.prototype.openDialogo8 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",
                            //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                            // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                            // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                            message: '¿Desea cancelar el viaje?  ',
                            buttons: [
                                {
                                    text: 'Si',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        _this.motivos();
                                    }
                                },
                                {
                                    text: 'No',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.whait = function () {
        var _this = this;
        setTimeout(function () {
            _this.getTrabajando();
            /*
            if(this.adm||this.gest){
              
            }else{
              this.delTax2()
            }
       */
            /// this.tabBarElement.style.display = 'flex';
        }, 6000);
    };
    TaxisPage.prototype.destinosBoton = function () {
        var _this = this;
        setTimeout(function () {
            _this.destinoBoton = !_this.destinoBoton;
            if (_this.destinoBoton) {
                // this.myColor = "#fede59"
            }
            else {
                // this.myColor = "#4B77BE"
            }
            if (_this.counti < 100) {
                _this.destinosBoton();
                _this.counti++;
            }
            /// this.tabBarElement.style.display = 'flex';
        }, 5000);
    };
    TaxisPage.prototype.destinosBoton2 = function () {
        var _this = this;
        setTimeout(function () {
            if (!_this.validDesapear) {
                var lat1 = _this.centro.lat;
                var lng1 = _this.centro.lng;
                // 3 seg despues
                var centro2 = _this.map.getCenter();
                var lat2 = centro2.lat;
                var lng2 = centro2.lng;
                _this.getPlaceName(lat2, lng1);
                console.log("centro1: " + lat1 + " : " + lng1);
                console.log("centro2: " + lat2 + " : " + lng2);
                if (lat1 == lat2) {
                    if (lng1 == lng2) {
                        console.log("mismo lugar ");
                        _this.validDesapear2 = true;
                        _this.SEARCHpLACE1(_this.marker3);
                    }
                }
                else {
                    console.log("lugares distintos ");
                }
            }
            /// this.tabBarElement.style.display = 'flex';
        }, 4000);
    };
    TaxisPage.prototype.starGPS = function () {
        var _this = this;
        console.log(" funcion del GPS");
        setTimeout(function () {
            _this.destinoBoton = !_this.destinoBoton;
            _this.startBackgroundGeolocation();
            _this.starGPS();
        }, 8000);
    };
    TaxisPage.prototype.openDialogoDinamic = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var j, i, alert_3, _loop_4, this_3, i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        /*
                          
                          for (let carro of this.pedidos) {
                             this.dest.push(JSON.parse(carro.dat))
                        
                             }   */
                        console.log("ver tamaño: " + this.pedidos.length);
                        if (!(this.pedidos.length == 0)) return [3 /*break*/, 1];
                        this.presentToast4("Usted no tiene destinos guardados");
                        return [3 /*break*/, 4];
                    case 1:
                        j = 0;
                        for (i = 0; i < this.pedidos.length; i++) {
                            if (!this.pedidos[i].oculto) {
                                j++;
                            }
                        }
                        if (!(j > 0)) return [3 /*break*/, 3];
                        alert_3 = this.alertController.create();
                        alert_3.setTitle("Seleccione el destino:");
                        alert_3.setSubTitle("(Si desea eliminar un destino, debe borrar el pedido)");
                        _loop_4 = function () {
                            var car = this_3.pedidos[i];
                            var dataproxy = i;
                            var dataproxy2 = i + 100;
                            /*   alert.addInput ({
                                type: 'checkbox',
                                label:car.destinoname ,//" etiqueta "+i,
                                value: i.toString(),
                                checked: false
                                
                              });
                             */
                            if (!this_3.pedidos[dataproxy].oculto && !this_3.pedidos[dataproxy].prov) {
                                if (car.dat.destinoname) {
                                    alert_3.addInput({
                                        type: 'checkbox',
                                        label: car.dat.destinoname,
                                        value: i.toString(),
                                        handler: function () {
                                            _this.origename = _this.selectedAddress2;
                                            console.log('origename: ' + _this.origename);
                                            var inputArray = alert_3.data.inputs;
                                            //let myValue = inputArray[dataproxy]['value'];
                                            console.log('myValue 1 ' + dataproxy.toString());
                                            inputArray.map(function (input) {
                                                if (input['value'] !== dataproxy.toString()) {
                                                    input['checked'] = false;
                                                    console.log('input ' + input['checked']);
                                                }
                                            });
                                        }
                                    });
                                }
                                /*
                                alert.addInput({
                                  type: 'checkbox',
                                  label: car.dat.destinoname , //this.titleArray[i].toString(),
                                  value: '10' + i.toString(),
                                  handler: () => {
                                    
                                    let inputArray = <Array<object>>alert.data.inputs;
                                   // let myValue = inputArray[dataproxy]['value'];
                                    console.log ('myValue 2 ' +dataproxy2)
                                     inputArray.map((input) => {
                                      if (input['value'] !== dataproxy2.toString()){
                                        input['checked'] = false;
                                        console.log ('input ' +input['checked'])
                                      }
                                     })
                                    }
                                  })
                                 */
                            }
                        };
                        this_3 = this;
                        for (i = 0; i < this.pedidos.length; i++) {
                            _loop_4();
                        }
                        /*alert.data.inputs.forEach((input) => {
                          console.log ('forEach ' +input.value)
                          console.log ('checked ' +input.checked)
                        
                        
                           if(input.value){
                            input.checked = true;
                          }else{
                            input.checked = false;
                          }
                          
                        
                        });  */
                        alert_3.addButton('cancel');
                        alert_3.addButton({
                            text: 'ok',
                            handler: function (data) {
                                console.log('hi ' + data);
                                /*   if (this.marker4) { // Borra el marcador del gps
                                    this.marker4.removeFrom(this.map);
                                  }
                               */
                                if (data > 0) {
                                }
                                else {
                                    _this.presentToast4("Selecione un destino o Cancel.");
                                }
                                if (_this.moveEnd) {
                                }
                                _this.moveEnd = false;
                                if (_this.viaje !== 2) {
                                    //tomar el origen
                                    _this.origen = _this.map.getCenter();
                                    //creacion del marcador azul con el origen
                                    /*           var blueIcon = new L.Icon({
                                              // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                                              // iconUrl: 'assets/libs/leaflet/images/marker-icon.png',//icono sustituido marker-shadow
                                                iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',//icono sustituido
                                              // shadowUrl: 'assets/libs/leaflet/images/marker-shadow.png',
                                                // iconSize: [40, 40], // size of the icon
                                                iconSize: [30, 40], // size of the icon
                                              // shadowSize:   [50, 64], // size of the shadow
                                                iconAnchor:   [15, 37], // point of the icon which will correspond to marker's location
                                              
                                              });
                                              this.marker4 = L.marker([this.origen.lat, this.origen.lng], {draggable: false, riseOnHover:false, icon: blueIcon});
                                              
                                              this.marker4.addTo(this.map);
                                              this.marker4.setLatLng(this.map.getCenter());
                                     */
                                    //this.viaje++;
                                }
                                _this.origen = _this.map.getCenter();
                                console.log('origen:  ', _this.origen);
                                // ir al lugar
                                _this.destinoname = "";
                                var lat;
                                var lng;
                                var dataproxy = data;
                                lat = _this.pedidos[dataproxy].dat.negoPosLat;
                                lng = _this.pedidos[dataproxy].dat.negoPosLng;
                                console.log('destinoname ', _this.pedidos[dataproxy].dat.destinoname);
                                _this.destinoname = _this.pedidos[dataproxy].dat.destinoname;
                                /*             if(dataproxy<100){
                                              
                                              lat = this.pedidos[dataproxy].dat.negoPosLat
                                              lng = this.pedidos[dataproxy].dat.negoPosLng
                                              console.log ('destinoname ', this.pedidos[dataproxy].dat.destinoname)
                                              this.destinoname = this.pedidos[dataproxy].dat.destinoname
                                           
                                            }else{
                                              let res=dataproxy-100
                                
                                              lat = this.pedidos[res].dat.curPosLat
                                              lng = this.pedidos[res].dat.curPosLng
                                              console.log ('origename ', this.pedidos[res].dat.origename)
                                              this.destinoname = this.pedidos[res].dat.origename
                                            }
                                             */
                                console.log('dataproxy ', dataproxy);
                                // let dataproxy = 'hi' +data
                                console.log('hi ', lat);
                                _this.map.setView([lat, lng], 15); //23.103592,-82.466592
                                // this.marker3.setLatLng(this.map.getCenter()); 
                                //this.marker3.setLatLng(lat, lng); 
                                // trazar la ruta  
                                // this.viaje=2;
                                //  this.mostraruta();    
                            }
                        });
                        return [4 /*yield*/, alert_3.present()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        this.presentToast4("Usted no tiene destinos guardados");
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.verMensajes4 = function () {
        //  this.loadingService.presentLoading();
        var _this = this;
        // let carrito = []
        this.gasolineraService.getMensajesNego3(this.id).subscribe(function (response) {
            _this.users4 = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            console.log(response);
            // this.cantUsuarios=0
            //this.buscaper2=false      
            for (var _i = 0, _a = _this.users4; _i < _a.length; _i++) {
                var carro = _a[_i];
                // console.log("idtc : "+carro.idtc)
                if (_this.id == carro.idtc) {
                    //ç this.cantUsuarios++ 
                    // this.dest.push(JSON.parse(carro.dat)) 
                    _this.hayped2 = true;
                }
            }
            if (_this.hayped2) {
                _this.destinosBoton();
            }
            //console.log(this.carrito);
            //console.log(carro.prd);
            // this.loadingService.dismissLoading();
        }, function (error) {
            // this.loadingService.presentError();
            // this.loadingService.dismissLoading();
        });
    };
    TaxisPage.prototype.what6 = function () {
        //let categorias=JSON.parse(this.auto2.tip)
        var porciento = +(this.tarifa.porciento);
        var total;
        var tip;
        if (this.tipo == 1) {
            tip = 'Básico   ';
            total = this.cbasico2;
            //this.porcBasico= +(((total*porciento)/100).toFixed(2)) 
            this.porc = this.porcBasico;
        }
        else if (this.tipo == 2) {
            tip = 'Moto   ';
            total = this.cconfort2;
            //this.porcConfort= +(((total*porciento)/100).toFixed(2))
            this.porc = this.porcConfort;
        }
        else if (this.tipo == 3) {
            // this.myAlert_show3('micro:   '+ this.cmicrob+' Pesos', this.cmicrob)
            tip = 'Microbús   ';
            total = this.cmicrob2;
            //this.porcMicro= +(((total*porciento)/100).toFixed(2))
            this.porc = this.porcMicro;
        }
        this.equipaje = false;
        this.mascota = false;
        var ruta = this.ruta;
        console.log("origename: " + this.origename);
        console.log("destinoname: " + this.destinoname);
        var curPos2 = this.destino;
        var pedido = {
            "id": " ",
            "nom": " ",
            "dir": "",
            "telpedido": " ",
            "tel": " ",
            "envio": 1.09,
            "total": total,
            "porc": this.porc,
            "curPosLat": curPos2.lat,
            "curPosLng": curPos2.lng,
            "negoPosLat": this.origen.lat,
            "negoPosLng": this.origen.lng,
            "tar": " ",
            "telneg": " ",
            "origename": this.origename,
            "destinoname": this.destinoname,
        };
        // pedido = JSON.parse(carro.dat); 
        // console.log("pedido "+pedido.curPosLng);
        // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
        // this.ruta= "https://www.google.com/maps?saddr="+curPos2.lat+","+curPos2.lng+"&daddr="+this.origen.lat+","+this.origen.lng
        // let ruta= "https://www.google.com/maps?saddr="+pedido.curPosLat+","+pedido.curPosLng+"&daddr="+pedido.negoPosLat+","+pedido.negoPosLng
        var origenGoo = " https://maps.google.com/?q=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        var origenMapsme = "https://dlink.maps.me/map?ll=" + pedido.negoPosLat + "," + pedido.negoPosLng;
        var origenOsmand = "https://www.openstreetmap.org/#map=18/" + pedido.negoPosLat + "/" + pedido.negoPosLng;
        var destinoGoo = " https://maps.google.com/?q=" + pedido.curPosLat + "," + pedido.curPosLng;
        var destinoMapsme = "https://dlink.maps.me/map?ll=" + pedido.curPosLat + "," + pedido.curPosLng;
        var destinoOsmand = "https://www.openstreetmap.org/#map=18/" + pedido.curPosLat + "/" + pedido.curPosLng;
        var message = " Ruta: " + ruta +
            '\n' + " Lugar de origen: " + pedido.origename + '\n' + " Origen Google: " + origenGoo + //'\n'+" Origen OSM: "+origenOsmand+
            '\n' + " Lugar de destino: " + pedido.destinoname + '\n' + " Destino Google: " + destinoGoo + //'\n'+" Destino OSM: "+destinoOsmand+
            //  '\n'+ " Pasajeros: "+pasajeros +'\n'+ " Hora: "+hora +'\n'+ " Día: "+ dia +'\n'+" Equipaje: "+equip +'\n'+" Mascotas: "+masco +'\n'+ " Tipo auto: "+vehiculo+'\n'+" Costo: "+carro.mensaje+'\n'+" Comisión: "+carro.mensajeprincipal+'\n';
            '\n' + " Tipo auto: " + tip + '\n' + " Costo: " + total + '\n' + " Comisión: " + this.porc + " , que es el " + porciento + "%" + '\n';
        console.log("message success : " + message);
        //this.shareImageNi this.siteName
        this.socialSharing.shareViaWhatsApp(message, '', '').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
        /*
        "prd",
        [{"pasajeros":"4","equipaje":true,"animales":true,"otros":"vacío","dia":"26 1","hora":"06:42"}]
      
        "dat",
        {"id":27,
        "ven":"Taxi dueño Ta Buena",
        "nom":"ver gestor",
        "telpedido":"1234567",
        "envio":363,
        "total":"363 CUP",
        "porc":36.3,
        "curPosLat":23.1210416607113,
        "curPosLng":-82.37589597702028,
        "negoPosLat":23.113581950347523,
        "negoPosLng":-82.36658334732057,
        "telneg":"5295166993",
        "moneda":"cupflag"}
        
        */
        //let pedido=JSON.parse(this.carro.prd)
        // let datos=JSON.parse(this.carro.dat)
        // console.log("json pedido "+pedido);
        // console.log("json datos "+datos); 
    };
    TaxisPage.prototype.what4 = function () {
        // +" Costo: "+this.total+'\n'
        // let message = " Pedido: "+this.numpedido  +'\n'+" Ruta: "+this.ruta+'\n'+" Origen: "+this.origename+'\n'+" Destino: "+this.destinoname+ " Pasajeros: "+this.vtelefono2 +'\n'+ " Hora: "+this.myDate2 +'\n'+ " Día: "+ this.myDate1 +'\n'+" Equipaje: "+equip +'\n'+" Mascotas: "+masco +'\n'+ " Tipo auto: "+tipo+'\n';
        var message = "Hola he realizado el pedido: " + this.pedid;
        this.socialSharing.shareViaWhatsAppToReceiver(this.auto2.tel, message, ' ').then(function (res) {
            console.log("success : " + res);
        }).catch(function (error) {
            console.log("failed : " + error);
        });
        /*    var  element = document.createElement('a') as HTMLElement;
           element.setAttribute('href', 'https://wa.me/5356081854?text=Hello%20How%20are%20you');
           element.setAttribute('style', 'display:none;');
           element.click(); */
    };
    TaxisPage.prototype.llamarNumero2 = function () {
        this.callNumber.callNumber(this.auto2.tel, true)
            .then(function (res) {
        })
            .catch(function (err) { return console.log('Error launching dialer', err); });
        /*
          if(this.id=="000000")
          {
           this.presentToast4('Su versión de Android es superior a 9 usted no puede inscribirse como usuario para estar disponible en el mapa pero si utilizar todas las funcionalidades de la aplicación ')
                      
          }else{
              if(this.existetel2){
        
              }else{
                // mostra menu para ir a la pagina de inscripcion
                this.inscripcion()
              }
          } */
    };
    TaxisPage.prototype.motivos = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: 'Información',
                            // subTitle: 'Alert subtitle...',
                            enableBackdropDismiss: true,
                            message: 'Seleccione el motivo para cancelar el viaje ',
                            buttons: [
                                {
                                    text: 'ACEPTAR',
                                    handler: function (data) {
                                        console.log(data);
                                        _this.tarifa2 = false;
                                        //this.presentToast4('OK clicked. Data -> ' + data ); 
                                        // this.negocio=data // para A en save+ JSON.stringify(data)
                                        switch (data) {
                                            case "1":
                                                _this.nombrenegocio = "	Se demoró el chofer en llegar";
                                                break;
                                            case "2":
                                                _this.nombrenegocio = "	La APK no marca mi posición";
                                                break;
                                            case "3":
                                                _this.nombrenegocio = "	Belleza";
                                                break;
                                            case "4":
                                                _this.nombrenegocio = "	Del hogar";
                                                break;
                                            case "5":
                                                _this.nombrenegocio = "	Estaba haciendo una prueba";
                                                break;
                                            case "6":
                                                _this.nombrenegocio = "	Mascotas";
                                                break;
                                            case "7":
                                                _this.nombrenegocio = "	Fotos";
                                                break;
                                            case "8":
                                                _this.nombrenegocio = "	Modista sastre";
                                                break;
                                            case "9":
                                                _this.nombrenegocio = "	Empleada domestica";
                                                break;
                                            case "10":
                                                _this.nombrenegocio = "	Artesanos";
                                                break;
                                            case "11":
                                                _this.nombrenegocio = "	Clases";
                                                break;
                                            case "12":
                                                _this.nombrenegocio = "	Reparaciones ";
                                                break;
                                            case "13":
                                                _this.nombrenegocio = "	Otras";
                                                break;
                                            default:
                                                _this.nombrenegocio = " Otras";
                                        }
                                        // this.nombrenegocio=JSON.stringify(data.name)
                                        _this.cancelapi();
                                    },
                                    role: ''
                                },
                                {
                                    text: 'CANCELAR',
                                    handler: function (data) {
                                        // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                        data = 13;
                                        // this.negocio=data // para A en save
                                        _this.nombrenegocio = " Otros";
                                        //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                        //value: '13'
                                    },
                                    role: 'cancel'
                                }
                            ],
                            inputs: [
                                {
                                    type: 'radio',
                                    id: 'opt1',
                                    name: 'opt1',
                                    'label': 'Se demoró el chofer en llegar',
                                    value: '1',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt2',
                                    name: 'opt2',
                                    'label': '	La APK no marca mi posición',
                                    value: '2',
                                    'checked': false
                                },
                                /* {
                                type: 'radio',
                                id: 'opt3',
                                name: 'opt3',
                                'label': '	Belleza',
                                value: '3',
                                'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt4',
                                name: 'opt4',
                                'label': '	Del hogar',
                                value: '4',
                                'checked': false
                                }, */
                                {
                                    type: 'radio',
                                    id: 'opt5',
                                    name: 'opt5',
                                    'label': '	Estaba haciendo una prueba',
                                    value: '5',
                                    'checked': false
                                },
                                /* {
                                type: 'radio',
                                id: 'opt6',
                                name: 'opt6',
                                'label': '	Mascotas',
                                value: '6',
                                'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt7',
                                name: 'opt7',
                                'label': '	Fotos',
                                value: '7',
                                'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt8',
                                name: 'opt8',
                                'label': '	Modista sastre',
                                value: '8',
                                'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt9',
                                name: 'opt9',
                                'label': '	Empleado doméstico',
                                value: '9',
                                'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt10',
                                name: 'opt10',
                                'label': '	Artesanos',
                                value: '10',
                                'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt11',
                                name: 'opt11',
                                'label': '	Clases',
                                value: '11',
                                'checked': false
                                },
                                {
                                type: 'radio',
                                id: 'opt12',
                                name: 'opt12',
                                'label': '	Reparaciones ',
                                value: '12',
                                'checked': false
                                }, */
                                {
                                    type: 'radio',
                                    id: 'opt13',
                                    name: 'opt13',
                                    'label': '	Otro',
                                    value: '13',
                                    'checked': false
                                },
                            ]
                        })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.cancelapi = function () {
        /*   let myObjStr= JSON.parse(this.dat)
          myObjStr.motivo = this.nombrenegocio
          let dat = JSON.stringify(myObjStr)
         */
        var _this = this;
        var pedido = this.idped;
        var dat = pedido.dat = {
            "id": pedido.dat.id,
            "ven": pedido.dat.ven,
            "nom": pedido.dat.nom,
            "porc": pedido.dat.porc,
            "envio": pedido.dat.envio,
            "total": pedido.dat.total,
            "moneda": pedido.dat.moneda,
            "curPosLat": pedido.dat.curPosLat,
            "curPosLng": pedido.dat.curPosLng,
            "origename": pedido.dat.origename,
            "telpedido": pedido.dat.telpedido,
            "negoPosLat": pedido.dat.negoPosLat,
            "negoPosLng": pedido.dat.negoPosLng,
            "destinoname": pedido.dat.destinoname,
            "motivo": this.nombrenegocio,
        };
        var i = { "est": "4",
            "dat": dat };
        console.log(i);
        var id = pedido.id;
        this.gasolineraService.updatePedido(i, id).then(function (result) {
            // console.log(result);
            // let user = JSON.parse(result[0])
            // console.log("user : "+user);
            if (result[0].idcl == _this.user.idcopia) {
                _this.presentToast4('Pedido cancelado');
                _this.cancelado = true; // para que al moverse el mapa no salga la ruta
                _this.cuentaApi();
                _this.cancel2();
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
        /*  this.gasolineraService.cancelPedidoNeg2(i)
        .then((result) => { // en la variable result esta lo que devuelve el servidor
          console.log(result);
          if(result.hello){
            
            this.presentToast4('Pedido cancelado');
           this.cancel2()
            //this.detalles3=true
            
          }else{
            this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
          }
        }, err => {
          console.log(err);
        });
         */
    };
    TaxisPage.prototype.cancelapi2 = function () {
        /*   let myObjStr= JSON.parse(this.dat)
          myObjStr.motivo = this.nombrenegocio
          let dat = JSON.stringify(myObjStr)
         */
        var _this = this;
        var pedido = this.idped;
        var dat = pedido.dat = {
            "id": pedido.dat.id,
            "ven": pedido.dat.ven,
            "nom": pedido.dat.nom,
            "porc": pedido.dat.porc,
            "envio": pedido.dat.envio,
            "total": pedido.dat.total,
            "moneda": pedido.dat.moneda,
            "curPosLat": pedido.dat.curPosLat,
            "curPosLng": pedido.dat.curPosLng,
            "origename": pedido.dat.origename,
            "telpedido": pedido.dat.telpedido,
            "negoPosLat": pedido.dat.negoPosLat,
            "negoPosLng": pedido.dat.negoPosLng,
            "destinoname": pedido.dat.destinoname,
            "motivo": "Cancelado por el chofer",
        };
        var i = { "est": "4",
            "dat": dat };
        console.log(i);
        var id = pedido.id;
        this.gasolineraService.updatePedido2(i, id).then(function (result) {
            // console.log(result);
            // let user = JSON.parse(result[0])
            // console.log("user : "+user);
            if (result[0].idcl == _this.user.idcopia) {
                _this.presentToast4('Pedido cancelado');
                _this.cuentaApi();
                _this.cancel2();
            }
            else {
                _this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
            }
        }, function (err) {
            console.log(err);
        });
        /*  this.gasolineraService.cancelPedidoNeg2(i)
        .then((result) => { // en la variable result esta lo que devuelve el servidor
          console.log(result);
          if(result.hello){
            
            this.presentToast4('Pedido cancelado');
           this.cancel2()
            //this.detalles3=true
            
          }else{
            this.presentToast4('No se ha podido realizar la operación, revise su conexión a internet');
          }
        }, err => {
          console.log(err);
        });
         */
    };
    TaxisPage.prototype.cuentaApi = function () {
        var _this = this;
        var id = this.user.idt;
        this.count = this.user.con;
        this.count++;
        this.count2++;
        this.user.con = this.count;
        console.log("count: " + this.count);
        // let  countString = ""
        // countString = count.toString()
        var i = {
            "con": this.count
            //  "nam": "MariasssS" , "tel": "7654321", "mail": "JpedroM@gmail.com"
        };
        this.gasolineraService.updatePersonaS(i, id).then(function (result) {
            // console.log(result);
            // let user = JSON.parse(result[0])
            //  console.log("user : "+user);
            if (_this.count2 > 2) {
                _this.presentToast4("Usted a cancelado varios pedidos, su usuario puede ser suspendido");
            }
        }, function (err) {
            console.log(err);
        });
    };
    TaxisPage.prototype.openDialogo6 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",  <strong>Origen</strong>.</br></br>
                            //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                            // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                            // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                            message: 'Somos <strong> Dondeando S.U.R.L</strong></br>'
                                + 'Para hacer un pedido, Mueva el mapa hasta que el marcador verde esté en el origen del viaje, luego oprima el botón de abajo que dice <strong>Origen</strong>.</br>Repita estos pasos para el <strong>Destino</strong>.</br>'
                                + '</br>Nota:</br> Para buscar un lugar, también puede escribir su nombre en la barra de direcciones. '
                                + '</br>Versión: 4.6.0 </br>  ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.openDialogo9 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",  <strong>Origen</strong>.</br></br>
                            //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                            // message:  'El recorrido se muestra a partir de su posición GPS y el de la casa Matris, en caso de no ser este el recorrido deseado, puede arrastrar los marcadores hasta el origen y el destino deseado. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                            // message:  'Mueva el mapa hasta que el marcador azul esté en el destino, luego oprima el botón de la calculadora para obtener el costo. Una vez obtenido, regrese al pedido con el botón superior de la flecha.  ',
                            message: '<strong>Usted no tiene un Origen válido, soluciones:</strong></br>'
                                + '1. Active el GPS</br>'
                                + '2. Mueva el mapa hasta el origen del viaje</br>'
                                + '3. Escriba el nombre del lugar o la calle en la barra de direcciones.</br>',
                            buttons: [
                                {
                                    text: 'Salir',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.valorar = function (carro) {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //  subTitle: "<strong>¡Información!</strong>",
                            //  message:  '¿Usted va a valorar el servicio?</br>',   
                            inputs: [
                                {
                                    name: 'comentario',
                                    type: 'textarea',
                                    //  id: 'inputAmount',
                                    placeholder: 'Puede comentar aquí'
                                }
                            ],
                            buttons: [
                                {
                                    text: 'Cancelar',
                                    role: 'cancel',
                                    //cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                }, {
                                    text: 'Enviar',
                                    //cssClass: this.tipo_taxi !== 1? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                        console.log(" comentario: " + blah.comentario);
                                    }
                                }
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.traceroute2 = function () {
        var _this = this;
        this.traceCount2++;
        /*   //creacion del marcador azul con el origen
          var blueIcon = new L.Icon({
           // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
           // iconUrl: 'assets/libs/leaflet/images/marker-icon.png',//icono sustituido marker-shadow
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',//icono sustituido
           // shadowUrl: 'assets/libs/leaflet/images/marker-shadow.png',
            // iconSize: [40, 40], // size of the icon
            iconSize: [30, 40], // size of the icon
           // shadowSize:   [50, 64], // size of the shadow
            iconAnchor:   [15, 37], // point of the icon which will correspond to marker's location
           
           });
      
      
            var marker41 = L.marker([this.origen.lat,this.origen.lng], {draggable: true, riseOnHover:false, icon: blueIcon});
            marker41.addTo(this.map);
      */
        /*        var ll2 = L.latLng([ this.origen.lat,this.origen.lng]);
              var mm = L.marker(ll2).addTo(this.map);
              mm.bindPopup("Hey i'm the second marker"); // 'routingerror', (e:any)=>
         */
        var latlngs = Array();
        //Get latlng from first marker
        //  latlngs.pop()
        // latlngs[0]=[]
        // latlngs.push(this.origen);
        this.hayLinea = true;
        var cont = 1;
        var lastDest = this.routes[0].coordinates[this.routes[0].coordinates.length - 1];
        this.routes[0].coordinates.forEach(function (coord, index) {
            // console.log(" element : "+ element )
            setTimeout(function () {
                console.log("traceroute element : " + coord.lat);
                //Get latlng from first marker
                if (cont < 1) {
                    latlngs.pop();
                    cont++;
                }
                else {
                    latlngs.push(coord);
                    if (_this.traceCount2 < 2) {
                        _this.polyline2 = L.polyline(latlngs, { color: 'blue', weight: 7, smoothFactor: 1 }).addTo(_this.active_polyline);
                        cont++;
                    }
                    if (lastDest.lat == coord.lat && _this.traceCount2 < 1) {
                        _this.active_polyline.clearLayers();
                        _this.traceroute();
                    }
                }
                // this.polyline2 = L.polyline(latlngs, {color: 'white',weight: 2,smoothFactor: 1}).addTo(this.map);
                //this.polyline2 = L.polyline(coord, {color: 'white',weight: 2,smoothFactor: 1});
                // marker4.setLatLng(coord.lat,coord.lng); 
                // this.marker3.setLatLng(coord.lat,coord.lng); 
            }, 2 * index);
        });
        this.active_polyline = L.featureGroup().addTo(this.map);
        this.active_polyline.clearLayers();
        // polyline = L.polyline(mypolyline).addTo(active_polyline);
    };
    TaxisPage.prototype.mostraruta2 = function () {
        this.moveEnd = true;
        this.vistatipo = '';
        if (this.map) {
            this.valid = false;
            this.vistatipomoneda = '';
            console.log(" instrucciones : " + JSON.stringify(this.routes2[0].instructions));
            this.summary = this.routes2[0].summary;
            var inputWaypoints2 = [];
            var inputWaypoints = this.routes2[0].inputWaypoints;
            /*
            
              for (let carro of inputWaypoints) {
                 inputWaypoints2.push(carro);
               }
               console.log(" inputWaypoints 2: "+ JSON.stringify(inputWaypoints2[0]))
             */
            this.origen = inputWaypoints[0].latLng;
            this.destino = inputWaypoints[1].latLng;
            console.log(" inputWaypoints origen: " + JSON.stringify(inputWaypoints[0]));
            console.log(" inputWaypoints destino: " + JSON.stringify(inputWaypoints[1]));
            //nuevo
            if (this.routeControl4) {
                this.map.removeControl(this.routeControl4);
            }
            /*
              this.routeControl4 =L.Routing.control({
               waypoints: [
                 L.latLng(this.origen.lat,this.origen.lng),
                 L.latLng(this.destino.lat,this.destino.lng)
               
               ],
                controls: {instructions: false},
              
               // units: 'imperial',
              // language: 'es-ES',
               instructions: false,
              show: false,
              showAlternatives:false,
               routeWhileDragging: false,
               //autoRoute: false,
              
               lineOptions: {
                 styles: [{
                   color: 'green',
                   opacity: 1,
                   weight: 8,
                   smoothFactor: 1
                   // lineCap:'round',
                   // linJoin:'round'
                 }]
               },
               
             }).addTo(this.map);
                */
            //fin
            this.routeControl4 = L.Routing.control({
                waypoints: [
                    L.latLng(this.origen.lat, this.origen.lng),
                    L.latLng(this.destino.lat, this.destino.lng)
                ],
                //  router: L.Routing.mapbox('pk.eyJ1IjoiaGFiYW5hc2VydmljZW50cm8iLCJhIjoiY2twZHQ3eXhnMXIwNDJvcDd2YzFzcDkycSJ9.eQ80vtUjN2QneGR6oVxH_w'),
                controls: { instructions: false },
                // pk.eyJ1IjoiYWxleGFuZGVyZ2xleiIsImEiOiJjanYxcHBzODEwdjdlNDRrY2gydjV3cXlkIn0.nDHSn40ldNVOtK2rz9-lNQ
                // units: 'imperial',
                language: 'es-ES',
                instructions: false,
                show: false,
                showAlternatives: false,
                routeWhileDragging: false,
                //autoRoute: false,
                lineOptions: {
                    styles: [{
                            color: 'red',
                            opacity: 1,
                            weight: 3,
                            smoothFactor: 1
                            // lineCap:'round',
                            // linJoin:'round'
                        }]
                },
            }).addTo(this.map);
        }
    };
    TaxisPage.prototype.mostraruta3 = function () {
        this.moveEnd = true;
        // this.loadingService.presentLoading()
        // this.vistaerror = '';
        this.vistatipo = '';
        if (this.map) {
            // nuevo
            this.valid = false;
            this.vistatipomoneda = '';
            console.log(" instrucciones : " + JSON.stringify(this.routes2[0].instructions));
            this.summary = this.routes2[0].summary;
            var inputWaypoints2 = [];
            var inputWaypoints = this.routes2[0].inputWaypoints;
            /*
            
              for (let carro of inputWaypoints) {
                 inputWaypoints2.push(carro);
               }
               console.log(" inputWaypoints 2: "+ JSON.stringify(inputWaypoints2[0]))
             */
            this.origen = inputWaypoints[0].latLng;
            this.destino = inputWaypoints[1].latLng;
            //nuevo
            if (this.routeControl4) {
                this.map.removeControl(this.routeControl4);
            }
            //this.destino2=this.marker3.getLatLng(); 
            this.routeControl4 = L.Routing.control({
                waypoints: [
                    L.latLng(this.origen.lat, this.origen.lng),
                    L.latLng(this.destino.lat, this.destino.lng)
                ],
                controls: { instructions: false },
                // units: 'imperial',
                language: 'es-ES',
                instructions: false,
                show: false,
                showAlternatives: false,
                routeWhileDragging: false,
                //autoRoute: false,
                lineOptions: {
                    styles: [{
                            color: 'green',
                            opacity: 1,
                            weight: 8,
                            smoothFactor: 1
                            // lineCap:'round',
                            // linJoin:'round'
                        }]
                },
            }).addTo(this.map);
            //fin
            console.log(" routes: " + JSON.stringify(this.routes2[0]));
            inputWaypoints = this.routes2[0].inputWaypoints;
            console.log(" inputWaypoints: " + JSON.stringify(inputWaypoints));
            // this.origename = this.routes[0].instructions[0].road;
            // console.log(" Nombre inicial: "+ JSON.stringify(this.origename))
            for (var _i = 0, inputWaypoints_1 = inputWaypoints; _i < inputWaypoints_1.length; _i++) {
                var carro = inputWaypoints_1[_i];
                if (carro.latLng) {
                    inputWaypoints2.push(carro.latLng);
                    console.log(" carro: " + JSON.stringify(carro.latLng));
                }
                // 
            }
            console.log(" inputWaypoints2: " + JSON.stringify(inputWaypoints2));
            this.destino = inputWaypoints2.pop();
            console.log(" origen : " + JSON.stringify(this.origen.lng));
            console.log(" destino: " + JSON.stringify(this.destino.lng));
            console.log("todo bien hasta aqui");
            this.latlngs = [
                [this.origen.lat, this.origen.lng],
                [this.destino.lat, this.destino.lng] // duda a revisar this.destino2.lat,this.destino2.lng]
            ];
            //linea para tomar el bounds
            this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 });
            // zoom the map to the polyline
            this.map.fitBounds(this.polyline.getBounds(), { padding: [60, 60] });
            // this.loadingService.dismissLoading();
            if (this.marker3) {
                this.marker3.removeFrom(this.map);
            }
            if (this.marker4) {
                this.marker4.removeFrom(this.map);
            }
            if (this.markerOrigin) {
                this.markerOrigin.removeFrom(this.map);
            }
            console.log("todo bien hasta aqui 2");
            this.repetir = false;
            this.traceCount = 0;
            //  this.traceroute()   
            this.nohayGPS = true;
            this.onetime2 = false;
        }
    };
    TaxisPage.prototype.provincias = function () {
        var datos = this.provincia;
        var user = this.user;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_32__provincia_provincia__["a" /* ProvinciaPage */], { datos: datos, user: user });
    };
    TaxisPage.prototype.setMarker = function () {
        var greenIcon = new L.Icon({
            // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
            iconSize: [30, 40],
            iconAnchor: [15, 37],
        });
        var markergps = L.marker([23.107736104435347, -82.37317083603698], { draggable: false, icon: greenIcon });
        //guardar la latitud y la longitud para calcular distancia
        // this.userLatitud=location.latitude
        // this.userLongitud=location.longitude
        // create popup contents
        var customPopup = "<b>Mi posición</b><br/>";
        // specify popup options 
        var customOptions = {
            //'maxWidth': '400',
            //'width': '200',
            offset: [0, -30]
        };
        markergps.addTo(this.map);
        markergps.bindPopup(customPopup).openPopup();
    };
    TaxisPage.prototype.SEARCHpLACE1 = function (event) {
        var _this = this;
        this.marker3.setLatLng(this.map.getCenter());
        this.cd.detectChanges();
        var destino = event.getLatLng();
        // let coord:string=destino.lng+","+destino.lat
        var lat = destino.lat;
        this.coord.push(lat);
        var lat2 = this.coord.slice(-2).shift();
        var lat2f = lat2.toFixed(4);
        var latf = lat.toFixed(4);
        console.log("lat: " + lat);
        console.log("latf: " + latf);
        console.log("lat2f: " + lat2f);
        var lng = destino.lng;
        this.coord2.push(lng);
        var lng2 = this.coord2.slice(-2).shift();
        var lng2f = lng2.toFixed(4);
        var lngf = lng.toFixed(4);
        console.log("lng: " + lng);
        console.log("lngf: " + lngf);
        console.log("lng2f: " + lng2f);
        if (lngf == lng2f && latf == lat2f) {
            if (this.focus) {
                this.validDesapear2 = false; // quita los ...
                this.selectedAddress2 = this.tempAddress;
                // this.validGeocode=true // habilitados origen/destino
                var centro = this.marker3.getLatLng();
                var LatCentro = centro.lat;
                var LngCentro = centro.lng;
                console.log("LatCentro: " + LatCentro + " LngCentro: " + LngCentro);
                var lat2_2 = this.resultReverseGeocode.lat; //23.076696671688204 
                var lng2_2 = this.resultReverseGeocode.lon; //-82.46484607458116
                console.log("resultReverseGeocode: " + JSON.stringify(this.resultReverseGeocode));
                console.log("lat2: " + lat2_2 + " lng2: " + lng2_2);
                var difLat = Math.abs(lat2_2 - LatCentro); //+(lat2-LatCentro) 
                var difLng = Math.abs(lng2_2 - LngCentro); //+(lng2 -LngCentro)
                console.log("difLat: " + difLat + " difLng: " + difLng);
                if (difLat < 0.001) {
                    if (difLng < 0.001) {
                        // this.selectedAddress2 = firstName + secondName + thirdName 
                        console.log("original recortado: " + this.selectedAddress2);
                        this.validGeocode = true;
                    }
                    else {
                        this.validGeocode = false;
                    }
                }
                else {
                    this.validGeocode = false;
                }
                this.cd.detectChanges();
            }
            else {
                // se movio el mapa por que se abrio el teclado
                this.validDesapear2 = false; // quita los ...
                this.selectedAddress2 = "";
                this.validGeocode = false; // deshabilitados origen/destino
                this.focus = true; // se restaura el valor para la proxima vez que se abra haga lo mismo
                this.focus2 = false; // se movio por primera vez el mapa por que se abrio el teclado 
                this.cd.detectChanges();
            }
        }
        else {
            console.log("llego a la función buscar por  coordenada");
            if (this.addresses.length > 0) {
                this.validDesapear2 = false;
            }
            else {
                this.searchbar.clearInput(null);
                // this.updateSearchResults2("Buscando lugar...")
                /*  this.selectedAddress2= "Buscando lugar..."
                 this.validGeocode=false
                 */
                this.selectedAddress2 = "Ya casi...";
                this.validGeocode = false; // deshabilitados origen/destino
                this.validDesapear2 = true;
                this.cd.detectChanges();
                // this.map.off
                // console.log("destino: "+ destino.lat+destino.lng)    //search input will display
                this.buscando = this.buscando + 1;
                console.log("buscando " + this.buscando);
                this.gasolineraService.get2DataPersona(lat, lng).then(function (result) {
                    // this.users2 
                    // console.log("llego al usuario " + JSON.stringify(result));
                    console.log("respuesta " + _this.buscando);
                    // console.log("buscando2 "+ this.buscando2);
                    if (result.place_id > 0) {
                        if (_this.addresses.length > 0) {
                        }
                        else {
                            _this.buscando2 = _this.buscando2 + 1;
                            if (_this.buscando2 == _this.buscando) {
                                //console.log("buscando2 "+ this.buscando2);
                                _this.validDesapear2 = false;
                                _this.resultReverseGeocode = result;
                                var nam = result.display_name; //Posiciones objeto con la informacion del carro, chofer y la posicion
                                _this.tempAddress = nam;
                                _this.selectedAddress2 = nam;
                                console.log("llego a reverse geo " + nam); //lat, lng
                                console.log("lat: " + lat + " lng: " + lng);
                                console.log("resultado " + JSON.stringify(result));
                                _this.marker3.setLatLng(_this.map.getCenter());
                                _this.searchbar.clearInput(null);
                                // this.updateSearchResults2(nam)
                                _this.addresses3[_this.buscando - 1] = nam; // JSON.stringify(data)
                                console.log("this.addresses3[] = " + _this.addresses3.toString());
                                // this.selectedAddress2=nam
                                // this.destinoname=nam
                                // this.searchbar.clearInput(null);
                                // nam.toFixed(7)
                                var nombre = (nam.toLowerCase()).substring(0, 6); //.toFixed(7) 
                                console.log("nombre recortado: " + nombre);
                                if (nombre == "desoft") {
                                    console.log("está en desoft");
                                    _this.validGeocode = false;
                                    _this.openDialogo9();
                                }
                                else {
                                    console.log("NO está en desoft: ");
                                }
                                _this.cd.detectChanges();
                                console.log("this.addresses3.length = " + _this.addresses3.length);
                                console.log("buscando " + _this.buscando);
                                var int = _this.addresses3.length;
                                var count = 0;
                                for (var _i = 0, _a = _this.addresses3; _i < _a.length; _i++) {
                                    var carro = _a[_i];
                                    // JSON.stringify(data)
                                    count++;
                                    if (_this.buscando == count) {
                                        if (int == count) {
                                            _this.selectedAddress2 = carro;
                                            console.log("selectedAddress2 = " + _this.selectedAddress2);
                                            console.log("count = " + count);
                                        }
                                    }
                                }
                                //recortar comas
                                var fullname = _this.selectedAddress2; //"Praveen Tripathi James";
                                var names = fullname.split(",");
                                var firstName = names[0];
                                // let lastName = names[(names.length -1)];
                                var secondName = names[1];
                                var thirdName = names[2];
                                // let fourthName =names[3];
                                console.log("firstName: " + firstName);
                                console.log("secondName: " + secondName);
                                console.log("thirdName: " + thirdName);
                                // console.log("fourthName: "+ fourthName)
                                //  this.selectedAddress2 = firstName + secondName + thirdName 
                                // console.log("original recortado: "+ this.selectedAddress2)
                                var centro = _this.marker3.getLatLng();
                                var LatCentro = centro.lat;
                                var LngCentro = centro.lng;
                                var lat2_3 = _this.resultReverseGeocode.lat; //23.076696671688204 
                                var lng2_3 = _this.resultReverseGeocode.lon; //-82.46484607458116
                                var difLat = Math.abs(lat2_3 - LatCentro); //+(lat2-LatCentro) 
                                var difLng = Math.abs(lng2_3 - LngCentro); //+(lng2 -LngCentro)
                                console.log("difLat: " + difLat + " difLng: " + difLng);
                                if (difLat < 0.001) {
                                    if (difLng < 0.001) {
                                        _this.selectedAddress2 = firstName + secondName + thirdName;
                                        console.log("original recortado: " + _this.selectedAddress2);
                                        _this.validGeocode = true;
                                    }
                                    else {
                                        _this.validGeocode = false;
                                    }
                                }
                                else {
                                    _this.validGeocode = false;
                                }
                                _this.cd.detectChanges();
                            }
                        }
                        // parte de buscar al negocio si este no se ha recibido pero hay conexión
                        /*
                              if(!this.auto2.tax&&!this.cargando){
                                this.cargarTaxisDisponibles()
                        
                              } */
                    }
                    /*             console.log("this.addresses3.length = " +this.addresses3.length);
                              console.log("buscando "+ this.buscando);
                              let int=this.addresses3.length
                              let count=0
                              for (let carro of this.addresses3) {
                                // JSON.stringify(data)
                                  count++
                    
                                  if(this.buscando==count){
                                    if(int==count){
                                      this.selectedAddress2=carro
                                      console.log("selectedAddress2 = " +this.selectedAddress2);
                                      console.log("count = " +count);
                                    }
                                  }
                    
                                }
                    
                                this.cd.detectChanges();    */
                    //  this.loadingService.dismissLoading();
                    // this.startBackgroundGeolocation()
                }, function (err) {
                    console.log(err);
                    _this.validDesapear2 = false;
                    _this.buscando = 2;
                    _this.buscando2 = 2;
                    //  this.loadingService.presentError();
                    // this.loadingService.dismissLoading();
                });
                /*            console.log("this.addresses3.length = " +this.addresses3.length);
                         console.log("buscando "+ this.buscando);
                         let int=this.addresses3.length
                         let count=0
                         for (let carro of this.addresses3) {
                           // JSON.stringify(data)
                             count++
                
                             if(this.buscando==count){
                               if(int==count){
                                 this.selectedAddress2=carro
                                 console.log("selectedAddress2 = " +this.selectedAddress2);
                                 console.log("count = " +count);
                               }
                             }
                
                           }
                
                           this.cd.detectChanges();    */
            }
        }
        // this.presentToast4('Un solo botón para hacer su pedido');
    };
    TaxisPage.prototype.recortarComas = function () {
        this.selectedAddress2;
        console.log("original: " + this.selectedAddress2);
        var fullname = this.selectedAddress2; //"Praveen Tripathi James";
        var names = fullname.split(",");
        var firstName = names[0];
        // let lastName = names[(names.length -1)];
        var secondName = names[1];
        var thirdName = names[2];
        var fourthName = names[3];
        console.log("firstName: " + firstName);
        console.log("secondName: " + secondName);
        console.log("thirdName: " + thirdName);
        // console.log("fourthName: "+ fourthName)
        this.selectedAddress2 = firstName + secondName + thirdName;
        console.log("original recortado: " + this.selectedAddress2);
    };
    TaxisPage.prototype.localizar2 = function () {
        var _this = this;
        this.geoLocation.getCurrentPosition().then(function (resp) {
            if (resp.coords.latitude) {
                _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                if (_this.markergps) {
                    _this.markergps.removeFrom(_this.map);
                }
                var icon = L.divIcon({
                    className: 'custom-div-icon',
                    html: "<div   id='custom-overlay' ><div class='flb3'><div class='Aligner-item Aligner-item--top'></div><div class='outer-circle3'><div class='green-scanner3'></div></div><div class='Aligner-item Aligner-item--bottom'></div></div></div>",
                    // html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>weekend</i>",
                    iconSize: [30, 30],
                    iconAnchor: [9, 16]
                });
                var greenIcon = new L.Icon({
                    // iconUrl: 'assets/libs/leaflet/images/iconotransparente.gif',//icono sustituido
                    iconUrl: 'assets/libs/leaflet/images/marker-icon-2x.png',
                    iconSize: [30, 40],
                    iconAnchor: [15, 37],
                });
                _this.markergps = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: false, icon: icon });
                // create popup contents
                var customPopup = "<b>Mi posición</b><br/>";
                // specify popup options 
                var customOptions = {
                    //'maxWidth': '400',
                    //'width': '200',
                    offset: [0, -30]
                };
                // create popup contents
                _this.markergps.addTo(_this.map);
                _this.markergps.bindPopup(customPopup).openPopup();
                _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                _this.cd.detectChanges();
                _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
            }
            else {
                _this.hayGPS = false; //para saber si hay o no gps y enviar o no el sms
            }
        }).catch(function (error) {
            _this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            // this.map.flyTo([23.113592,-82.366592], 15);
            _this.selectedAddress2 = "Buscando el lugar...";
            _this.validGeocode = false;
            _this.SEARCHpLACE1(_this.marker3);
        });
    };
    TaxisPage.prototype.updateValues = function (values) {
        if (values) {
            this.day = values.day;
            this.month = values.month;
            this.myDate1 = this.day + " " + this.month;
        }
    };
    TaxisPage.prototype.pedidoreal = function () {
        //this.pedido=!this.pedido
        //this.pedidoprueb=false
        if (this.tipo == 1) {
            this.nombrenegocio = "1";
            //this.mascotas()
            this.vistatipo = 'reserva';
            this.reservar = true;
        }
        else if (this.tipo == 2) {
            this.cantPasajerosRes();
            // this.vistatipo = 'reserva'
            // this.reservar=true;  
        }
        else if (this.tipo == 3) {
            this.cantPasajerosRes();
            // this.vistatipo = 'reserva'
            // this.reservar=true;  
        }
        else if (this.tipo == 4) {
            this.cantPasajeros2Res();
            // this.vistatipo = 'reserva'
            // this.reservar=true;  
        }
    };
    TaxisPage.prototype.pedidoreal2 = function () {
        //this.pedido=!this.pedido
        //this.pedidoprueb=false
        if (this.myDate1) {
            if (this.myDate2) {
                // console.log("hora de recogida: "+this.myDate2)
                this.pasajeros2();
            }
            else {
                this.presentToast4('Por favor seleccione la hora ');
            }
        }
        else {
            this.presentToast4('Por favor seleccione el día ');
        }
    };
    TaxisPage.prototype.gravamen = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var gravamen, precio, pasapasa, porc, porc, alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        gravamen = +(this.user.parametros.parametros.gravamen);
                        if (this.tipo == 2) {
                            // this.myAlert_show3( '2',this.cbasico2 )
                            pasapasa = this.cbasico2;
                            porc = +(((this.cbasico2 * gravamen) / 100).toFixed(2));
                            this.cbasico2 = +(this.cbasico2 + porc);
                            precio = this.cbasico2;
                            this.costoviaje = precio;
                        }
                        else if (this.tipo == 3) {
                            // this.myAlert_show3('3',this.cconfort2 )
                            pasapasa = this.cconfort2;
                            porc = +(((this.cconfort2 * gravamen) / 100).toFixed(2));
                            this.cconfort2 = +(this.cconfort2 + porc);
                            precio = this.cconfort2;
                            this.costoviaje = precio;
                        }
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Gravamen  ',
                                subTitle: 'Su pedido tiene un aumento del ' + gravamen + '%. Precio actual del viaje: ' + precio + 'CUP',
                                message: '¿Desea continuar?',
                                cssClass: 'profalert',
                                buttons: [
                                    {
                                        text: 'Sí   ',
                                        role: 'null',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                            _this.mascotas();
                                        }
                                    },
                                    {
                                        text: 'No   ',
                                        role: 'null',
                                        cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                        handler: function (blah) {
                                            if (_this.tipo == 2) {
                                                // this.myAlert_show3( '2',this.cbasico2 )
                                                _this.cbasico2 = pasapasa;
                                                _this.costoviaje = pasapasa;
                                            }
                                            else if (_this.tipo == 3) {
                                                // this.myAlert_show3('3',this.cconfort2 )
                                                _this.cconfort2 = pasapasa;
                                                _this.costoviaje = pasapasa;
                                            }
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.gravamen2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var gravamen, precio, pasapasa, porc, porc, alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        gravamen = +(this.user.parametros.parametros.gravamen);
                        if (this.tipo == 2) {
                            // this.myAlert_show3( '2',this.cbasico2 )
                            pasapasa = this.cbasico2;
                            porc = +(((this.cbasico2 * gravamen) / 100).toFixed(2));
                            this.cbasico2 = +(this.cbasico2 + porc);
                            precio = this.cbasico2;
                            this.costoviaje = precio;
                        }
                        else if (this.tipo == 3) {
                            // this.myAlert_show3('3',this.cconfort2 )
                            pasapasa = this.cconfort2;
                            porc = +(((this.cconfort2 * gravamen) / 100).toFixed(2));
                            this.cconfort2 = +(this.cconfort2 + porc);
                            precio = this.cconfort2;
                            this.costoviaje = precio;
                        }
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Gravamen  ',
                                subTitle: 'Su pedido tiene un aumento del ' + gravamen + '%. Precio actual del viaje: ' + precio + 'CUP',
                                message: '¿Desea continuar?',
                                cssClass: 'profalert',
                                buttons: [
                                    {
                                        text: 'Sí   ',
                                        role: 'null',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                            //this.mascotas()
                                            _this.vistatipo = 'reserva';
                                            _this.reservar = true;
                                        }
                                    },
                                    {
                                        text: 'No   ',
                                        role: 'null',
                                        cssClass: this.tipo_taxi !== 2 ? 'secondaryColor' : 'primaryColor',
                                        handler: function (blah) {
                                            if (_this.tipo == 2) {
                                                // this.myAlert_show3( '2',this.cbasico2 )
                                                _this.cbasico2 = pasapasa;
                                                _this.costoviaje = pasapasa;
                                            }
                                            else if (_this.tipo == 3) {
                                                // this.myAlert_show3('3',this.cconfort2 )
                                                _this.cconfort2 = pasapasa;
                                                _this.costoviaje = pasapasa;
                                            }
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.cantPasajeros = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.nombrenegocio = "0";
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Seleccione la cantidad de pasajeros',
                                // subTitle: 'Alert subtitle...',
                                enableBackdropDismiss: true,
                                // message:'Cantidad de pasajeros',
                                buttons: [
                                    {
                                        text: 'ACEPTAR',
                                        handler: function (data) {
                                            console.log(data);
                                            //this.presentToast4('OK clicked. Data -> ' + data ); 
                                            _this.negocio = data; // para A en save+ JSON.stringify(data)
                                            switch (data) {
                                                case "1":
                                                    _this.nombrenegocio = "1";
                                                    _this.mascotas();
                                                    break;
                                                case "2":
                                                    _this.nombrenegocio = "2";
                                                    _this.mascotas();
                                                    break;
                                                case "3":
                                                    _this.nombrenegocio = "3";
                                                    _this.mascotas();
                                                    break;
                                                case "4":
                                                    _this.nombrenegocio = "4";
                                                    _this.mascotas();
                                                    break;
                                                case "5":
                                                    _this.nombrenegocio = "5";
                                                    // this.mascotas()
                                                    _this.gravamen();
                                                    break;
                                                /*   case "6":
                                                  this.nombrenegocio= "	Mascotas";
                                                  break;
                                                  case "7":
                                                  this.nombrenegocio= "	Fotos";
                                                  break;
                                                  case "8":
                                                  this.nombrenegocio= "	Modista sastre";
                                                  break;
                                                  case "9":
                                                  this.nombrenegocio= "	Empleada domestica";
                                                  break;
                                                  case "10":
                                                  this.nombrenegocio= "	Artesanos";
                                                  break;
                                                  case "11":
                                                  this.nombrenegocio= "	Clases";
                                                  break;
                                                  case "12":
                                                  this.nombrenegocio= "	Reparaciones ";
                                                  break;
                                                   case "13":
                                                  this.nombrenegocio= "	Otros";
                                                  break;*/
                                                default:
                                                    _this.nombrenegocio = "0";
                                            }
                                            //this.nombrenegocio=JSON.stringify(data.name)
                                        },
                                        role: ''
                                    },
                                    {
                                        text: 'CANCELAR',
                                        handler: function (data) {
                                            // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                            data = 13;
                                            //this.negocio=data // para A en save
                                            _this.nombrenegocio = "0";
                                            //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                            //value: '13'
                                        },
                                        role: 'cancel'
                                    }
                                ],
                                inputs: [
                                    {
                                        type: 'radio',
                                        id: 'opt1',
                                        name: 'opt1',
                                        'label': '1',
                                        value: '1',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt2',
                                        name: 'opt2',
                                        'label': '2',
                                        value: '2',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt3',
                                        name: 'opt3',
                                        'label': '3',
                                        value: '3',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt4',
                                        name: 'opt4',
                                        'label': '4',
                                        value: '4',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt5',
                                        name: 'opt5',
                                        'label': '5',
                                        value: '5',
                                        'checked': false
                                    },
                                ]
                            })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.cantPasajeros2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.nombrenegocio = "0";
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Seleccione la cantidad de pasajeros',
                                // subTitle: 'Alert subtitle...',
                                enableBackdropDismiss: true,
                                // message:'Cantidad de pasajeros',
                                buttons: [
                                    {
                                        text: 'ACEPTAR',
                                        handler: function (data) {
                                            console.log(data);
                                            //this.presentToast4('OK clicked. Data -> ' + data ); 
                                            _this.negocio = data; // para A en save+ JSON.stringify(data)
                                            switch (data) {
                                                case "1":
                                                    _this.nombrenegocio = "1";
                                                    _this.mascotas();
                                                    break;
                                                case "2":
                                                    _this.nombrenegocio = "2";
                                                    _this.mascotas();
                                                    break;
                                                case "3":
                                                    _this.nombrenegocio = "3";
                                                    _this.mascotas();
                                                    break;
                                                case "4":
                                                    _this.nombrenegocio = "4";
                                                    _this.mascotas();
                                                    break;
                                                case "5":
                                                    _this.nombrenegocio = "5";
                                                    _this.mascotas();
                                                    break;
                                                case "6":
                                                    _this.nombrenegocio = "6";
                                                    _this.mascotas();
                                                    break;
                                                case "7":
                                                    _this.nombrenegocio = "7";
                                                    _this.mascotas();
                                                    break;
                                                case "8":
                                                    _this.nombrenegocio = "8";
                                                    _this.mascotas();
                                                    break;
                                                case "9":
                                                    _this.nombrenegocio = "9";
                                                    _this.mascotas();
                                                    break;
                                                case "10":
                                                    _this.nombrenegocio = "10";
                                                    _this.mascotas();
                                                    break;
                                                /*  case "11":
                                                  this.nombrenegocio= "	Clases";
                                                  break;
                                                  case "12":
                                                  this.nombrenegocio= "	Reparaciones ";
                                                  break;
                                                   case "13":
                                                  this.nombrenegocio= "	Otros";
                                                  break;*/
                                                default:
                                                    _this.nombrenegocio = "0";
                                            }
                                            //this.nombrenegocio=JSON.stringify(data.name)
                                        },
                                        role: ''
                                    },
                                    {
                                        text: 'CANCELAR',
                                        handler: function (data) {
                                            // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                            data = 13;
                                            //this.negocio=data // para A en save
                                            _this.nombrenegocio = "0";
                                            //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                            //value: '13'
                                        },
                                        role: 'cancel'
                                    }
                                ],
                                inputs: [
                                    {
                                        type: 'radio',
                                        id: 'opt1',
                                        name: 'opt1',
                                        'label': '1',
                                        value: '1',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt2',
                                        name: 'opt2',
                                        'label': '2',
                                        value: '2',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt3',
                                        name: 'opt3',
                                        'label': '3',
                                        value: '3',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt4',
                                        name: 'opt4',
                                        'label': '4',
                                        value: '4',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt5',
                                        name: 'opt5',
                                        'label': '5',
                                        value: '5',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt6',
                                        name: 'opt6',
                                        'label': '6',
                                        value: '6',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt7',
                                        name: 'opt7',
                                        'label': '7',
                                        value: '7',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt8',
                                        name: 'opt8',
                                        'label': '8',
                                        value: '8',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt9',
                                        name: 'opt9',
                                        'label': '9',
                                        value: '9',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt10',
                                        name: 'opt10',
                                        'label': '10',
                                        value: '10',
                                        'checked': false
                                    },
                                ]
                            })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.cantPasajerosRes = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.nombrenegocio = "0";
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Seleccione la cantidad de pasajeros',
                                // subTitle: 'Alert subtitle...',
                                enableBackdropDismiss: true,
                                // message:'Cantidad de pasajeros',
                                buttons: [
                                    {
                                        text: 'ACEPTAR',
                                        handler: function (data) {
                                            console.log(data);
                                            //this.presentToast4('OK clicked. Data -> ' + data ); 
                                            _this.negocio = data; // para A en save+ JSON.stringify(data)
                                            switch (data) {
                                                case "1":
                                                    _this.nombrenegocio = "1";
                                                    //  this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "2":
                                                    _this.nombrenegocio = "2";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "3":
                                                    _this.nombrenegocio = "3";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "4":
                                                    _this.nombrenegocio = "4";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "5":
                                                    _this.nombrenegocio = "5";
                                                    // this.mascotas()
                                                    _this.gravamen2();
                                                    // this.vistatipo = 'reserva'
                                                    // this.reservar=true; 
                                                    break;
                                                /*   case "6":
                                                  this.nombrenegocio= "	Mascotas";
                                                  break;
                                                  case "7":
                                                  this.nombrenegocio= "	Fotos";
                                                  break;
                                                  case "8":
                                                  this.nombrenegocio= "	Modista sastre";
                                                  break;
                                                  case "9":
                                                  this.nombrenegocio= "	Empleada domestica";
                                                  break;
                                                  case "10":
                                                  this.nombrenegocio= "	Artesanos";
                                                  break;
                                                  case "11":
                                                  this.nombrenegocio= "	Clases";
                                                  break;
                                                  case "12":
                                                  this.nombrenegocio= "	Reparaciones ";
                                                  break;
                                                   case "13":
                                                  this.nombrenegocio= "	Otros";
                                                  break;*/
                                                default:
                                                    _this.nombrenegocio = "0";
                                            }
                                            //this.nombrenegocio=JSON.stringify(data.name)
                                        },
                                        role: ''
                                    },
                                    {
                                        text: 'CANCELAR',
                                        handler: function (data) {
                                            // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                            data = 13;
                                            //this.negocio=data // para A en save
                                            _this.nombrenegocio = "0";
                                            //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                            //value: '13'
                                        },
                                        role: 'cancel'
                                    }
                                ],
                                inputs: [
                                    {
                                        type: 'radio',
                                        id: 'opt1',
                                        name: 'opt1',
                                        'label': '1',
                                        value: '1',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt2',
                                        name: 'opt2',
                                        'label': '2',
                                        value: '2',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt3',
                                        name: 'opt3',
                                        'label': '3',
                                        value: '3',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt4',
                                        name: 'opt4',
                                        'label': '4',
                                        value: '4',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt5',
                                        name: 'opt5',
                                        'label': '5',
                                        value: '5',
                                        'checked': false
                                    },
                                ]
                            })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.cantPasajeros2Res = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.nombrenegocio = "0";
                        return [4 /*yield*/, this.alertController.create({
                                title: 'Seleccione la cantidad de pasajeros',
                                // subTitle: 'Alert subtitle...',
                                enableBackdropDismiss: true,
                                // message:'Cantidad de pasajeros',
                                buttons: [
                                    {
                                        text: 'ACEPTAR',
                                        handler: function (data) {
                                            console.log(data);
                                            //this.presentToast4('OK clicked. Data -> ' + data ); 
                                            _this.negocio = data; // para A en save+ JSON.stringify(data)
                                            switch (data) {
                                                case "1":
                                                    _this.nombrenegocio = "1";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "2":
                                                    _this.nombrenegocio = "2";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "3":
                                                    _this.nombrenegocio = "3";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "4":
                                                    _this.nombrenegocio = "4";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "5":
                                                    _this.nombrenegocio = "5";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "6":
                                                    _this.nombrenegocio = "6";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "7":
                                                    _this.nombrenegocio = "7";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "8":
                                                    _this.nombrenegocio = "8";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "9":
                                                    _this.nombrenegocio = "9";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                case "10":
                                                    _this.nombrenegocio = "10";
                                                    // this.mascotas()
                                                    _this.vistatipo = 'reserva';
                                                    _this.reservar = true;
                                                    break;
                                                /*  case "11":
                                                  this.nombrenegocio= "	Clases";
                                                  break;
                                                  case "12":
                                                  this.nombrenegocio= "	Reparaciones ";
                                                  break;
                                                   case "13":
                                                  this.nombrenegocio= "	Otros";
                                                  break;*/
                                                default:
                                                    _this.nombrenegocio = "0";
                                            }
                                            //this.nombrenegocio=JSON.stringify(data.name)
                                        },
                                        role: ''
                                    },
                                    {
                                        text: 'CANCELAR',
                                        handler: function (data) {
                                            // console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                            data = 13;
                                            //this.negocio=data // para A en save
                                            _this.nombrenegocio = "0";
                                            //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                            //value: '13'
                                        },
                                        role: 'cancel'
                                    }
                                ],
                                inputs: [
                                    {
                                        type: 'radio',
                                        id: 'opt1',
                                        name: 'opt1',
                                        'label': '1',
                                        value: '1',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt2',
                                        name: 'opt2',
                                        'label': '2',
                                        value: '2',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt3',
                                        name: 'opt3',
                                        'label': '3',
                                        value: '3',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt4',
                                        name: 'opt4',
                                        'label': '4',
                                        value: '4',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt5',
                                        name: 'opt5',
                                        'label': '5',
                                        value: '5',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt6',
                                        name: 'opt6',
                                        'label': '6',
                                        value: '6',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt7',
                                        name: 'opt7',
                                        'label': '7',
                                        value: '7',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt8',
                                        name: 'opt8',
                                        'label': '8',
                                        value: '8',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt9',
                                        name: 'opt9',
                                        'label': '9',
                                        value: '9',
                                        'checked': false
                                    },
                                    {
                                        type: 'radio',
                                        id: 'opt10',
                                        name: 'opt10',
                                        'label': '10',
                                        value: '10',
                                        'checked': false
                                    },
                                ]
                            })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.buscarultimo = function () {
        /*
          
          for (let carro of this.pedidos) {
             this.dest.push(JSON.parse(carro.dat))
        
             }   */
        console.log("ver tamaño: " + this.pedidos.length);
        if (this.pedidos.length == 0) {
            this.presentToast4("Usted no tiene destinos guardados");
        }
        else {
            var j = 0;
            for (var i = 0; i < this.pedidos.length; i++) {
                if (!this.pedidos[i].oculto) {
                    j++;
                }
            }
            if (j > 0) {
                var ultimo = void 0;
                var car = void 0;
                var car2 = { "id": 3 };
                for (var i = 0; i < this.pedidos.length; i++) {
                    car = this.pedidos[i];
                    var dataproxy = i;
                    if (!this.pedidos[dataproxy].oculto && !this.pedidos[dataproxy].prov) {
                        if (car2.id < car.id) {
                            car2.id = car.id;
                            ultimo = car;
                        }
                    }
                }
                console.log("último pedido: " + JSON.stringify(ultimo));
                if (ultimo.est == 1) {
                    this.presentToast4("no visto");
                }
                if (ultimo.est == 2) {
                    this.presentToast4("visto");
                }
            }
            else {
                this.presentToast4("Usted no tiene destinos guardados");
            }
        }
    };
    TaxisPage.prototype.aeropuerto = function (lat, lon) {
        if (!this.tarifa2) {
            var dista = 80.00; // 80 km
            var dista2 = void 0;
            //Posiciones objeto con la informacion del carro, chofer y la posicion
            //calculo para obtener el servicentro mas cercano que debe hacerse despues con los datos de internet
            for (var _i = 0, _a = this.gasolineras; _i < _a.length; _i++) {
                var gasolinera = _a[_i];
                //if (gasolinera.posiciones.length > 0) {
                //   const posicion = gasolinera.ultima_posicion;
                //del usuario prueba
                // this.userLatitud=23.093830
                //this.userLongitud=-82.366140
                //del svcentro
                var vuserLatitud = gasolinera.lat;
                var vuserLongitud = gasolinera.lng;
                //console.log("latitud "+ this.vuserLatitud);
                //calcula la distanticia en todas los servicentros
                dista2 = this.distance(lat, lon, vuserLatitud, vuserLongitud);
                //console.log("distancia "+ this.dista2);
                //guarda la distancia menor en una variable
                if (dista > dista2) {
                    dista = dista2;
                    // this.nombreservi=gasolinera.name
                    // this.identificador=gasolinera    
                }
            }
            var b = dista.toFixed(3);
            console.log("distancia sin convertir" + b);
            // this.presentToast(this.dista)
            //this.splash2=false
            //convertir klm a metros para ver si esta a menos de 100 metros
            var a = dista * 1000;
            console.log("distancia en metros" + a);
            if (a < 400) {
                //  if (a<50000) {
                this.tarifa2 = true;
                console.log("destino tarifa 2");
                // this.presentToast4('TARIFA 2' );
                if (a > 0) {
                    //this.updateItem2(this.item)
                    //this.presentToast3(' se ejecuto servicerca')
                    // this.servicerca=true  
                    dista = 400.00;
                    a = 350;
                    // this.updateItem2()
                    //this.presentToast3('GRACIAS POR COMPARTIR LA INFORMACIÓN ');  
                    // return
                }
            }
            else {
                //this.servicerca=false  
                console.log("destino tarifa 1");
                this.tarifa2 = false;
                // this.presentToast4('LEJOS PARA LA TARIFA 2' );
                dista = 400.00;
                // return
            }
        }
        else {
        }
    };
    TaxisPage.prototype.distance = function (lat1, lon1, lat2, lon2) {
        var p = 0.017453292519943295; // Math.PI / 180
        var c = Math.cos;
        var a = 0.5 - c((lat2 - lat1) * p) / 2 +
            c(lat1 * p) * c(lat2 * p) *
                (1 - c((lon2 - lon1) * p)) / 2;
        return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km
    };
    TaxisPage.prototype.startTimerHoy = function () {
        return __awaiter(this, void 0, void 0, function () {
            var i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < 5)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.wait6sec()];
                    case 2:
                        _a.sent();
                        console.log("star timer hoy" + i);
                        // this.presentToast4("star timer hoy "+i)
                        if (!this.validDesapear) {
                            if (this.viaje == 1) {
                                if (!this.aceptado) {
                                    this.getTrabajando2();
                                }
                                else {
                                    this.delTax();
                                }
                            }
                        }
                        else {
                            console.log("pedido en curso");
                        }
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.getTrabajando2 = function () {
        var _this = this;
        // this.loadingService.presentLoading4();
        this.gasolineraService.getDataTrabajando().then(function (result) {
            _this.users2 = result; //Posiciones objeto con la informacion del carro, chofer y la posicion
            _this.markerCount = 0;
            for (var _i = 0, _a = _this.users2; _i < _a.length; _i++) {
                var carro = _a[_i];
                console.log(carro.lat);
                console.log(carro.lng);
                if (carro.lat != null) {
                    if (carro.lng != null) {
                        _this.posicionarTaxisEnMapa3(carro); //carga inical  
                    }
                }
                // 
            }
            // this.loadingService.dismissLoading();
            _this.cargando = false;
        }, function (err) {
            console.log(err);
            _this.loadingService.presentError();
            // this.loadingService.dismissLoading();
            _this.splash4 = false;
            _this.nored = true;
            _this.vistanored = 'nored';
            _this.cargando = false;
            _this.cd.detectChanges();
        });
    };
    TaxisPage.prototype.posicionarTaxisEnMapa3 = function (carro) {
        var _this = this;
        console.log("ver nam: " + carro.nam);
        var repetir = true;
        if (this.markers) {
            for (var _i = 0, _a = this.markers; _i < _a.length; _i++) {
                var marker = _a[_i];
                if (this.markers[this.markerCount]) {
                    // marker.removeFrom(this.map);
                    console.log("numero: " + this.markerCount + " nombre: " + carro.nam);
                    var origen = this.markers[this.markerCount].getLatLng();
                    // this.markerCount++
                    var LngOrigen = origen.lng;
                    var LatOrigen = origen.lat;
                    var XShift = (carro.lng) - LngOrigen; // longitudes 
                    var YShift = (carro.lat) - LatOrigen; // latitudes
                    var theta = Math.atan2(XShift, YShift); // range (-PI, PI]
                    theta *= 180 / Math.PI; // rads to degs, range (-180, 180]
                    // this.markerCar.setRotationAngle(theta);
                    // this.presentToast4("está a: "+theta)
                    this.theta = theta;
                    if (theta != 0) {
                        marker.removeFrom(this.map);
                    }
                    else {
                        //theta=0
                        repetir = false;
                    }
                }
            }
            this.markerCount++;
        }
        var bol = true;
        /*   if(carro.tip="1"){
            bol=false
          }else{
            bol=true
          } */
        if (bol) {
            var flagMarker = L.icon({
                iconUrl: 'assets/imgs/car.png',
                //    iconUrl: 'assets/libs/leaflet/images/icono_moto.png',
                iconSize: [25, 41.5],
                // className: 'u-turn-icon'
                // iconAnchor: [42, 82]
                iconAnchor: [15, 20]
            });
        }
        else {
            var flagMarker = L.icon({
                // iconUrl: 'assets/libs/leaflet/images/gasolinerab.png',
                // iconUrl: 'assets/libs/leaflet/images/icono_moto.png',
                iconUrl: 'assets/imgs/flecha.jpg',
                iconSize: [50, 50],
            });
        }
        // const posicion = carro.ultima_posicion; carro.lat, carro.lng 
        this.markerCar = L.marker([carro.lat, carro.lng], { draggable: false, icon: flagMarker, rotationAngle: this.theta });
        this.markers.push(this.markerCar);
        if (this.adm || this.gest) {
            var timestamp2 = new Date(carro.updated_at);
            // timestamp2.setHours(timestamp2.getHours() - 5 ); 
            var today2 = timestamp2.getHours() + ':' + timestamp2.getMinutes(); // + '-'  + timestamp2.getDate()).slice(-2); 
            console.log(today2);
            console.log('Hora en carro ' + JSON.stringify(today2)); //to see the object
            this.markerCar.on('click', function () {
                // this.abrirDetallesCarro(carro)
                // this.abrirDetallesGasolinera(carro,this.tiemporealok) .substring(0,11)
                var popupContent1 = '<h1>' + (carro.nam) + '<br />' + (carro.tel) + '<br />' + (carro.updated_at) + '</h1>', //,
                popup1 = new L.Popup({ offset: [0, -12] });
                popup1.setLatLng([carro.lat, carro.lng]); // this.markerCar.getLatLng()
                popup1.setContent(popupContent1);
                _this.map.addLayer(popup1);
            });
        }
        // this.markerCar.setIconAngle(90);
        if (repetir) {
            var timestamp = new Date();
            var today = timestamp.getFullYear() + '-' + ('0' + (timestamp.getMonth() + 1)).slice(-2) + '-' + ('0' + timestamp.getDate()).slice(-2);
            console.log(today);
            console.log('Date en string ' + today); //to see the object
            // let timestamp2 = new Date(carro.updated_at);
            // let today2 = timestamp2.getFullYear() + '-' + ('0' + (timestamp2.getMonth() + 1)).slice(-2) + '-' + ('0' + timestamp2.getDate()).slice(-2); 
            var today2 = carro.updated_at.substring(0, 10);
            console.log('Date en carro 1 ' + carro.updated_at.substring(0, 10));
            console.log('Date en carro 2 ' + today2); //to see the object
            if (today == today2) {
                this.markerCar.addTo(this.map);
            }
        }
    };
    TaxisPage.prototype.playAudio3 = function () {
        console.log("playing audio");
        this.nativeAudio.play('trackID6').then(function () {
            console.log("playing audio!");
        }, function (err) {
            console.log("error playing audio: " + err);
        });
    };
    TaxisPage.prototype.pedentranscurso = function () {
        this.idped = this.lastPedido;
        console.log('pedidoCurso: ' + JSON.stringify(this.lastPedido)); //to see the object
        this.clientenuevo = true;
        this.origename2 = this.lastPedido.dat.origename;
        this.origename = this.lastPedido.dat.origename;
        this.destinoname2 = this.lastPedido.dat.destinoname;
        this.destinoname = this.lastPedido.dat.destinoname;
        this.costoviaje = this.lastPedido.total;
        this.aceptado = true;
        console.log('idped: ' + this.idped + ' origename: ' + this.origename2);
        console.log('destinoname2: ' + this.destinoname2 + ' costoviaje: ' + this.costoviaje);
        // this.tipo=1
        this.valid = true;
        this.vistatipomoneda = 'si';
        //   this.costoviaje=this.cmoto2
        // this.getTrabajando()
        // this.delTax()
        this.vistos();
        this.startTimer6(); //api para revisar el pedido
        if (this.mascota) {
            this.presentToast4("Si viaja con mascotas, el precio puede aumentar.");
        }
    };
    TaxisPage.prototype.startTimer6 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var i, flag, onetime, onetime2, _loop_5, this_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        flag = true;
                        onetime = true;
                        onetime2 = true;
                        _loop_5 = function () {
                            var id_2;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this_4.wait6sec()];
                                    case 1:
                                        _a.sent();
                                        console.log("star timer" + i);
                                        if (i > 80) {
                                            if (flag) {
                                                // this.cancelapi2()
                                                i = 4999;
                                            }
                                        }
                                        if (!this_4.encamino) {
                                            id_2 = this_4.idped.id;
                                            //   let id = 76 //68
                                            this_4.gasolineraService.getDataPedido(id_2).then(function (result) {
                                                var users2 = result;
                                                for (var _i = 0, users2_3 = users2; _i < users2_3.length; _i++) {
                                                    var carro = users2_3[_i];
                                                    console.log("pedido numero: " + carro.id);
                                                    _this.datosped = carro;
                                                    if (carro.est == "4") {
                                                        if (!_this.est4) {
                                                            _this.playAudio();
                                                            _this.est4 = true;
                                                        }
                                                        _this.cancelapi2();
                                                    }
                                                    if (carro.est == "3") {
                                                        // cambio de color del radar
                                                        console.log("encamino" + i);
                                                        if (!_this.est3) {
                                                            _this.playAudio();
                                                            _this.est3 = true;
                                                        }
                                                        _this.vistaerror = 'encamino';
                                                        _this.visto2 = false;
                                                    }
                                                    if (carro.est == "1") {
                                                        // this.presentToast4(" en espera " +carro.choferes.nam)  
                                                        if (!_this.est1) {
                                                            _this.playAudio();
                                                            _this.est1 = true;
                                                        }
                                                        _this.aceptado = true;
                                                        if (i > 20) {
                                                            if (i < 22) {
                                                                //  this.cancelapi2()
                                                                if (!_this.cancelado) {
                                                                    _this.vistaerror = 'demorado';
                                                                }
                                                                else {
                                                                }
                                                            }
                                                        }
                                                        if (i < 3) {
                                                            // this.map.setView([ carro.dat.curPosLat, carro.dat.curPosLng ], 15);
                                                            _this.map.flyTo([carro.dat.curPosLat, carro.dat.curPosLng], 15);
                                                        }
                                                        _this.cd.detectChanges();
                                                    }
                                                    /*  if(carro.est=="2"){
                                                       this.aceptado=false
                                                      // flag=false
                                                      // this.presentToast4(" visto ")
                                                       if (this.markers) { // Borra todos los marcadores que existen
                                                         for (let marker of this.markers) {
                                                           marker.removeFrom(this.map);
                                                         }
                                                       }
                                                       this.chvisto = carro.vis
                                                       this.encaminos()
                                                     } */
                                                    if (carro.est == "2") {
                                                        if (!_this.est2) {
                                                            _this.playAudio();
                                                            _this.est2 = true;
                                                        }
                                                        _this.aceptado = true;
                                                        flag = false;
                                                        if (_this.markers) {
                                                            for (var _a = 0, _b = _this.markers; _a < _b.length; _a++) {
                                                                var marker = _b[_a];
                                                                marker.removeFrom(_this.map);
                                                            }
                                                        }
                                                        // this.visto=false
                                                        _this.vistaerror = 'datoschof';
                                                        // this.posicionarTaxisEnMapa2(carro.choferes);//carga inical 
                                                        if (carro.choferes.idviaje == id_2) {
                                                            if (carro.choferes.idcl != _this.user.idcopia) {
                                                                //quitar la ruta
                                                                if (onetime) {
                                                                    _this.presentToast4(" En camino de recogida");
                                                                    //  this.cancel3()                     
                                                                    // this.map.setView([ carro.dat.curPosLat, carro.dat.curPosLng ], 15);
                                                                    var bounds = L.latLngBounds(); // Instantiate LatLngBounds object
                                                                    var lat_lng = [carro.choferes.lat, carro.choferes.lng];
                                                                    bounds.extend(lat_lng);
                                                                    var lat_lng2 = [carro.dat.curPosLat, carro.dat.curPosLng];
                                                                    bounds.extend(lat_lng2);
                                                                    _this.map.fitBounds(bounds, { padding: [6, 6] });
                                                                    onetime = false;
                                                                }
                                                                _this.onetime2 = true;
                                                                //  this.updateAngle(carro.choferes)
                                                            }
                                                            if (carro.choferes.idcl == _this.user.idcopia) {
                                                                // re hacer la ruta
                                                                if (_this.onetime2) {
                                                                    // this.mostraruta3()
                                                                    _this.presentToast4(" Realizándose");
                                                                    _this.onetime2 = false;
                                                                    // this.removeLayer2()
                                                                }
                                                                _this.visto2 = false;
                                                                // this.updateAngle(carro.choferes)
                                                                // this.map.setView([ carro.choferes.lat, carro.choferes.lat ], 15);
                                                            }
                                                        }
                                                        else {
                                                            if (carro.choferes.idcl == _this.user.idcopia) {
                                                                _this.presentToast4(" Terminado");
                                                                i = 4999;
                                                                _this.aceptado = false;
                                                                _this.terminado = true;
                                                                /*  if(this.routeControl4){
                                                                   this.map.removeControl(this.routeControl4);
                                                                 } */
                                                                if (_this.markerCar) {
                                                                    _this.markerCar.removeFrom(_this.map);
                                                                    //this.markerOrigin.removeFrom(this.map);
                                                                }
                                                                _this.cancel2();
                                                                _this.localizar();
                                                            }
                                                        }
                                                    }
                                                }
                                                //    this.loadingService.dismissLoading();
                                                _this.cargando = false;
                                                // this.startBackgroundGeolocation()
                                            }, function (err) {
                                                console.log(err);
                                                _this.loadingService.presentError();
                                                // this.loadingService.dismissLoading();
                                                _this.splash4 = false;
                                                _this.nored = true;
                                                _this.vistanored = 'nored';
                                                _this.cargando = false;
                                                _this.cd.detectChanges();
                                            });
                                            //  let id=639 // this.pedid
                                            // this.loadingService.presentLoading()
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        };
                        this_4 = this;
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < 5000)) return [3 /*break*/, 4];
                        return [5 /*yield**/, _loop_5()];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.modadmin = function () {
        /*   let carro = this.user
        
          let bol= true
          let idtm = this.user.idt // idt de este usuario
          let idtmid = this.user.id // id de este usuario
        
          console.log(' idtm:' + idtm );
          console.log(' idtmid:' + idtmid );
          console.log(' carro:' + carro );
          
              this.navCtrl.push(HelloPage, {carro,bol, idtm, idtmid });//
        
        
              let user = this.user
          
              console.log(' carro:' + user );
          
              this.navCtrl.push(DetallePage,{user});// , {carro,bol, idtm, idtmid }
         */
        var user = this.user;
        console.log(' carro:' + user);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_35__modadmin_modadmin__["a" /* ModadminPage */], { user: user }); // , {carro,bol, idtm, idtmid }     
    };
    // prueba 2
    TaxisPage.prototype.ngOnInit = function () {
        var _this = this;
        this.placesSub = this.search_places.subscribe({
            next: function (places) {
                _this.places = places;
                console.log('places ngOnInit: ', places);
            },
            error: function (e) {
                console.log(e);
            }
        });
    };
    TaxisPage.prototype.onSearchChange = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log(event);
                        // event.target.blur();
                        // esconder el teclado sacando de foco la barra de busqueda
                        this.searchbar._fireBlur;
                        //this.searchbar.clearInput(null);
                        // this.renderer1.invokeElementMethod(event.target, 'blur');
                        // this.query = event.detail.value;
                        this.query = event.value;
                        console.log('places onSearchChange1: ', event.value);
                        console.log('places onSearchChange2: ', this.query);
                        if (!(this.query.length > 0)) return [3 /*break*/, 2];
                        this.validDesapear2 = true;
                        return [4 /*yield*/, this.getPlaces()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.places = [];
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    TaxisPage.prototype.getPlaces = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var service;
            return __generator(this, function (_a) {
                try {
                    service = new google.maps.places.AutocompleteService();
                    service.getPlacePredictions({
                        input: this.query,
                        componentRestrictions: {
                            country: 'Cu'
                        }
                    }, function (predictions) {
                        var autoCompleteItems = [];
                        _this.zone.run(function () {
                            if (predictions != null) {
                                predictions.forEach(function (prediction) { return __awaiter(_this, void 0, void 0, function () {
                                    var latLng, places;
                                    return __generator(this, function (_a) {
                                        switch (_a.label) {
                                            case 0:
                                                console.log('prediction: ', prediction);
                                                console.log('prediction description: ', prediction.description);
                                                return [4 /*yield*/, this.geoCode(prediction.description)];
                                            case 1:
                                                latLng = _a.sent();
                                                console.log('prediction latLng: ', latLng.lat);
                                                places = {
                                                    title: prediction.structured_formatting.main_text,
                                                    address: prediction.description,
                                                    lat: latLng.lat,
                                                    lng: latLng.lng,
                                                    lon: latLng.lng
                                                };
                                                if (places.lat == '') {
                                                }
                                                else {
                                                    console.log('places: ', places);
                                                    autoCompleteItems.push(places);
                                                }
                                                return [2 /*return*/];
                                        }
                                    });
                                }); });
                                // this.places = autoCompleteItems;
                                // console.log('final places', this.places);
                                // rxjs behaviorSubject
                                _this._places.next(autoCompleteItems);
                                _this.validDesapear2 = false;
                            }
                        });
                    });
                }
                catch (e) {
                    console.log(e);
                }
                return [2 /*return*/];
            });
        });
    };
    TaxisPage.prototype.geoCode = function (address) {
        var latlng = { lat: '', lng: '' };
        var parcialmatch = false;
        console.log('geoCode address: ', address);
        return new Promise(function (resolve, reject) {
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': address }, function (results) {
                console.log('results: ', results);
                latlng.lat = results[0].geometry.location.lat();
                latlng.lng = results[0].geometry.location.lng();
                console.log('geoCode latlng.lat: ', latlng.lat);
                console.log('geoCode partial_match: ', results[0].partial_match);
                parcialmatch = results[0].partial_match;
                if (parcialmatch) {
                    var latlng_1 = { lat: '', lng: '' };
                    resolve(latlng_1);
                }
                else {
                    parcialmatch = false;
                    resolve(latlng);
                }
                // undefined
            });
        });
    };
    TaxisPage.prototype.ngOnDestroy = function () {
        if (this.placesSub)
            this.placesSub.unsubscribe();
    };
    TaxisPage.prototype.prueba = function () {
        // this.geoCode("Línea & Calle B, La Habana, Cuba")
        this.codeLatLng(23.0822196, -82.46821609999999);
    };
    TaxisPage.prototype.codeLatLng = function (lat, lng) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var geocoder = new google.maps.Geocoder();
                        // undefined
                        var latlng = new google.maps.LatLng(lat, lng);
                        // var latlng = {lat: 1.39, lng: 103.8};
                        geocoder.geocode({
                            // latLng: latlng 
                            'location': latlng,
                        }, function (results, status) {
                            if (status === google.maps.GeocoderStatus.OK) {
                                console.log('Geocoder results: ' + JSON.stringify(results));
                                if (results[0]) {
                                    var address = (results[0].formatted_address);
                                    console.log('Geocoder: ' + JSON.stringify(results[0].formatted_address));
                                }
                                else {
                                    alert('Geocoder No results found');
                                }
                            }
                            else {
                                alert('Geocoder failed due to: ' + status);
                            }
                        });
                    })];
            });
        });
    };
    TaxisPage.prototype.onSelect2 = function (place) {
        // this.keyboard.hide();
        // esconder el teclado sacando de foco la barra de busqueda
        //  this.searchbar._fireBlur
        //this.searchbar.clearInput(null);
        // this.renderer1.invokeElementMethod(event.target, 'blur');
        this.validDesapear2 = true;
        this.validGeocode = false; // deshabilitados origen/destino
        this.searchbar.inputBlurred();
        this.searchbar.clearInput(null);
        this.coord.push(+(place.lat));
        this.coord2.push(+(place.lng));
        this.map.setView([place.lat, place.lng], 15);
        // para centrar el mapa por que se cerro el teclado
        // Move input back to original location
        this.latitud = place.lat;
        this.longitud = place.lng;
        this.cerrado = true;
        this.cd.detectChanges();
        console.log("address: " + place.address); //search input will display
        console.log("point: " + place.lat);
        // linea imporatante para compatibilizar
        this.resultReverseGeocode = place;
        console.log("resultReverseGeocode: " + JSON.stringify(this.resultReverseGeocode));
        this.selectedAddress2 = place.address;
        /*     //recortar nombre
            let fullname = this.selectedAddress2 //"Praveen Tripathi James";
            let names = fullname.split(",");
            let firstName = names[0];
            // let lastName = names[(names.length -1)];
            let secondName =names[1];
            let thirdName =names[2];
           // let fourthName =names[3];
          
            console.log("firstName: "+ firstName)
            console.log("secondName: "+ secondName)
            console.log("thirdName: "+ thirdName)
            // console.log("fourthName: "+ fourthName)
          
            this.selectedAddress2 = firstName + secondName + thirdName
            console.log("original recortado: "+ this.selectedAddress2)
         */
        this.tempAddress = this.selectedAddress2; // address.display_name;
        this.destinoname = this.selectedAddress2; //address.display_name;
        this.addresses = [];
        this.validDesapear2 = false;
        this.controlReverse = true;
        this.focus2 = false; // para en el "moveend" habilitar btn origen/destino
        // this.search(null)
        // this.addresses2 = address
        //  this.cd.detectChanges();
    };
    // Método para transformar coordenadas a nombre de lugar
    TaxisPage.prototype.getPlaceName = function (lat, lng) {
        var geocoder = new google.maps.Geocoder();
        var latlng = { lat: lat, lng: lng };
        console.log('Nombre del lugar:');
        geocoder.geocode({ location: latlng }, function (results, status) {
            if (status === 'OK') {
                if (results[0]) {
                    console.log('Nombre del lugar:', results[0].formatted_address);
                }
                else {
                    console.log('No se encontraron resultados');
                }
            }
            else {
                console.log('Geocodificación fallida debido a:', status);
            }
        });
    };
    /* // Ejemplo de uso del método getPlaceName
    getCurrentLocation() {
      this.geolocation.getCurrentPosition().then((resp) => {
        const lat = resp.coords.latitude;
        const lng = resp.coords.longitude;
        this.getPlaceName(lat, lng);
      }).catch((error) => {
        console.log('Error obteniendo la ubicación', error);
      });
    }
     */
    TaxisPage.prototype.getClaxon = function () {
        var _this = this;
        this.storage.get('userClaxon').then(function (val) {
            console.log('Your taxi userClaxon  is', val);
            var claxon = val;
            //
            if (claxon == null) {
                // this.setClaxon()
                _this.claxon = true;
            }
            else {
                if (claxon) {
                    _this.claxon = true;
                }
                else {
                    _this.claxon = false;
                }
            }
        });
    };
    TaxisPage.prototype.playAudio4 = function () {
        console.log("playing audio");
        /*  this.nativeAudio.play('trackID').then(function() {
             console.log("playing audio!");
         }, function(err) {
             console.log("error playing audio: " + err);
         }); */
        this.smartAudio.play('tabSwitch2');
    };
    TaxisPage.prototype.soundclaxon = function (lat, lng) {
        if (this.claxon) {
            var origen = this.markergps.getLatLng();
            var LngOrigen = origen.lng;
            var LatOrigen = origen.lat;
            var dista2 = this.distance(LatOrigen, LngOrigen, lat, lng);
            var a = dista2 * 1000;
            console.log("distancia en metros" + a);
            if (a < 100) {
                if (this.claxoncount < 3) {
                    this.claxoncount++;
                    this.playAudio4();
                }
            }
        }
        else {
            console.log("claxon desconectado");
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])('slides'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Slides */])
    ], TaxisPage.prototype, "slides", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])('mySearchbar'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* Searchbar */])
    ], TaxisPage.prototype, "searchbar", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])('myToolbar'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Toolbar */])
    ], TaxisPage.prototype, "toolbar", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */])
    ], TaxisPage.prototype, "pageTop", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */])
    ], TaxisPage.prototype, "pageTop2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["_9" /* ViewChild */])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* Content */])
    ], TaxisPage.prototype, "pageTops1", void 0);
    TaxisPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-taxis',template:/*ion-inline-start:"E:\14\gaso\src\pages\taxis\taxis.html"*/'<!--\n\n  Generated template for the TaxisPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<!-- <div  id="custom-overlay" [style.display]="splash ? \'flex\': \'none\'">\n\n  <div class="flb">\n\n    <div class="Aligner-item Aligner-item--top"></div>\n\n    <img src="assets/imgs/servimovil.png">\n\n    <div class="Aligner-item Aligner-item--bottom"></div>\n\n  </div>\n\n</div>\n\n\n\n -->\n\n<!-- \n\n<ion-header>\n\n  <ion-toolbar color="primary" no-border-top>      \n\n    <ion-segment color="secondary" [(ngModel)]="vista">\n\n\n\n      <ion-segment-button  value="mapa">\n\n        <ion-icon name="map"></ion-icon> Mapa\n\n      </ion-segment-button>    \n\n\n\n      <ion-segment-button  value="lista" (click)="pageScroller2()">\n\n       <div *ngIf="existetel"><ion-icon name="person"></ion-icon> Usuario </div>\n\n       <div *ngIf="!existetel"><ion-icon name="log-in"></ion-icon> Inicio</div>\n\n      </ion-segment-button>   \n\n         \n\n        <ion-buttons *ngIf="vadmin" >\n\n          <button  ion-button small outline  icon-only color="light"  round (click)= "abrirPaginaAdmin()" >\n\n            <ion-icon name="at"></ion-icon>\n\n             \n\n          </button> \n\n        </ion-buttons> \n\n            \n\n    </ion-segment>\n\n  </ion-toolbar>\n\n</ion-header>\n\n -->\n\n    <!-- *ngIf  *ngIf="carro.idt==this.id||vadmin&&carro.tax" -->\n\n\n\n<!-- class="masters" servimovil.png-->\n\n\n\n<!-- hideBackButton -->\n\n\n\n<ion-header [style.display]="(vistaerror === \'norute\')? \'block\': \'none\'">\n\n<ion-toolbar color="danger" no-border-top>   \n\n  <div style="text-align:center">    \n\n    <ion-title > <ion-icon color="light" name="swap">  </ion-icon> Intente calcular la ruta de nuevo</ion-title>\n\n  </div>\n\n</ion-toolbar>\n\n</ion-header> \n\n\n\n\n\n\n\n\n\n<ion-header [style.display]="(vistatipo === \'noruteadmin\')? \'block\': \'none\'" >\n\n  <ion-toolbar color="light" no-border-top>   \n\n    \n\n    <ion-row align-items-center  >\n\n      \n\n      <ion-col  size="4"  >\n\n        <div style="text-align:center" (click)="basico2()"> \n\n          <div *ngIf="this.tipo===1" class="columna">\n\n            <img src="./assets/imgs/basico.png" width="100"> \n\n            <br>\n\n          </div>\n\n          <div *ngIf="this.tipo!=1" >\n\n            <img src="./assets/imgs/basico.png" width="100"> \n\n            <br>\n\n          </div>\n\n           \n\n           <!-- <b> Auto: </b> <br>            -->\n\n           <b>{{this.tarifa.auto}} <ion-icon  name="logo-usd"><b>/Km</b></ion-icon></b>\n\n           \n\n        </div>\n\n      </ion-col>\n\n      \n\n        <ion-col  size="4"  >\n\n          <div style="text-align:center" (click)="confort2()"> \n\n            <div *ngIf="this.tipo===2" class="columna">\n\n              <img src="./assets/imgs/confort.png" width="100">\n\n              <br>\n\n            </div>\n\n            <div *ngIf="this.tipo!=2" >\n\n              <img src="./assets/imgs/confort.png" width="100">\n\n              <br>\n\n            </div>\n\n\n\n             <!-- <b> Confort: </b><br> -->\n\n             <b>{{this.tarifa.minivan}} <ion-icon  name="logo-usd"><b>/Km</b></ion-icon></b>\n\n          </div>\n\n        </ion-col>                         \n\n\n\n\n\n        <ion-col  size="4" >\n\n          <div style="text-align:center"  (click)="microbus2()"> \n\n            <div *ngIf="this.tipo===3" class="columna">\n\n              <img src="./assets/imgs/minibus.png" width="100">\n\n              <br>              \n\n            </div>\n\n            <div *ngIf="this.tipo!=3" >\n\n              <img src="./assets/imgs/minibus.png" width="100">\n\n              <br>\n\n            </div>\n\n            \n\n\n\n               <!-- <b> Microbús</b><br> -->\n\n              <b>{{this.tarifa.microbus}} <ion-icon  name="logo-usd"><b>/Km</b></ion-icon></b>\n\n          </div>\n\n        </ion-col>  \n\n\n\n    </ion-row>\n\n\n\n    <ion-row *ngIf="tabla" align-items-center  >\n\n      \n\n      <ion-col  size="4"  >\n\n        <div  style="text-align:center;background-color:#faebd7" (click)="basico2()"> \n\n                     \n\n           <b >{{this.cbasico2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n           \n\n        </div>\n\n        <div  style="text-align:center;background-color:#faebd7" (click)="basico2()"> \n\n                     \n\n          <b >{{this.porcBasico}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n          \n\n       </div>\n\n       \n\n      </ion-col>\n\n      \n\n        <ion-col  size="4"  >\n\n          <div style="text-align:center;background-color:#00ffff" (click)="confort2()"> \n\n             \n\n             <b >{{this.cconfort2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n          </div>\n\n          <div style="text-align:center;background-color:#00ffff" (click)="confort2()"> \n\n             \n\n            <b >{{this.porcConfort}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n         </div>\n\n        </ion-col>                         \n\n\n\n\n\n        <ion-col color="tertiary" size="4" >\n\n          <div style="text-align:center;background-color:#7fffd4"  (click)="microbus2()"> \n\n             \n\n              <b >{{this.cmicrob2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n          </div>\n\n          <div style="text-align:center;background-color:#7fffd4"  (click)="microbus2()"> \n\n             \n\n            <b >{{this.porcMicro}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n        </div>\n\n        </ion-col>  \n\n\n\n    </ion-row>\n\n    <ion-title color="secundary" > <ion-icon color="secundary" name="logo-usd">  Comisión: {{ this.tarifa.porciento }}%</ion-icon>  </ion-title> \n\n   \n\n    <ion-title color="secundary"  > <ion-icon color="secundary" name="swap"> {{ this.placeholder }} </ion-icon>  </ion-title> \n\n    <!-- barra busqueda -->\n\n    <ion-searchbar *ngIf="tabla" type="number" pattern="[0-9]*" inputmode="numeric"\n\n    showCancelButton \n\n    \n\n    searchIcon="search" \n\n    animated\n\n    cancel-button-icon\n\n    \n\n    placeholder="{{ this.costo }}"\n\n\n\n    [(ngModel)]="autocomplete"\n\n\n\n    (ionCancel)="hideSearch()"\n\n\n\n    (search)="yourSearchFunction()" \n\n    \n\n    (ionInput)="updateSearchResults()">\n\n    </ion-searchbar>\n\n\n\n\n\n    <ion-row  align-items-center  >\n\n\n\n      <ion-col  size="4"  >\n\n        <!--         <div  style="text-align:center;background-color:antiquewhite" (click)="this.pasajeros()">  \n\n                </div>\n\n              -->\n\n              <div  style="text-align:center"> \n\n                <button color="verde" [disabled]="!valid"  ion-button  ><ion-icon name="logo-whatsapp" item-start (click)="what6()"> Enviar al Grupo</ion-icon></button>\n\n              </div>\n\n          \n\n                        \n\n     </ion-col>\n\n        \n\n\n\n      <ion-col  size="4"  >\n\n<!--         <div  style="text-align:center;background-color:antiquewhite" (click)="this.pasajeros()">  \n\n        </div>\n\n      -->\n\n        <div  style="text-align:center"> \n\n          <button ion-button  round type="submit" [disabled]="!valid" (click)="pasajeros()"> Hacer pedido</button> \n\n          \n\n      </div>\n\n      \n\n      </ion-col>\n\n      \n\n        <ion-col  size="4"  >\n\n<!--           <div style="text-align:center;background-color:aqua" (click)="cancel()">          \n\n          </div> danger -->\n\n\n\n          <div  style="text-align:center"> \n\n            <button ion-button round type="submit" color="dark" (click)="openDialogo7()">  Cancelar</button> \n\n            \n\n          </div>\n\n\n\n        </ion-col>                         \n\n\n\n\n\n\n\n    </ion-row>\n\n\n\n\n\n  </ion-toolbar>\n\n  \n\n</ion-header> \n\n\n\n  <ion-header  [style.display]="(vistatipo === \'direccion\')? \'block\': \'none\'"  >\n\n    \n\n    <ion-grid>\n\n      \n\n      <ion-row>\n\n<!-- class="border-round" (ionBlur)="checkBlur($event)" -->\n\n        <ion-col offset=0 size=8>\n\n          <div style="position: relative">\n\n            \n\n            <!-- <ion-searchbar  \n\n             #mySearchbar \n\n            \n\n             \n\n             debounce=1000 \n\n             (ionChange)="search($event)"   \n\n             placeholder="{{ this.selectedAddress2 }}" \n\n             showCancelButton ="false"\n\n             [value]="this.selectedAddress2"\n\n             (ionFocus)="focused($event)"\n\n             \n\n\n\n             > \n\n              \n\n            </ion-searchbar>             \n\n             -->   \n\n            \n\n             \n\n            <ion-searchbar  \n\n            #mySearchbar \n\n            (ionBlur)="checkBlur($event)"\n\n            \n\n            debounce=1000 \n\n\n\n            placeholder="{{ this.selectedAddress2 }}" \n\n            showCancelButton ="false"\n\n            [value]="this.selectedAddress2"\n\n            (ionFocus)="focused($event)"\n\n            (ionChange)="onSearchChange($event)"> \n\n\n\n            > \n\n\n\n             \n\n           </ion-searchbar> \n\n\n\n            <div style="position: absolute; width: 100%; z-index: 999;" >\n\n<!-- \n\n              <ion-list class="border-round" lines="none" *ngIf="addresses.length > 0" >\n\n                <ion-item button class="border-round" *ngFor="let address of addresses" (click)="onSelect(address)">\n\n                  <ion-icon name="pin"></ion-icon>\n\n                  {{ address.display_name }}\n\n                </ion-item>\n\n              </ion-list>\n\n -->\n\n\n\n                <ion-list class="border-round" lines="none"  *ngIf="places?.length > 0">\n\n                  <ion-item button class="border-round" *ngFor="let place of places" class="ion-margin-top" (click)="onSelect2(place)">\n\n\n\n                    \n\n                    <ion-icon name="location-outline" slot="start"></ion-icon>\n\n                    <ion-label>\n\n                      {{ place?.title }}\n\n                      \n\n                      <p>\n\n                        <ion-text>\n\n                          {{ place?.address }}\n\n                        </ion-text>\n\n                      </p>\n\n                    </ion-label>\n\n\n\n                  </ion-item>\n\n                </ion-list>\n\n\n\n            </div>\n\n            \n\n          </div>\n\n\n\n          <ion-fab *ngIf="validDesapear2"  right top >\n\n            <div style="position: relative; padding-right: 40px;padding-top: 15px;">\n\n\n\n              <ion-spinner name="dots"  ></ion-spinner>      \n\n          \n\n            </div> \n\n          </ion-fab>\n\n \n\n        </ion-col>\n\n      </ion-row>\n\n    </ion-grid> \n\n\n\n  </ion-header>\n\n   \n\n  <ion-header [style.display]="(vistanored === \'nored\')? \'block\': \'none\'">\n\n    <ion-toolbar color="danger" no-border-top>   \n\n      <div style="text-align:center">    \n\n  <!--           <ion-icon color="light" name="swap"> Revise la conexión a Internet </ion-icon> -->\n\n        <ion-title > <ion-icon color="light" name="swap">  </ion-icon> Revise la conexión a Internet</ion-title> \n\n      </div>\n\n    </ion-toolbar>    \n\n  </ion-header>\n\n  \n\n<ion-header [style.display]="(vistaerror === \'datoschof\')? \'block\': \'none\'"  >\n\n   <!--  <div style="text-align:center">    \n\n\n\n          <ion-title > <ion-icon color="danger" name="swap">  </ion-icon> En camino de recogida</ion-title> \n\n        </div> -->\n\n  <ion-toolbar  color="light">   \n\n    \n\n    <ion-row align-items-center  >\n\n      <div style="text-align:left" > \n\n      <div  class="columna">\n\n        <img src="./assets/imgs/logonego.jpg" width="50"> \n\n        <br>\n\n      </div>\n\n    </div>\n\n           <!-- <b> Auto: </b> <br>    no-border-top        -->\n\n           <b> </b>\n\n\n\n      <ion-col  size="4"  >\n\n        \n\n               <!-- <b> Auto: </b> <br>            -->\n\n               \n\n               <b> <ion-icon  name="person"><b> Chofer: {{this.datosped.choferes.nam}} </b></ion-icon></b>\n\n               <br>\n\n               <!-- <b> <ion-icon  name="timer"><b> Tiempo estimado de llegada: {{this.tllegada.tllegada}}  minutos</b></ion-icon></b> -->\n\n               <b> <ion-icon  name="car"><b> Marca del vehículo: {{this.datosped.choferes.marca}}</b>\n\n               <br>               \n\n                <b> Modelo: {{this.datosped.choferes.modelo}} </b>\n\n               <br>\n\n                <b> Color: {{this.datosped.choferes.color}} </b>\n\n               <br>\n\n              </ion-icon></b>\n\n              <br>\n\n               <b> <ion-icon  name="locate"><b> {{this.datosped.dat.origename}} </b></ion-icon></b>\n\n               <br>\n\n               <b> <ion-icon  name="pin"><b> {{this.datosped.dat.destinoname}}</b></ion-icon></b>\n\n               <br>\n\n               <!-- <b> <ion-icon  name="logo-usd"><b> Costo:  {{this.datosped.dat.total}}</b></ion-icon></b> -->\n\n      </ion-col>\n\n      \n\n\n\n    </ion-row>\n\n\n\n  </ion-toolbar>\n\n  \n\n</ion-header> \n\n\n\n\n\n<ion-header [style.display]="(vistaerror === \'encamino\')? \'block\': \'none\'"  >\n\n  <!--  <div style="text-align:center">    \n\n\n\n         <ion-title > <ion-icon color="danger" name="swap">  </ion-icon> En camino de recogida</ion-title> \n\n       </div> -->\n\n <ion-toolbar  color="light">   \n\n   \n\n   <ion-row align-items-center  >\n\n     <div style="text-align:left" > \n\n     <div  class="columna">\n\n       <img src="./assets/imgs/logonego.jpg" width="50"> \n\n       <br>\n\n     </div>\n\n   </div>\n\n          <!-- <b> Auto: </b> <br>    no-border-top        -->\n\n          <b> </b>\n\n\n\n     <ion-col  size="4"  >\n\n       \n\n              <!-- <b> Auto: </b> <br>            -->\n\n              \n\n              <b> <ion-icon  name="person"><b> Gestor: {{this.datosped.choferes.nam}} </b></ion-icon></b>\n\n              <br>\n\n        \n\n             <br>\n\n              <b> <ion-icon  name="locate"><b> {{this.datosped.dat.origename}} </b></ion-icon></b>\n\n              <br>\n\n              <b> <ion-icon  name="pin"><b> {{this.datosped.dat.destinoname}}</b></ion-icon></b>\n\n              <br>\n\n              <!-- <b> <ion-icon  name="logo-usd"><b> Costo:  {{this.datosped.dat.total}}</b></ion-icon></b> -->\n\n     </ion-col>\n\n     \n\n\n\n   </ion-row>\n\n\n\n </ion-toolbar>\n\n \n\n</ion-header> \n\n\n\n\n\n\n\n\n\n\n\n<ion-content  >\n\n\n\n  <!--  -->\n\n  <div [style.display]="(vistaerror === \'encamino\')? \'block\': \'none\'" id="custom-overlay"  >\n\n    <div class="flb">\n\n  \n\n           <div class="outer-circle">\n\n            <div class="green-scanner">\n\n               <!-- <img src="assets/imgs/circulotranspa1.png">   -->\n\n            </div>\n\n          </div> \n\n  \n\n  \n\n    </div>\n\n  </div>       \n\n\n\n\n\n<div [style.display]="(vistaerror === \'demorado\')? \'block\': \'none\'" id="custom-overlay"  >\n\n  <div class="flb">\n\n\n\n         <div class="outer-circle">\n\n          <div class="green-scanner">\n\n             <!-- <img src="assets/imgs/circulotranspa1.png">   -->\n\n          </div>\n\n        </div> \n\n\n\n\n\n  </div>\n\n</div>\n\n <!-- <img src="assets/imgs/servimovil.png">  --> \n\n\n\n<div [style.display]="(vistaerror === \'hecho\')? \'block\': \'none\'"  id="custom-overlay" >\n\n  <div class="flb">\n\n    <div class="Aligner-item Aligner-item--top"></div>\n\n   \n\n         <div class="outer-circle2">\n\n          <div class="green-scanner2"></div>\n\n        </div> \n\n\n\n\n\n    <div class="Aligner-item Aligner-item--bottom"></div>\n\n  </div>\n\n</div>\n\n\n\n\n\n<div *ngIf="visto" id="custom-overlay" >\n\n  <div class="flb">\n\n    <div class="Aligner-item Aligner-item--top"></div>\n\n   \n\n    <div class="pad-left" style="text-align:center"> \n\n     \n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <div *ngIf="vistaerror === \'hecho\'" style="color:#ffffff" >\n\n          <h3 > Buscando taxis ahora</h3> \n\n          \n\n       </div>\n\n       <div *ngIf="vistaerror === \'demorado\'" style="color:#ffffff" >\n\n        <h3 > Enviado a la agencia </h3> \n\n     </div>\n\n       <div *ngIf="vistaerror === \'encamino\'" style="color:#677077">\n\n        <h1 > ¡Holaaaa! <ion-icon color="energy" name="happy"></ion-icon> . Su pedido ha sido transferido a la Agencia, en un momentito nos comunicamos con usted y le haremos saber sobre él. </h1>  \n\n        <h1 > Gracias y lindo día <ion-icon color="danger" name="rose"></ion-icon>. </h1>  \n\n     \n\n      </div>\n\n       <br>\n\n       <br>\n\n       <br>\n\n       <div *ngIf="vistaerror === \'hecho\'" style="color:#ffffff" >\n\n      \n\n        <h3 > Si no hay disponibilidad, su pedido será enviado a la agencia </h3> \n\n        \n\n     </div>\n\n       <br>\n\n       <br>\n\n       <br>     \n\n       \n\n      <!-- <button ion-button   round (click)="what4()"><ion-icon color="secondary" name="logo-whatsapp"> </ion-icon> <div class="pad-left2" >   <h2>  Operadora </h2> </div> </button>  \n\n       -->\n\n       <br>\n\n      <br>\n\n      <!-- <button ion-button   round (click)="llamarNumero2()"><ion-icon color="secondary" name="call">  </ion-icon> <div class="pad-left2" > <h2>{{auto2.tel}} </h2> </div> </button>  \n\n      danger -->\n\n       \n\n       <br>\n\n       <br>\n\n       <br>\n\n\n\n       <div *ngIf="visto2" style="text-align:center"> \n\n        <button ion-button round type="submit" color="dark" (click)="openDialogo8()">  Cancelar pedido</button> \n\n        \n\n      </div>\n\n\n\n    </div> \n\n    \n\n\n\n    <div class="Aligner-item Aligner-item--bottom"></div>\n\n  </div>\n\n</div>\n\n\n\n<div *ngIf="this.viaje!=2&&botones">\n\n  <ion-fab class="my-button2" *ngIf="adm&&!validDesapear" [style.display]="(vista === \'mapa\')? \'block\': \'none\'" top  center  >\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <button  class="transparent" color="primary" [round]="true"  ion-button  (click)="modadmin()" class="btn1" > Administración  </button>\n\n  </ion-fab>   \n\n\n\n</div>  \n\n\n\n<div *ngIf="this.viaje!=2">\n\n  <ion-fab *ngIf="botones&&!validDesapear" [style.display]="(vista === \'mapa\')? \'block\': \'none\'" right top > \n\n    \n\n    \n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <button class="transparent" color="light" ion-fab mini  (click)="detallesp()"><ion-icon color="secondary" name="person"></ion-icon></button>\n\n    <br>\n\n    <button class="transparent" color="light" ion-fab mini  (click)="openDialogoDinamic()"><ion-icon color="secondary"  name="list-box"></ion-icon></button>\n\n    <!--   buscarultimo() para buscar el ultimo pedido  -->\n\n    <br>\n\n    \n\n    <button class="transparent" color="light" ion-fab mini  (click)="localizar()"><ion-icon color="secondary" name="locate"></ion-icon></button>\n\n    <!-- \n\n    <br>\n\n    <button class="transparent" ion-fab *ngIf="adm" color="light" (click)= "guardar3()" > <ion-icon name="clipboard" color="secondary" > </ion-icon></button>\n\n    <br>\n\n    <button class="transparent" ion-fab *ngIf="adm" color="light" (click)= "detalle()" > <ion-icon name="create" color="secondary" > </ion-icon></button>\n\n    -->\n\n    <!--openDialogoDinamic localizar removeLayer destinosBoton  mostraruta3 traceroute2 getDataPedido startTimer  getTrabajando  <button ion-fab *ngIf="tabla" color="tertiary" (click)= "calculaloca()" > <ion-icon name="calculator"> </ion-icon></button> -->\n\n       \n\n <!-- color="{{post.color}}" vistos detallesp localizar startBackgroundGeolocation2 singlenotification localizar  <button ion-fab mini (click)="cargarsv()"><ion-icon color="secondary" name="refresh"></ion-icon></button> -->\n\n    \n\n  </ion-fab>\n\n\n\n\n\n</div>\n\n  \n\n\n\n  <ion-fab *ngIf="botones&&!validDesapear" [style.display]="(vista === \'mapa\')? \'block\': \'none\'" right bottom > \n\n    \n\n    \n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <button class="transparent" color="light" ion-fab mini  (click)="openDialogo6()"><ion-icon color="secondary"  name="help"></ion-icon></button>\n\n    <!--   -->\n\n    <br>\n\n    \n\n    <!-- recortarComas openDialogo6  localizar getDataPedido startTimer  getTrabajando  <button ion-fab *ngIf="tabla" color="tertiary" (click)= "calculaloca()" > <ion-icon name="calculator"> </ion-icon></button> -->\n\n       \n\n <!--visto color="{{post.color}}" vistos detallesp localizar startBackgroundGeolocation2 singlenotification localizar  <button ion-fab mini (click)="cargarsv()"><ion-icon color="secondary" name="refresh"></ion-icon></button> -->\n\n    \n\n  </ion-fab>\n\n\n\n  <ion-fab *ngIf="(vistatipomoneda === \'si\')" left top >     \n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>\n\n    <br>    \n\n    <button ion-button  color="13" [round]="true"><h2> {{costoviaje}} <b> CUP </b> </h2><img src="assets/imgs/flags/cu.png" style="width: 50%; height: 50%;padding-left: 5px; "></button>    \n\n    <br>\n\n     <div *ngIf="this.mlc!=0">\n\n      <button ion-button  color="13" [round]="true"><h2> {{(costoviaje/this.mlc).toFixed(2)}} <b> MLC </b> </h2><img src="assets/imgs/flags/mlc.png" style="width: 55%; height: 55%;padding-left: 5px; "></button>    \n\n      <br>\n\n    </div>\n\n    <div *ngIf="this.usd!=0">\n\n      <button ion-button  color="13" [round]="true"><h2> {{(costoviaje/this.usd).toFixed(2)}} <b> USD </b> </h2><img src="assets/imgs/flags/us.png" style="width: 48%; height: 48%;padding-left: 5px; "></button>    \n\n      <br>\n\n    </div>\n\n    <div *ngIf="this.eur!=0">\n\n      <button ion-button  color="13" [round]="true"><h2> {{(costoviaje/this.eur).toFixed(2)}} <b> EUR </b> </h2><img src="assets/imgs/flags/eu.png" style="width: 55%; height: 55%;padding-left: 5px; "></button>    \n\n      <br>\n\n    </div>\n\n    <div *ngIf="this.rub!=0">\n\n      <button ion-button  color="13" [round]="true"><h2> {{(costoviaje/this.rub).toFixed(2)}} <b> RUB </b> </h2><img src="assets/imgs/flags/ru.png" style="width: 55%; height: 55%;padding-left: 5px; "></button>    \n\n      <br>\n\n    \n\n    </div>\n\n \n\n\n\n\n\n\n\n<!--      <div *ngFor="let moneda of this.tasas">\n\n      <button ion-button  color="13" [round]="true"><h2> {{moneda.val}} <b> {{moneda.nam}} </b> </h2><img src="assets/imgs/flags/{{moneda.flag}}.png" style="width: 55%; height: 55%;padding-left: 5px; "></button>    \n\n      <br>\n\n     \n\n    </div>  -->\n\n    <br>  \n\n<!--     <div *ngIf="!aceptado"> [color]="destinoBoton ? \'13\' : \'primary\'"\n\n      <ion-item  color="azu"  button *ngFor="let address of this.chvisto" >\n\n        <ion-icon color="light" name="person"> {{ address.nam }}</ion-icon>\n\n        \n\n      </ion-item>\n\n    </div>\n\n -->\n\n  </ion-fab>\n\n\n\n<!-- changecolor -->\n\n <!--  <ion-fab [style.display]="(vista === \'mapa\')? \'block\': \'none\'" right bottom> \n\n    <button ion-fab mini color="{{post.color}}" (click)="startBackgroundGeolocation()"><ion-icon color="secondary"  name="brush"></ion-icon></button>\n\n    \n\n  </ion-fab> -->\n\n\n\n  \n\n  <ion-fab *ngIf="botones&&!validDesapear" [style.display]="(vista === \'realizado\')? \'block\': \'none\'" right top>\n\n    <br>\n\n    <button ion-fab mini (click)="detallesp()"><ion-icon color="secondary" name="person"></ion-icon></button>\n\n    <br>\n\n    <button ion-fab *ngIf="tabla" color="tertiary" (click)= "guardar3()" > <ion-icon name="clipboard"> </ion-icon></button>\n\n    <br>\n\n    <button ion-fab *ngIf="tabla" color="tertiary" (click)= "calculaloca()" > <ion-icon name="calculator"> </ion-icon></button>\n\n  </ion-fab>\n\n\n\n\n\n  <div style="width: 100%; height: 100%; "   [style.display]="(vista === \'realizado\')? \'block\': \'none\'"  >\n\n    <img src="assets/imgs/comprobacion.png" style="width: 100%; height: 100%; ">\n\n  </div> \n\n  <!-- noconec vistaDatos tipoAuto  tipoAutoTool localizar removeLayer *ngIf="!noconex" type="submit" -->\n\n\n\n\n\n    <ion-fab  *ngIf="botones&&!validDesapear" [style.display]="(vista === \'mapa\')? \'block\': \'none\'" bottom  left  >\n\n      <div  style="text-align:center"> \n\n        <button ion-button *ngIf="this.viaje==2" round  color="danger" (click)="openDialogo7()"> <ion-icon color="light" name="remove-circle"></ion-icon>   </button> \n\n        \n\n      </div>       \n\n   </ion-fab> \n\n\n\n  <ion-fab class="my-button" *ngIf="botones&&!validDesapear" [style.display]="(vista === \'mapa\')? \'block\': \'none\'" bottom  center  >\n\n    <button  class="transparent" color="dark" [round]="true" *ngIf="this.viaje==1" ion-button  (click)="origenViaje()" class="btn1"  [disabled]="!validGeocode"> Origen  </button>\n\n    <button  class="transparent" color="dark" [round]="true" *ngIf="this.viaje==2" ion-button  (click)="origenViaje()" class="btn1"  [disabled]="!validGeocode"> Destino </button>\n\n  \n\n\n\n    <!-- <img *ngIf="!noconex" src="assets/imgs/inicio.png" style="width: 100%; height: 100%; ">  this.viaje==1 -->\n\n  </ion-fab>   \n\n\n\n\n\n\n\n  <ion-div [ngSwitch]="vista"   style="width: 100%;height: 100%;">\n\n \n\n    <ion-div style="width: 100%;height: 100%;" [style.display]="(vista === \'mapa\')? \'block\': \'none\'">\n\n\n\n      <div  id="map"  style="width: 100%; height: 100%; ">\n\n          \n\n      </div>\n\n\n\n   </ion-div>     \n\n  </ion-div>\n\n\n\n\n\n  <ion-fab [style.display]="(vistaoferta === \'vistaoferta\')? \'block\': \'none\'" top  right  >\n\n    <ion-toolbar #myToolbar  color="light" class="border-round">  \n\n\n\n      <ion-row align-items-center  >\n\n        <br>\n\n          <div style="text-align:center" > \n\n             <ion-title > <ion-icon color="light" name="swap">  </ion-icon> <b> Usted puede hacer su oferta </b> </ion-title> \n\n         <!--   <ion-title > <ion-icon color="light" name="swap">  </ion-icon> <b> Los precios altos se muestran primero a los choferes. </b> </ion-title>     \n\n         -->\n\n          </div>\n\n     </ion-row>\n\n        \n\n            <div style="text-align:center" > \n\n              <div  class="columna3">\n\n                <ion-row align-items-center  >\n\n                  <ion-col   size="4"  >\n\n                    <div  style="text-align:center"> \n\n                      <button center middle class="transparent" ion-button color="azu" round type="submit"  (click)="add()"><ion-icon  name="add"></ion-icon> </button> \n\n                  </div>\n\n                  </ion-col>\n\n  \n\n                  <ion-col   size="4"  >\n\n                    <!-- <img src="./assets/imgs/confort.png" width="100">\n\n                    <br> class="transparent"\n\n                                      <b> Confort: {{this.valorMin2}} {{this.rebaja}}</b><br>\n\n                                    -->\n\n                    <b>{{this.pasapasa}}  <ion-icon  name="logo-usd"></ion-icon></b>  \n\n                  </ion-col>\n\n  \n\n                  <ion-col   size="4"  >\n\n                    <div  style="text-align:center"> \n\n                      <button center middle color="azu" round  class="transparent" ion-button type="submit" [disabled]="minval"  (click)="remove()"><ion-icon  name="remove"></ion-icon> </button> \n\n                  </div>\n\n                  </ion-col>               \n\n                </ion-row>\n\n              </div>  \n\n            </div>\n\n\n\n      <ion-row  align-items-center  >\n\n          <ion-col *ngIf="this.rebaja!=\'0\'" size="4"  >\n\n                    <div  style="text-align:center"> \n\n                      <button ion-button color="azu" round type="submit"  (click)="ofeAceptar()"> Hacer oferta</button> \n\n                  </div>\n\n           </ion-col>\n\n\n\n          <ion-col  size="4"  >\n\n            <div  style="text-align:center"> \n\n              <button ion-button round type="submit" color="danger" (click)="ofeCancelar()">  Cancelar </button> \n\n            </div>\n\n          </ion-col>                         \n\n      </ion-row>\n\n    </ion-toolbar>\n\n  </ion-fab>   \n\n\n\n  \n\n  \n\n  <ion-fab [style.display]="(vistatipomoneda === \'si\')? \'block\': \'none\'"  left top  >\n\n    \n\n    <ion-row align-items-left  >\n\n    \n\n        <ion-col  size="4"   class="border-round" >\n\n          <div class="border-round3" style="text-align:left;background-color: #ffffff;padding-left: 10px;padding-right: 10px" > \n\n            <b > <ion-icon color="primary" name="locate">  </ion-icon> Origen: {{this.origename}}</b> \n\n          </div>\n\n          \n\n        </ion-col>                         \n\n    \n\n    </ion-row>\n\n\n\n    \n\n    <ion-row align-items-left  >\n\n    \n\n      <ion-col  size="4" class="border-round" >\n\n        <div  class="border-round3" style="text-align:left;background-color: #ffffff;padding-left: 10px;padding-right: 10px" > \n\n          <b > <ion-icon color="primary" name="pin">  </ion-icon>Destino: {{this.destinoname}}</b> \n\n        </div>\n\n          \n\n      </ion-col>                         \n\n  \n\n  </ion-row>\n\n\n\n  </ion-fab> \n\n\n\n\n\n\n\n  <ion-fab [style.display]="(vistatipo === \'norute\')? \'block\': \'none\'" bottom  left  >\n\n    <ion-toolbar #myToolbar  color="light" class="border-round">  \n\n      \n\n      <div style="text-align:center" > \n\n        <ion-title > <ion-icon color="light" name="swap">  </ion-icon> Seleccione el vehículo</ion-title> \n\n      </div>\n\n  \n\n      <ion-row align-items-center  >\n\n        \n\n        <!-- Seleccione el tipo de vehículo o cancele para trazar una nueva ruta. -->\n\n\n\n        <ion-col *ngIf="this.smoto==\'true\'" size="4"  >\n\n          <div style="text-align:center" (click)="moto()"> \n\n            <div *ngIf="this.tipo===1" class="columna">\n\n              <img src="./assets/imgs/moto.png" width="50"> \n\n              <br>\n\n              <b> Moto: </b> <br>           \n\n              <b>{{this.cmoto2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n                \n\n            </div>\n\n            <div *ngIf="this.tipo!==1" >\n\n              <img src="./assets/imgs/moto.png" width="50"> \n\n              <br>\n\n              <b> Moto: </b> <br>           \n\n              <b>{{this.cmoto2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n                \n\n        \n\n            </div>\n\n            \n\n          </div>\n\n        </ion-col>\n\n\n\n          <ion-col *ngIf="this.sbasico==\'true\'" size="4"  >\n\n            <div style="text-align:center" (click)="basico()"> \n\n              <div *ngIf="this.tipo===2" class="columna">\n\n                <img src="./assets/imgs/basico.png" width="100"> \n\n                <br>\n\n                <b> Básico: </b> <br>           \n\n                <b>{{this.cbasico2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n                  \n\n              </div>\n\n              <div *ngIf="this.tipo!==2" >\n\n                <img src="./assets/imgs/basico.png" width="100"> \n\n                <br>\n\n                <b> Básico: </b> <br>           \n\n                <b>{{this.cbasico2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n                  \n\n          \n\n              </div>\n\n              \n\n            </div>\n\n          </ion-col>\n\n        \n\n        \n\n        \n\n          <ion-col  *ngIf="this.sconfort==\'true\'" size="4"  >\n\n            <div style="text-align:center" (click)="confort()"> \n\n              <div *ngIf="this.tipo===3" class="columna">\n\n                <img src="./assets/imgs/confort.png" width="100">\n\n                <br>\n\n                <b> Confort: </b><br>\n\n                <b>{{this.cconfort2}} <ion-icon  name="logo-usd"></ion-icon></b>                   \n\n              </div>\n\n              <div *ngIf="this.tipo!==3" >\n\n                <img src="./assets/imgs/confort.png" width="100">\n\n                <br>\n\n                <b> Confort: </b><br>\n\n                <b>{{this.cconfort2}} <ion-icon  name="logo-usd"></ion-icon></b>              \n\n              </div>\n\n  \n\n            </div>\n\n          </ion-col>                         \n\n  \n\n  \n\n          <ion-col  *ngIf="this.smicro==\'true\'" size="4" >\n\n            <div style="text-align:center"  (click)="microbus()"> \n\n              <div *ngIf="this.tipo===4" class="columna">\n\n                <img src="./assets/imgs/minibus.png" width="110">\n\n                <br>\n\n                <b> Minivan</b><br>\n\n                <b>{{this.cmicrob2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n                              \n\n              </div>\n\n              <div *ngIf="this.tipo!==4" >\n\n                <img src="./assets/imgs/minibus.png" width="110">\n\n                <br>\n\n                <b> Minivan</b><br>\n\n                <b>{{this.cmicrob2}} <ion-icon  name="logo-usd"></ion-icon></b>\n\n                \n\n              </div>\n\n            </div>\n\n          </ion-col>  \n\n  \n\n      </ion-row>\n\n  \n\n      <ion-row  align-items-center  >\n\n        \n\n        <ion-col  size="4"  >\n\n  <!--         <div  style="text-align:center;background-color:antiquewhite" (click)="this.pasajeros()">  \n\n          </div>\n\n        -->\n\n          <div  style="text-align:center"> \n\n            <button ion-button color="dark" round type="submit" [disabled]="!valid" (click)="pasajeros()"> Viajar ahora</button> \n\n            \n\n        </div>\n\n        \n\n        </ion-col>\n\n        \n\n        <ion-col  size="4"  >\n\n          <!--         <div  style="text-align:center;background-color:antiquewhite" (click)="this.pasajeros()">  \n\n                  </div>\n\n                -->\n\n                  <div  style="text-align:center"> \n\n                    <button ion-button color="dark" round type="submit" [disabled]="!valid" (click)="pedidoreal()"> Reservar viaje</button> \n\n                    \n\n                </div>\n\n                \n\n          </ion-col>\n\n\n\n          <ion-col *ngIf="this.rebaja!=\'0\'" size="4"  >\n\n            <!--         <div  style="text-align:center;background-color:antiquewhite" (click)="this.pasajeros()">  \n\n                    </div>\n\n                  -->\n\n                    <div  style="text-align:center"> \n\n                      <button ion-button color="azu" round type="submit" [disabled]="!valid" (click)="ofertar()"> Ofertar</button> \n\n                      \n\n                  </div>\n\n                  \n\n           </ion-col>\n\n\n\n          <ion-col  size="4"  >\n\n  <!--           <div style="text-align:center;background-color:aqua" (click)="cancel()">          \n\n            </div>     -->\n\n  \n\n            <div  style="text-align:center"> \n\n              <button ion-button round type="submit" color="danger" (click)="openDialogo7()">  Cancelar </button> \n\n              \n\n            </div>\n\n  \n\n          </ion-col>                         \n\n  \n\n  \n\n  \n\n      </ion-row>\n\n  \n\n  \n\n    </ion-toolbar>\n\n  </ion-fab>   \n\n\n\n\n\n  <ion-fab [style.display]="(vistatipo === \'reserva\')? \'block\': \'none\'" bottom  left  >\n\n    <ion-toolbar #myToolbar  color="light" class="border-round">  \n\n      \n\n\n\n      <ion-card class="masterscard" >      \n\n           \n\n        <ion-card-content >                       \n\n            <div  style="padding: 0px;text-align:left"> \n\n                  <b> <ion-label color="secondary"><ion-icon name="clipboard"> </ion-icon> Seleccione día y hora para su viaje  </ion-label>                              \n\n                  </b> \n\n             </div>\n\n                                                  <!-- Formulario para la inscripcion  {{this.tipo}}-->\n\n                        <!-- [(ngModel)]="myDate1" displayFormat="DD MMMM"--> \n\n                              <ion-item> \n\n                                <ion-label><ion-icon name="calendar"> </ion-icon> Dia de recogida</ion-label>\n\n                                <ion-datetime cancelText="Cancelar" doneText="Aceptar"\n\n                                              [min]="today"\n\n                                              displayFormat="DD, MMM"                                              \n\n                                              pickerFormat="DD MMM"  \n\n                                              (ionChange)="updateValues($event)"\n\n                                              monthShortNames="Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre">\n\n                                </ion-datetime>\n\n                              </ion-item> \n\n                                 \n\n                              <ion-item>\n\n                                <ion-label><ion-icon name="clock"> </ion-icon> Hora de recogida</ion-label>\n\n                                <ion-datetime cancelText="Cancelar" doneText="Aceptar"\n\n                                              displayFormat="hh:mm a"  \n\n                                              pickerFormat="hh:mm a" \n\n                                              minuteValues="0,10,20,30,40,50"\n\n                                              [(ngModel)]="myDate2">\n\n                                </ion-datetime> \n\n                              </ion-item>          \n\n                    \n\n    </ion-card-content> \n\n    \n\n    <ion-row  align-items-center  >  \n\n      <!--  [disabled]="!datos.valid" -->\n\n       <ion-col size="4">\n\n        \n\n         <div  style="text-align:center"> \n\n                <button ion-button  round  color="danger" (click)="openDialogo7()"> <ion-icon color="light" name="remove-circle"></ion-icon>   </button> \n\n          \n\n                 <button color="dark" ion-button round type="submit" ><ion-icon name="send" item-start (click)="pedidoreal2()"> Enviar pedido</ion-icon></button> \n\n                 \n\n         </div>\n\n     </ion-col> \n\n\n\n     </ion-row> \n\n    </ion-card>  \n\n\n\n  \n\n    </ion-toolbar>\n\n  </ion-fab> \n\n\n\n<!-- this.provincia <ion-fab *ngIf="botones&&this.hayped2&&!validDesapear"  bottom  left  >\n\n    <button ion-button (click)="openDialogoDinamic()" [color]="destinoBoton ? \'13\' : \'primary\'" [round]="true"><ion-icon  name="list-box" color="secondary"></ion-icon></button>  \n\n  </ion-fab>  -->\n\n\n\n<div *ngIf="provinciact&&this.viaje!=2">\n\n  <ion-fab  *ngIf="botones&&!validDesapear"  bottom  left  >\n\n    <button class="transparent"  ion-button (click)="provincias()" [color]="destinoBoton ? \'light\' : \'dark\'" [round]="true"><ion-icon  name="briefcase" color="secondary"></ion-icon></button>  \n\n  </ion-fab> \n\n</div>\n\n\n\n \n\n</ion-content>\n\n\n\n<!-- \n\n  \n\n  <div style="width: 100%; height: 100%; "   [style.display]="(vistatipo === \'norute\')? \'block\': \'none\'"  >\n\n    \n\n\n\n</div> \n\n  <ion-footer [ngStyle]="{\'width.%\': progress()}" [style.display]="(vistatipo === \'norute\')? \'block\': \'none\'" >\n\n              \n\n      \n\n      \n\n  </ion-footer> \n\n  \n\n -->\n\n\n\n \n\n                  \n\n'/*ion-inline-end:"E:\14\gaso\src\pages\taxis\taxis.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_taxis_service_taxis_service__["a" /* TaxisServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_unique_device_id__["a" /* UniqueDeviceID */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_http__["a" /* HTTP */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_background_geolocation__["a" /* BackgroundGeolocation */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_11__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_12__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_16__providers_global_global__["a" /* GlobalProvider */],
            __WEBPACK_IMPORTED_MODULE_17__ionic_native_social_sharing__["a" /* SocialSharing */],
            __WEBPACK_IMPORTED_MODULE_20__ionic_native_text_to_speech__["a" /* TextToSpeech */],
            __WEBPACK_IMPORTED_MODULE_21__ionic_native_device__["a" /* Device */],
            __WEBPACK_IMPORTED_MODULE_23__ionic_native_network__["a" /* Network */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_25__ionic_native_screen_orientation__["a" /* ScreenOrientation */],
            __WEBPACK_IMPORTED_MODULE_26__ionic_native_native_audio__["a" /* NativeAudio */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["k" /* ChangeDetectorRef */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["u" /* ElementRef */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["X" /* Renderer2 */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["W" /* Renderer */],
            __WEBPACK_IMPORTED_MODULE_27__ionic_native_keyboard__["a" /* Keyboard */],
            __WEBPACK_IMPORTED_MODULE_28__ionic_native_local_notifications__["a" /* LocalNotifications */],
            __WEBPACK_IMPORTED_MODULE_29__ionic_native_call_number__["a" /* CallNumber */],
            __WEBPACK_IMPORTED_MODULE_30__angular_platform_browser__["c" /* DomSanitizer */],
            __WEBPACK_IMPORTED_MODULE_34__providers_smart_audio_smart_audio__["a" /* SmartAudioProvider */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["N" /* NgZone */],
            __WEBPACK_IMPORTED_MODULE_36__ionic_storage__["b" /* Storage */]])
    ], TaxisPage);
    return TaxisPage;
}());

//# sourceMappingURL=taxis.js.map

/***/ }),

/***/ 900:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SignupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_taxis_service_taxis_service__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_platform_browser__ = __webpack_require__(48);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




//import { NgZone  } from '@angular/core';


/**
 * Generated class for the SignupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
//src="https://taxislibrehabana.herokuapp.com/#/entrar"
var SignupPage = /** @class */ (function () {
    function SignupPage(navCtrl, navParams, loadingService, taxisService, sanitize, events) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loadingService = loadingService;
        this.taxisService = taxisService;
        this.sanitize = sanitize;
        this.events = events;
        this.carros = [];
        //veces= false;
        this.video = {
            url: 'http://ofertas.cu/',
            title: 'Awesome Page'
        };
        this.url = sanitize.bypassSecurityTrustResourceUrl("http://ofertas.cu/");
    }
    SignupPage.prototype.ionViewWillEnter = function () {
        var _this = this;
        this.url = this.sanitize.bypassSecurityTrustResourceUrl("http://ofertas.cu/");
        // this.trustedVideoUrl = this.sanitize.bypassSecurityTrustResourceUrl(this.video.url);
        this.taxisService.cargarTaxis(23.113592, -82.366592).subscribe(function (response) {
            _this.carros = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            // this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            // this.loadingService.dismissLoading();
        });
        this.events.subscribe('user:created', function (time) {
            // user and time are the same arguments passed in `events.publish(user, time)`
            console.log('Welcome', 'at', time);
            // alert('Este es el mensaje desde WILLENTER.'+'Bienvenido a las'+time);
            //TRABAJO DIRECTO CON EL IFRAME PARA QUE SE INICIALIZE SIEMPRE QUE SE OPRIMA EL 
            // let src: string = this.eventsPage.nativeElement.src;
            // this.eventsPage.nativeElement.src = src;
            _this.events.unsubscribe('user:created');
        });
    };
    SignupPage.prototype.urlpaste = function () {
        this.url = "http://ofertas.cu/";
        return this.sanitize.bypassSecurityTrustResourceUrl(this.url);
    };
    SignupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-signup',template:/*ion-inline-start:"E:\14\gaso\src\pages\signup\signup.html"*/'<!--\n\n  Generated template for the SignupPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n\n\n\n\n\n\n<ion-view>\n\n  <ion-content class= \'padding has-subheader\'>\n\n    <!-- <iframe class= \'webPage\' name= "eventsPage" id="eventsPage"  [src]="trustedVideoUrl"   > -->\n\n      <iframe  height="100%" width="100%" [src]="urlpaste()" >\n\n   </iframe>\n\n  </ion-content>\n\n</ion-view>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\signup\signup.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_taxis_service_taxis_service__["a" /* TaxisServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_platform_browser__["c" /* DomSanitizer */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Events */]])
    ], SignupPage);
    return SignupPage;
}());

//# sourceMappingURL=signup.js.map

/***/ }),

/***/ 902:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Gasolinera */
/* unused harmony export GASOLINERAS */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GasolineraServiceProviderMock; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/*
  Generated class for the GasolineraServiceProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var Gasolinera = /** @class */ (function () {
    function Gasolinera() {
    }
    return Gasolinera;
}());

var GASOLINERAS = [
    { id: 1, nombre: ' Servicentro Víbora Park', direccion: 'Porvenir entre San Leonardo y Santa Beatriz', telefono: "76902378", lat: "23.0833320", lng: "-82.357255", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 2, nombre: ' MARINA HEMINGWAY', direccion: ' Ave.5ta. e/ 248.Playa ', telefono: "72069042", lat: " 23.08851803", lng: "-82.49170739", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 3, nombre: ' NOVIA DEL MEDIO DIA ', direccion: ' Autopista No. 1002 e/ Ave.51.Arroyo Arenas ', telefono: "72020505 ", lat: " 23.03301771 ", lng: " -82.47318238", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 4, nombre: ' ORO NEGRO (SAN ANTONIO DE LOS BAÑOS) ', direccion: ' Carretera Rincón. San Antonio de los Baños. ', telefono: "No hay datos ", lat: " 22.89631157", lng: " -82.48593159", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 5, nombre: ' EL PRINCIPAL ', direccion: ' Ave.Independencia e/ 379.Boyeros ', telefono: " 76830369 ", lat: " 22.97784334 ", lng: " -82.38426581", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 6, nombre: ' FONTANAR ', direccion: ' Carretera Wajay e/ 202.Fontanar ', telefono: " No hay datos ", lat: " 23.02214004", lng: " -82.40243074", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 7, nombre: ' AMERICA LATINA ', direccion: '17 Sección H No. 55 e/ 68-A.Frank Pais. ', telefono: "76098317 ", lat: " 22.96940269 ", lng: " -82.30436783", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 8, nombre: ' CENTRO COMERCIAL CAMILO CIENFUEGOS ', direccion: ' Centro Comercial.Camilo Cienfuegos ', telefono: "77662451 ", lat: " 23.16126243 ", lng: " -82.32910618", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 9, nombre: ' TARARÁ ', direccion: ' Vía Blanca No. 34035 e/ Portal.Tarará. Habana del Este ', telefono: "77960515  ", lat: " 23.1687537 ", lng: " -82.20469896", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 10, nombre: ' EL PALACE ', direccion: ' Ave.101 e/ 8.Paraíso.Cotorro ', telefono: "76827564", lat: " 23.0502453 ", lng: " -82.27664821", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 11, nombre: 'Cotorro ', direccion: ' Ave.101 e/ 36.Cotorro ', telefono: "76821843", lat: " 23.03846501 ", lng: " -82.2600802", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 12, nombre: ' GATO VERDE ', direccion: ' Vía Blanca.Guanabo ', telefono: "77962867", lat: " 23.16318622 ", lng: " -82.15206865", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 13, nombre: ' PEÑAS ALTAS ', direccion: ' Vía Blanca e/ 420.Guanabo ', telefono: "77963063", lat: " 23.1681625 ", lng: " -82.1178896", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 14, nombre: ' GUANABO ', direccion: ' Ave. 5ta. e/ 464.Guanabo ', telefono: "77964094", lat: " 23.16965344 ", lng: " -82.14617617", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 15, nombre: ' ALAMAR ', direccion: ' Vía Blanca e/ 164.Alamar. ', telefono: "77653901", lat: " 23.15705902 ", lng: " -82.27144707", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 16, nombre: ' ROTONDA DE COJIMAR ', direccion: '15 e/ Vía Blanca.Rotonda de Cojímar ', telefono: "77974970", lat: " 23.14508339 ", lng: " -82.30093058", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 17, nombre: ' EL ESPECIAL ', direccion: ' Martí e/ Bécquer.Guanabacoa ', telefono: "77977345", lat: " 23.1232605 ", lng: " -82.30923604", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 18, nombre: ' CORRAL FALSO ', direccion: ' Independencia e/ División.Guanabacoa ', telefono: "77976638", lat: " 23.11985113 ", lng: " -82.3033382", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 19, nombre: ' AEREOPUERTO ', direccion: ' Nvo.V.al Aeropuerto e/ Rotonda Cujae.', telefono: "72676815", lat: " 23.04771088 ", lng: " -82.418698", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 20, nombre: ' La Nueva Joya', direccion: ' Ave.51 No. 21211 e/ 212.La Lisa ', telefono: "72606624", lat: " 23.06116081", lng: " -82.45289315", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 21, nombre: 'Los Cocos ', direccion: ' Ave.45 No. 11622 esq. 122.Marianao ', telefono: "72606407 ", lat: " 23.07507885", lng: " -82.47311566", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 22, nombre: ' Cupet Capdevila', direccion: ' Ave.Independencia e/ Varona.Capdevila.', telefono: "76497631", lat: " 23.05320757", lng: " -82.40301043", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 23, nombre: 'Cupet Reloj Club ', direccion: ' Boyeros e/ Calzada de Vento.Boyeros ', telefono: " No hay datos", lat: " 23.06035196", lng: " -82.40212999", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 24, nombre: 'El Futuro ', direccion: ' 100 e/ Calzada de Vento.Boyeros ', telefono: "76432718 ", lat: " 23.06896798 ", lng: " -82.3944857", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 25, nombre: 'Altahabana ', direccion: ' San Francisco e/ Perla.Altahabana ', telefono: "76441404 ", lat: " 23.06302311", lng: " -82.39060823", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 26, nombre: 'Siboney ', direccion: ' Ave. 5ta e/ 162.Playa ', telefono: "72084536", lat: " 23.08980814", lng: " -82.45957151", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 27, nombre: ' La Rotonda', direccion: ' Ave.5ta. e/ 120.Miramar. ', telefono: "72089617", lat: " 23.09248179 ", lng: " -82.45372932", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 28, nombre: '5ta y 112 ', direccion: ' Ave. 5ta. e/ 112.Playa ', telefono: "72040350", lat: " 23.09786068", lng: " -82.44978648", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 29, nombre: ' 13 y 84', direccion: ' Ave.13 e/ 84.Playa. ', telefono: "72041938 ", lat: " 23.09987544", lng: " -82.43679553", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 30, nombre: 'Coyula ', direccion: ' Ave.19 e/ 76.Playa. ', telefono: "72096958 ", lat: " 23.10111641 ", lng: " -82.43161049", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 31, nombre: '60 y 27 ', direccion: '60 e/ Ave.27.Playa ', telefono: "72034709 ", lat: " 23.10366124", lng: " -82.42208697", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 32, nombre: 'Lido ', direccion: ' Ave. 41 e/ 80.Marianao. ', telefono: "72607489 ", lat: " 23.09558345", lng: " -82.42187206", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 33, nombre: 'Tropicana ', direccion: ' Ave.41 e/ 72.Playa. ', telefono: "72040938", lat: " 23.094826", lng: " -82.42045484", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 34, nombre: 'El Arbolito ', direccion: '42 No. 3302 e/ Ave.33.Playa. ', telefono: "72037156", lat: " 23.11145022 ", lng: " -82.41691064", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 35, nombre: 'El Mar ', direccion: '42 e/ Ave.39.Playa ', telefono: "72069781 ", lat: " 23.1112393", lng: " -82.41407789", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 36, nombre: '1ra y 40 ', direccion: ' Ave.1ra. No. 4009 e/ 40.Playa.', telefono: "72046645", lat: " 23.11970652 ", lng: " -82.43176606", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 37, nombre: '31 y 18 ', direccion: ' Ave. 31 e/ 18.Miramar ', telefono: "72043174 ", lat: " 23.11962419 ", lng: " -82.41635341", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 38, nombre: ' Oro Negro El Túnel', direccion: ' Ave.7ma. e/ 2.Playa ', telefono: "72041906 ", lat: " 23.12697996  ", lng: " -82.41219196  ", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 39, nombre: 'Oro Negro El Puente ', direccion: '23 e/ 26 y 28.Vedado ', telefono: "78346517", lat: " 23.12167284", lng: " -82.40614794", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 40, nombre: ' 23 y 24', direccion: ' 23 e/ 24 y 26.Vedado ', telefono: "78369700", lat: " 23.12320346 ", lng: " -82.40526583", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 41, nombre: '100 y 51 ', direccion: '100 e/ Ave.51.Marianao ', telefono: "72670733 ", lat: " 23.080654", lng: " -82.42201924", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 42, nombre: 'Luciban ', direccion: ' Ave.51 e/ 96.Marianao ', telefono: "72606198 ", lat: " 23.08272545 ", lng: " -82.42040455", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 43, nombre: 'Vista Hermosa ', direccion: ' Calzada de San Miguel del Padrón e/ Vista.Hermosa ', telefono: "76915476", lat: " 23.10214829 ", lng: " -82.33436666", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 44, nombre: 'El Radiante ', direccion: ' Ave.de Acosta e/ Ave. Camilo Cienfuegos.Lawton ', telefono: "76991610", lat: " 23.09113587", lng: " -82.35176247", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 45, nombre: 'Poey y Santa Catalina ', direccion: ' Santa Catalina e/ Poey.Víbora.  ', telefono: "76491230", lat: " 23.09403741 ", lng: " -82.36578036", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 46, nombre: '10 de Octubre y Lagueruela ', direccion: ' Czda. 10 de Octubre Esq. Lagueruela, Sevillano ', telefono: "76995918 ", lat: " 23.08656047", lng: " -82.36642342", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 47, nombre: 'Mónaco ', direccion: ' Mayía Rodríguez e/ Aranguren.Víbora ', telefono: "76403189", lat: " 23.088378 ", lng: " -82.37873979", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 48, nombre: '24 y Dolores ', direccion: ' Ave.Camilo Cienfuegos e/ 24.Lawton ', telefono: "76499604", lat: " 23.0840659", lng: " -82.33941089", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 49, nombre: 'Novedades ', direccion: ' Sta.Catalina No. 602 e/ M.Rodríguez.Santos Suárez ', telefono: "76406851", lat: " 23.0960479 ", lng: " -82.37748921", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 50, nombre: ' Vento y Santa Catalina', direccion: ' Santa Catalina e/ Czda.de Vento.Cerro ', telefono: "76410302", lat: " 23.09652901 ", lng: " -82.38236647", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 51, nombre: ' El Protector', direccion: ' General Lacret esq. Juan Delgado.Santos Suárez ', telefono: "76407882", lat: " 5376407882 ", lng: " -82.37336598", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 52, nombre: 'Oro Negro La Forestal ', direccion: ' Ave.Independencia esq. Santa Catalina.Cerro ', telefono: "76495221 ", lat: " 23.09873561", lng: " -82.39433751", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 53, nombre: 'Ciudad Deportiva ', direccion: ' Vía Blanca e/ Pizarro.Cerro ', telefono: "76405933", lat: " 23.10265096", lng: " -82.3917485", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 54, nombre: ' Inder', direccion: ' Ave. 26 e/ Santa Teresa.Nuevo Vedado ', telefono: "78818007", lat: " 23.10746266 ", lng: " -82.39733957", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 55, nombre: ' Cupet Ayestarán y Boyeros', direccion: ' Ave.Independencia(Boyeros) esq. Ayestarán.Plaza de la Revolución ', telefono: "78736051", lat: " 23.11085754", lng: " -82.39030011", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 56, nombre: 'Cerro ', direccion: ' Calzada del Cerro e/ Patria.Cerro. ', telefono: "78764741", lat: " 23.11543643 ", lng: " -82.37602707", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 57, nombre: 'Vía Blanca y Agua Dulce ', direccion: ' Vía Blanca e/ Agua Dulce.Cerro ', telefono: "78764745", lat: " 23.11318077", lng: " -82.36729581", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 58, nombre: 'El Especial ', direccion: ' Calzada de Luyanó e/ Luco.Luyanó.', telefono: "76987010", lat: " 23.10621835 ", lng: " -82.36085918", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 59, nombre: 'Fábrica ', direccion: ' Fábrica e/ Línea del Ferrocarril.Luyanó ', telefono: "76992155", lat: " 23.1141148", lng: " -82.35963576", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 60, nombre: 'Infanta y Manglar ', direccion: ' Infanta esq. Manglar.Centro Habana ', telefono: " No hay datos ", lat: " 23.12363174 ", lng: " -82.3746977", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 61, nombre: ' El Portón', direccion: ' Árbol Seco e/ Santa Marta.Centro Habana ', telefono: "78709926", lat: " 23.12507939 ", lng: " -82.37336699", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 62, nombre: 'Zanja y Espada ', direccion: ' Zanja No. 767.Centro Habana ', telefono: " No hay datos ", lat: " 23.13347667 ", lng: " -82.37614878", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 63, nombre: 'Cupet Infanta y San Rafael ', direccion: ' Infanta esq. San Rafael.Centro Habana.', telefono: " No hay datos ", lat: " 23.13535339 ", lng: " -82.3782409", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 64, nombre: ' G y 25', direccion: ' Ave.de los Presidentes e/ 25.Vedado ', telefono: "78350093", lat: " 23.13524548", lng: " -82.38760181", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 65, nombre: ' L y 17', direccion: ' L e/ 17.Vedado ', telefono: "78383816 ", lat: " 23.1426081", lng: " -82.38580171", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 66, nombre: 'Tángana ', direccion: ' Calzada e/ 13 y 15.Vedado ', telefono: "78351382", lat: " 23.14477078 ", lng: " -82.38456052", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 67, nombre: ' Servi Línea y E', direccion: ' Línea e/ E.Vedado ', telefono: " No hay datos ", lat: " 23.14202234 ", lng: " -82.39121642", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 68, nombre: 'El Álamo ', direccion: ' Línea e/ 2.Vedado ', telefono: "78346516", lat: " 23.13632673 ", lng: " -82.40010358", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 69, nombre: 'Riviera ', direccion: ' Paseo e/ Malecón.Vedado ', telefono: "78333027", lat: " 23.14112827 ", lng: " -82.4019134", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 70, nombre: '17 y 12 ', direccion: ' 17 e/ 12.Vedado.', telefono: "78339238", lat: " 23.12956993", lng: " -82.40212698", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 71, nombre: 'La Cubana ', direccion: ' Zapata No. 419.Vedado ', telefono: "78336853", lat: " 23.12644655 ", lng: " -82.39503656", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 72, nombre: '23 y 24 ', direccion: ' 23 e/ 24 y 26.Vedado ', telefono: "No hay datos ", lat: " 23.12264967 ", lng: " -82.40527488", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 73, nombre: ' El Jardín', direccion: ' Zapata No. 1639 e/ 2 y 4.Vedado ', telefono: "78346514", lat: " 23.12783404", lng: " -82.39388086", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 74, nombre: 'Acapulco ', direccion: '26 e/ Ave.39.Nuevo Vedado. ', telefono: "78815313", lat: " 23.11624556 ", lng: " -82.40052167", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 75, nombre: ' El Crisol ', direccion: ' Calzada de Regla No.252. Modelo ', telefono: "77977242", lat: " 23.11843118", lng: " -82.32637502", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 76, nombre: ' Rotonda de la Shell ', direccion: ' Vía Blanca e/ Calzada de Guanabacoa. Guanabacoa ', telefono: "77975466", lat: " 23.11127198", lng: " -82.32575946", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 77, nombre: ' La Lisa ', direccion: ' 196 y 51. ', telefono: "No hay datos", lat: " 23.06631978", lng: " -82.44847488", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 78, nombre: ' 3ra y 12 Vedado ', direccion: ' 3ra y 12 Vedado ', telefono: "No hay datos", lat: " 23.135719", lng: " -82.407117", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
    { id: 79, nombre: ' Vista al Mar  ', direccion: ' Frente al Tángana  ', telefono: "78309481", lat: " 23.144943", lng: " -82.384458", gasolina: "No hay datos", petroleo: "No hay datos", hora: "9:0:0" },
];
var GasolineraServiceProviderMock = /** @class */ (function () {
    function GasolineraServiceProviderMock(http) {
        this.http = http;
        this.gasolineras = GASOLINERAS;
        //para la api de laravel 
        this.source = [];
    }
    GasolineraServiceProviderMock.prototype.cargarGasolinera = function () {
        // return this.http.get(this.baseUrl + 'taxis/data.json');
        // return this.http.post(this.baseUrl + 'taxis/positions', position);
        var _this = this;
        return __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["Observable"].create(function (observer) {
            observer.next(_this.gasolineras);
            observer.complete();
        });
    };
    GasolineraServiceProviderMock = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["B" /* Injectable */])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */]])
    ], GasolineraServiceProviderMock);
    return GasolineraServiceProviderMock;
}());

//# sourceMappingURL=gasolinera-service-mock.js.map

/***/ }),

/***/ 903:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GasolineraDetailsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the GasolineraDetailsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var GasolineraDetailsPage = /** @class */ (function () {
    /*
   //para recibir datos con un pop(), en este caso si datos de api o de mock
   //dataFromOtherPage = null;
   callback = data => {
    this.tiemporealok = data;
    console.log('data received from other page', this.tiemporealok);
   
   };
   */
    function GasolineraDetailsPage(navCtrl, navParams, gasolineraService, loadingService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.gasolineraService = gasolineraService;
        this.loadingService = loadingService;
        this.carros = [];
    }
    GasolineraDetailsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad GasolineraDetailsPage');
        //poner los colores
    };
    GasolineraDetailsPage.prototype.ionViewDidEnter = function () {
        this.gasolinera = this.navParams.get('gasolinera');
        this.tiemporealok = this.navParams.get("tiemporeal"); //bolean para poner o no la vista de los detalles
        console.log(this.gasolinera);
        this.ponchera = false;
        this.cargarServicentrosDisponibles();
    };
    //Cargar Servicentros disponibles desde el servidor
    GasolineraDetailsPage.prototype.cargarServicentrosDisponibles = function () {
        var _this = this;
        this.loadingService.presentLoading();
        this.gasolineraService.getData().subscribe(function (response) {
            _this.carros = response; //Posiciones objeto con la informacion del carro, chofer y la posicion
            //buscar la gasolinera en el JSON para actualizar los datos
            for (var _i = 0, _a = _this.carros; _i < _a.length; _i++) {
                var carro = _a[_i];
                if (carro.id == _this.gasolinera.id) {
                    _this.motor = JSON.parse(carro.motor); //this.gasolinera.motor
                    _this.regular = JSON.parse(carro.regular); //this.gasolinera.regular
                    _this.especial = JSON.parse(carro.especial); //this.gasolinera.especial
                    _this.diesel = JSON.parse(carro.diesel); //this.gasolinera.diesel
                    _this.gasolinera.cola = carro.cola;
                    _this.persona = carro.comentarios;
                    //para mejor formato de la hora
                    //var date = new Date();
                    //date.getTimezoneOffset()*50000
                    //this.hora= carro.updated_at
                    _this.myDate = new Date(carro.updated_at);
                    _this.myDate.setHours(_this.myDate.getHours() - 5);
                    _this.hora = _this.myDate;
                    //cambios para poneer ponchera dinamicamente
                    _this.ponchera = JSON.parse(carro.ponchera);
                    _this.mensaje = carro.mensaje;
                }
                else {
                }
            }
            _this.loadingService.dismissLoading();
        }, function (error) {
            _this.loadingService.presentError();
            _this.loadingService.dismissLoading();
            //prueba
        });
    };
    GasolineraDetailsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-gasolinera-details',template:/*ion-inline-start:"E:\14\gaso\src\pages\gasolinera-details\gasolinera-details.html"*/'<!--\n\n  Generated template for the GasolineraDetailsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header>\n\n  <ion-navbar color="primary">\n\n    <ion-title>Detalles del ServiCentro </ion-title>\n\n  </ion-navbar>\n\n</ion-header>\n\n<ion-content   padding class="detalle-gasolinera">\n\n  <ion-list *ngIf="gasolinera" no-padding >\n\n    <ion-item>\n\n      <h2>Nombre</h2>\n\n      <p>{{gasolinera.name.toUpperCase()}}</p>\n\n    </ion-item>\n\n\n\n    <ion-item>\n\n        <h2>Teléfono</h2>\n\n        <p>{{gasolinera.telefono}}</p>\n\n        <button ion-button clear item-end (click)="llamarNumero(gasolinera.telefono)"><ion-icon name="call"></ion-icon>&nbsp;Llamar</button>\n\n      </ion-item>\n\n\n\n    <ion-item>\n\n      <h2>Dirección</h2>\n\n      <p>{{gasolinera.direccion}}</p>\n\n    </ion-item>\n\n\n\n\n\n    <div  *ngIf="tiemporealok" >\n\n      <ion-item>\n\n        <h3>Información tomada de Internet</h3>\n\n        \n\n      </ion-item>\n\n      \n\n      <div  *ngIf="!ponchera" > \n\n        <ion-item color=\'verde\' *ngIf="motor" >\n\n          <h2>Gasolina Motor</h2>\n\n          <p>Hay</p>\n\n        </ion-item>\n\n         \n\n    \n\n         \n\n              <ion-item color=\'danger\' *ngIf="!motor">\n\n                <h2>Gasolina Motor</h2>\n\n                <p>No hay</p>\n\n              </ion-item>\n\n             \n\n    \n\n                \n\n                    <ion-item color=\'verde\' *ngIf="regular">\n\n                        <h2>Gasolina Regular</h2>\n\n                        <p>Hay</p>         \n\n                      </ion-item>\n\n                 \n\n                 \n\n                      <ion-item color=\'danger\' *ngIf="!regular">\n\n                          <h2>Gasolina Regular</h2>\n\n                          <p>No hay</p>         \n\n                        </ion-item>\n\n                    \n\n                    \n\n                              \n\n        <ion-item color=\'verde\' *ngIf="especial">\n\n            <h2>Gasolina Especial</h2>\n\n            <p>Hay</p>\n\n          </ion-item>\n\n                      \n\n                    \n\n               \n\n        <ion-item color=\'danger\' *ngIf="!especial">\n\n            <h2>Gasolina Especial</h2>\n\n            <p>No hay</p>\n\n          </ion-item>\n\n                       \n\n    \n\n                       \n\n                            <ion-item color=\'verde\' *ngIf=diesel>\n\n                                <h2>Petróleo</h2>\n\n                                <p>Hay</p>\n\n                              </ion-item>\n\n                          \n\n                        \n\n                              <ion-item color=\'danger\' *ngIf=!diesel>\n\n                                  <h2>Petróleo</h2>\n\n                                  <p>No hay</p>\n\n                                </ion-item>\n\n                            \n\n          \n\n    \n\n          \n\n        \n\n        <ion-item>\n\n          <h2>Cantidad de vehículos en la cola</h2>\n\n          <p>{{gasolinera.cola}}</p>\n\n        </ion-item>\n\n\n\n        <ion-item>\n\n          <h2>Hora en que se recibieron los datos:<p>{{hora}}</p></h2>\n\n        </ion-item>\n\n\n\n\n\n     <!--    <ion-item>\n\n          <ion-label>Now</ion-label>\n\n          <ion-datetime displayFormat="HH:mm"  [(ngModel)]="myDate"></ion-datetime>\n\n        </ion-item>\n\n -->\n\n      </div>\n\n\n\n      <div  *ngIf="ponchera" > \n\n        <ion-item color=\'verde\'>\n\n          <h2>En este Servicentro no se vende combustible su servicio es:</h2>\n\n          <p>{{mensaje}}</p>\n\n        </ion-item>\n\n\n\n      </div>\n\n      \n\n  \n\n      \n\n      </div>\n\n\n\n              <div *ngIf="!tiemporealok">\n\n                  <p> </p>\n\n                  <h2> Información</h2>\n\n                  <p> Para conocer los tipos de combustible debe conectarse a internet y refrescar el mapa de los servicentros, sin conexión la información en tiempo real solo puede conocerse llamando  directamente  por teléfono  con el dato de arriba. </p>\n\n          \n\n\n\n              </div>\n\n  \n\n      \n\n    \n\n    \n\n\n\n\n\n  </ion-list>\n\n  \n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\gasolinera-details\gasolinera-details.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_gasolinera_service_gasolinera_service__["a" /* GasolineraServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */]])
    ], GasolineraDetailsPage);
    return GasolineraDetailsPage;
}());

//# sourceMappingURL=gasolinera-details.js.map

/***/ }),

/***/ 904:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet__ = __webpack_require__(65);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_leaflet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_leaflet__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_leaflet_tilelayer_mbtiles_ts__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_leaflet_routing_machine__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};









var HomesPage = /** @class */ (function () {
    function HomesPage(navCtrl, geoLocation, loadingService, alertController, navParams, toastCtrl) {
        this.navCtrl = navCtrl;
        this.geoLocation = geoLocation;
        this.loadingService = loadingService;
        this.alertController = alertController;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.vista = 'mapa';
        this.markers = [];
        this.posicionactual = {
            //la posicion del cliente
            lat: 0,
            lon: 0,
        };
        //variable para el telefono
        this.telefono = '';
        //para la linea
        this.latlngs = [
            [45.51, -122.68],
            [37.77, -122.43]
        ];
        this.hayLinea = false;
        this.singps = true;
        this.cupflag = false;
        this.usdflag = false;
        this.eurflaf = false;
        this.nohayGPS = false;
        this.inputWaypoints2 = [];
        this.inputWaypoints3 = [];
        this.carro = this.navParams.get('carro');
        this.moneda = this.navParams.get('moneda');
        this.tasa = JSON.parse(this.carro.tas);
    }
    HomesPage.prototype.ionViewDidEnter = function () {
        //this.carro = this.navParams.get('item');
        this.openDialogo();
    };
    HomesPage.prototype.ionViewDidLoad = function () {
        if (this.moneda == "cupflag") {
            this.cupflag = true;
            this.usdflag = false;
            this.eurflaf = false;
            this.tasa2 = this.carro.tar;
        }
        else if (this.moneda == "usdflag") {
            this.usdflag = true;
            this.cupflag = false;
            this.eurflaf = false;
            this.tasa2 = +(this.tasa.usd * this.carro.tar).toFixed(2);
        }
        else if (this.moneda == "eurflaf") {
            this.eurflaf = true;
            this.cupflag = false;
            this.usdflag = false;
            this.tasa2 = +(this.tasa.eur * this.carro.tar).toFixed(2);
        }
        this.hayGPS = false; // variable de prueba local
        this.loadMap();
        this.localizar();
        //this.calcular2();
        //this.calcular(); // funcion de prueba local
        // this.openDialogo();
    };
    HomesPage.prototype.presentToast4 = function (cadena) {
        return __awaiter(this, void 0, void 0, function () {
            var toast;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toastCtrl.create({
                            message: cadena,
                            duration: 6000
                        })];
                    case 1:
                        toast = _a.sent();
                        toast.present();
                        return [2 /*return*/];
                }
            });
        });
    };
    //carga el mapa de leaflet
    HomesPage.prototype.loadMap = function () {
        var _this = this;
        if (this.map) {
            L.map('ruta_map').off();
            L.map('ruta_map').remove();
        }
        if (this.marker2) {
            this.marker2.removeFrom(this.map);
        }
        //Límites del mapa
        /*     let southWest = L.latLng({lat: 22.91736457507185, lng: -82.6171084443657});
            let northEast = L.latLng({lat: 23.240795592592406, lng: -81.91418475778585});
            let bounds = new L.LatLngBounds(southWest, northEast); */
        this.map = L.map('ruta_map', { maxBoundsViscosity: 1.0, attributionControl: false });
        this.map.setView([this.carro.lat, this.carro.lng], 15);
        //  this.map.setView([ 23.113592,-82.366592], 15);
        /*    L.tileLayer.mbTiles('assets/tiles/habana.mbtiles', {
             minZoom: 11,
             maxZoom: 16
           }).addTo(this.map);   */
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(this.map);
        //creacion del marcador verde con la posicion de la variable carro
        //marcador para el destino
        //cracion del icono
        var greenIcon = new L.Icon({
            iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
            // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        var casita = L.icon({
            iconUrl: 'assets/libs/leaflet/images/home1.ico',
            iconSize: [40, 40],
        });
        this.marker = L.marker([this.carro.lat, this.carro.lng], { draggable: false, icon: casita });
        this.marker.addTo(this.map);
        //prueba tomar posicion dinamicamente
        //this.map.on('click', (e:any) => { console.log(e.latlng); });
        // this.marker2.on('dragend', function (e) { alert(" hola mundo"); });
        this.marker2 = L.marker([this.carro.lat, this.carro.lng], { draggable: false, icon: greenIcon });
        this.marker2.addTo(this.map);
        this.map.on('move', function (e) {
            // console.log("algo sale" +this.map.getCenter());
            _this.marker2.setLatLng(_this.map.getCenter());
            //quitar el controlador   
            //  if(this.routeControl) {         
            //   this.map.removeControl(this.routeControl);
            //  }
        });
        this.map.on('moveend', function (e) {
            // console.log("algo sale" +this.map.getCenter());
            // alert(' El mapa se dejo de mover ' );
            _this.marker2.setLatLng(_this.map.getCenter());
            //this.calcular3()
        });
    };
    HomesPage.prototype.localizar = function () {
        var _this = this;
        /*  if (this.marker2) { // Borra el marcador del gps
           this.marker2.removeFrom(this.map);
             } */
        this.geoLocation.getCurrentPosition().then(function (resp) {
            if (resp.coords.latitude) {
                _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
                //  this.marker2 = L.marker([resp.coords.latitude, resp.coords.longitude ],{draggable: false});
                // this.marker2.addTo(this.map);
                _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
                //tomar la posicion actual
                _this.posicionactual.lon = resp.coords.longitude;
                _this.posicionactual.lat = resp.coords.latitude;
                // this.calcular2(); 
                _this.mostraruta();
            }
            else {
            }
        }).catch(function (error) {
            _this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            // this.hayGPS=false; //para saber si hay o no gps y enviar o no el sms  , 
            _this.posicionactual.lon = _this.carro.lng;
            _this.posicionactual.lat = _this.carro.lat;
            //this.calcular3();
            _this.mostraruta();
            // alert(' Usted no tiene una coordenada GPS válida, arrastre el marcador azul hasta el destino de la entrega');
        });
    };
    HomesPage.prototype.calcular3 = function () {
        var _this = this;
        this.loadingService.presentLoading();
        if (this.map) {
            if (this.routeControl) {
                this.map.removeControl(this.routeControl);
            }
            // this.posicionactual.lon=-82.366592;
            // this.posicionactual.lat=23.113592 ;
            //prueba               
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            this.routeControl = L.Routing.control({
                router: L.Routing.mapbox('pk.eyJ1IjoiaGFiYW5hc2VydmljZW50cm8iLCJhIjoiY2twZHQ3eXhnMXIwNDJvcDd2YzFzcDkycSJ9.eQ80vtUjN2QneGR6oVxH_w'),
                waypoints: [
                    L.latLng(curPos.lat, curPos.lng),
                    //L.latLng(this.posicionactual.lat, this.posicionactual.lon )
                    L.latLng(curPos2.lat, curPos2.lng)
                ],
                // language: 'es',
                show: false,
                routeWhileDragging: false,
                // autoRoute: true,
                showAlternatives: false
            }).addTo(this.map);
            this.routeControl.on('routesfound', function (e) {
                _this.routes = e.routes;
                _this.summary = _this.routes[0].summary;
                // alert distance and time in km and minutes
                // alert('');
                // console.log('Total distance is ' + this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(this.summary.totalTime % 3600 / 60) + ' minutes');
                _this.mDistanseKm = +(_this.summary.totalDistance / 1000).toFixed(2);
                //let float=parseFloat(this.mDistanseKm)
                //let float2=parseFloat(this.carro.curPos.tar)                 
                _this.resultado = +(_this.mDistanseKm * _this.tasa2).toFixed(2);
                //console.log(' distancia: '+ this.mDistanseKm2)
                //console.log(' resultados: '+ this.resultado)
                //console.log(' variable carro 1: '+this.carro.curPos.tar )
                console.log(" routes: " + JSON.stringify(_this.routes[0]));
                _this.inputWaypoints = _this.routes[0].inputWaypoints;
                console.log(" inputWaypoints: " + JSON.stringify(_this.inputWaypoints));
                for (var _i = 0, _a = _this.inputWaypoints; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    if (carro.latLng) {
                        _this.inputWaypoints2.push(carro.latLng);
                        console.log(" carro: " + JSON.stringify(carro.latLng));
                    }
                    // 
                }
                console.log(" inputWaypoints2: " + JSON.stringify(_this.inputWaypoints2));
                _this.destino = _this.inputWaypoints2.pop();
                console.log(" destino: " + JSON.stringify(_this.destino.lng));
                // this.map.setView([ this.destino.lat,  this.destino.lng], 15);
                _this.latlngs = [
                    [curPos.lat, curPos.lng],
                    [curPos2.lat, curPos2.lng]
                ];
                //trazar la linea entre los marcadores
                _this.polyline = L.polyline(_this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 });
                // zoom the map to the polyline
                _this.map.fitBounds(_this.polyline.getBounds());
                _this.loadingService.dismissLoading();
            });
        }
    };
    HomesPage.prototype.mostraruta = function () {
        var _this = this;
        if (this.map) {
            if (this.routeControl) {
                this.map.removeControl(this.routeControl);
            }
            //prueba               
            var curPos = this.marker.getLatLng();
            this.routeControl = L.Routing.control({
                router: L.Routing.mapbox('pk.eyJ1IjoiaGFiYW5hc2VydmljZW50cm8iLCJhIjoiY2twZHQ3eXhnMXIwNDJvcDd2YzFzcDkycSJ9.eQ80vtUjN2QneGR6oVxH_w'),
                waypoints: [
                    L.latLng(curPos.lat, curPos.lng),
                    L.latLng(this.posicionactual.lat, this.posicionactual.lon)
                ],
                //language: 'es',
                show: false,
                routeWhileDragging: false,
                // autoRoute: true,
                showAlternatives: false,
                lineOptions: {
                    styles: [{
                            color: 'green',
                            opacity: 1,
                            weight: 3
                        }]
                },
            }).addTo(this.map);
            this.routeControl.on('routesfound', function (e) {
                _this.routes = e.routes;
                _this.summary = _this.routes[0].summary;
                // alert distance and time in km and minutes
                // alert('');
                // console.log('Total distance is ' + this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(this.summary.totalTime % 3600 / 60) + ' minutes');
                _this.mDistanseKm = +(_this.summary.totalDistance / 1000).toFixed(2);
                //let float=parseFloat(this.mDistanseKm)
                //let float2=parseFloat(this.carro.curPos.tar)                 
                _this.resultado = +(_this.mDistanseKm * _this.tasa2).toFixed(2);
                //console.log(' distancia: '+ this.mDistanseKm2)
                //console.log(' resultados: '+ this.resultado)
                //console.log(' variable carro 1: '+this.carro.curPos.tar )
                console.log(" routes: " + JSON.stringify(_this.routes[0]));
                _this.inputWaypoints = _this.routes[0].inputWaypoints;
                console.log(" inputWaypoints: " + JSON.stringify(_this.inputWaypoints));
                for (var _i = 0, _a = _this.inputWaypoints; _i < _a.length; _i++) {
                    var carro = _a[_i];
                    if (carro.latLng) {
                        _this.inputWaypoints2.push(carro.latLng);
                        console.log(" carro: " + JSON.stringify(carro.latLng));
                    }
                    // 
                }
                console.log(" inputWaypoints2: " + JSON.stringify(_this.inputWaypoints2));
                _this.destino = _this.inputWaypoints2.pop();
                console.log(" destino: " + JSON.stringify(_this.destino.lng));
                _this.map.setView([_this.destino.lat, _this.destino.lng], 15);
                /*
                       this.origen=this.inputWaypoints2[0]
                       this.destino=this.inputWaypoints2[1]
                       
                      console.log(" origen lng : "+ JSON.stringify(this.origen.lng))
                      console.log(" destino lng : "+ JSON.stringify(this.destino.lng))    */
            });
            this.nohayGPS = true;
        }
    };
    //Dialogo para el inicio de la pagina
    HomesPage.prototype.openDialogo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            //subTitle: "<strong>Pasos:</strong>",
                            //message:  '¡También se pueden arrastrar los marcadores y calcular la distancia entre dos puntos que siempre ha querido conocer usando el botón verde!! ',
                            message: 'El destino del pedido se conoce a partir de su posición GPS. En caso de no ser este el lugar de la entrega, arrastre el mapa hasta el destino deseado y oprima el botón de la calculadora. Una vez obtenido el costo del viaje, regrese al pedido con el botón superior de la flecha.  ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HomesPage.prototype.openDialogo2 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS,'
                                + ' actívelo o busque un lugar con mejor señal. Cuando se muestre el marcador con su posición oprima el botón verde de la calculadora para conocer la distancia punto a punto. ',
                            buttons: [
                                {
                                    text: 'Aceptar',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 1:
                        alert = _a.sent();
                        return [4 /*yield*/, alert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HomesPage.prototype.calcular = function () {
        this.hayGPS = true;
        if (this.hayGPS) {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea); 
                this.map.removeLayer(this.polyline);
            }
            //marcador de prueba 
            this.marker2 = L.marker([23.113592, -82.366592], { draggable: true }).addTo(this.map);
            //prueba tomar posicion dinamicamente
            this.marker2.on('dragend', function (e) { alert(this.marker2.getLatLng()); });
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
            // zoom the map to the polyline
            this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = true;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.tasa2).toFixed(2); //
            this.openDialogo();
        }
        else {
            if (this.hayLinea) {
                //this.hayLinea--;
                //alert(this.hayLinea);
                this.map.removeLayer(this.polyline);
            }
            //marcador para si no hay GPS, puesto encima del otro 
            this.marker2 = L.marker([this.carro.lat, this.carro.lng], { draggable: true }).addTo(this.map);
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            //trazar la linea entre los marcadores
            // this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1}).addTo(this.map);
            // zoom the map to the polyline
            // this.map.fitBounds(this.polyline.getBounds());
            // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
            this.hayLinea = false;
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.tasa2).toFixed(2);
            this.openDialogo2();
        }
    };
    HomesPage.prototype.calcular2 = function () {
        var _this = this;
        if (this.carro.tax) {
            //poner icono de negocio en el lugar
            this.flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/home1.ico',
                iconSize: [40, 40],
            });
        }
        else {
            //poner icono de mensajero en el lugar
            //taxi motico o persona person
            this.flagMarker = L.icon({
                iconUrl: 'assets/libs/leaflet/images/person.ico',
                iconSize: [30, 30],
            });
        }
        var marker3 = L.marker([this.carro.lat, this.carro.lng], { draggable: false, icon: this.flagMarker, riseOnHover: true });
        this.markers.push(marker3);
        /*  marker.on('dblclick', () => {
           this.abrirDetallesCarro(carro)
         }); */
        marker3.bindPopup(this.carro.nam).openPopup();
        marker3.addTo(this.map);
        //para hacer pruebas 
        // this.hayGPS=true 
        if (this.hayGPS) {
            if (this.hayLinea) {
                this.map.removeLayer(this.polyline);
            }
            this.marker2.addTo(this.map);
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            this.latlngs = [
                [curPos.lat, curPos.lng],
                [curPos2.lat, curPos2.lng]
            ];
            this.mDistanse = curPos.distanceTo(curPos2); //calcula la distancia entre dos coordenadas
            this.mDistanseKm = +(this.mDistanse / 1000).toFixed(3); //lleva a km y redondea a 3 lugares
            this.resultado = +(this.mDistanseKm * this.tasa2).toFixed(2);
            if (this.resultado > 0) {
                //trazar la linea entre los marcadores
                this.polyline = L.polyline(this.latlngs, { color: 'green', weight: 2, smoothFactor: 1 }).addTo(this.map);
                // zoom the map to the polyline
                //this.map.fitBounds(this.polyline.getBounds());    
                // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
                this.hayLinea = true;
                this.map.setView(new L.LatLng(curPos2.lat, curPos2.lng), 15);
                //this.map.panTo(new L.LatLng(curPos2.lat,curPos2.lng));
            }
            else {
                this.hayLinea = false;
            }
            //this.presentToast4(' Con GPS');  
        }
        else {
            //calcular donde ponga el usuario el icono si no hay GPS
            if (this.marker2) {
                this.marker2.removeFrom(this.map);
            }
            if (this.hayLinea) {
                this.map.removeLayer(this.polyline);
            }
            /*   if(this.singps){ // la primera vez pone el marcador azul encima del negocio
                this.marker2 = L.marker([this.carro.lat, this.carro.lng  ],{draggable: true});
                this.marker2.addTo(this.map);
              }
              this.singps=false */
            var curPos = this.marker.getLatLng();
            var curPos2 = this.marker2.getLatLng();
            // alert(curPos.lat + ","+ curPos.lng+","+curPos2.lat+","+curPos2.lng);
            /*
                this.latlngs = [
                  [curPos.lat,curPos.lng],
                  [curPos2.lat,curPos2.lng]
                ];
                      
                 this.mDistanse = curPos.distanceTo(curPos2);//calcula la distancia entre dos coordenadas
                 this.mDistanseKm=+(this.mDistanse/1000).toFixed(3);//lleva a km y redondea a 3 lugares
          
                 this.resultado=+(this.mDistanseKm*this.tasa2).toFixed(2)
        
                 if(this.resultado>0){
                      //trazar la linea entre los marcadores
                      this.polyline = L.polyline(this.latlngs, {color: 'green',weight: 2,smoothFactor: 1}).addTo(this.map);
                      // zoom the map to the polyline
                      //this.map.fitBounds(this.polyline.getBounds());
                    // mDistanse = this.latlngs[0].distanceTo(this.latlngs[1]);
                      this.hayLinea=true;
                      this.map.setView(new L.LatLng(curPos2.lat,curPos2.lng), 15);
                      // this.map.panTo(new L.LatLng(curPos2.lat,curPos2.lng));
                 }else{
                    this.hayLinea=false;
                 } */
            //prueba
            var routeControl = L.Routing.control({
                waypoints: [
                    L.latLng(curPos.lat, curPos.lng),
                    L.latLng(curPos2.lat, curPos2.lng)
                ],
                language: 'es',
                // routeWhileDragging: true,
                //autoRoute: true,
                showAlternatives: false
            }).addTo(this.map);
            routeControl.on('routesfound', function (e) {
                _this.routes = e.routes;
                _this.summary = _this.routes[0].summary;
                // alert distance and time in km and minutes
                // alert('Total distance is ' + this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(this.summary.totalTime % 3600 / 60) + ' minutes');
                console.log('Total distance is ' + _this.summary.totalDistance / 1000 + ' km and total time is ' + Math.round(_this.summary.totalTime % 3600 / 60) + ' minutes');
                _this.mDistanseKm = +(_this.summary.totalDistance / 1000).toFixed(2);
                //let float=parseFloat(this.mDistanseKm)
                //let float2=parseFloat(this.carro.curPos.tar)                 
                _this.resultado = +(_this.mDistanseKm * _this.tasa2).toFixed(2);
                //console.log(' distancia: '+ this.mDistanseKm2)
                //console.log(' resultados: '+ this.resultado)
                //console.log(' variable carro 1: '+this.carro.curPos.tar )
            });
            //this.presentToast4(' Sin GPS');  
        }
        //this.map.setView([curPos2.lat,curPos2.lng],15)
        this.openDialogo();
    };
    //para el cambio de icono
    HomesPage.prototype.goToPreviousPage = function () {
        var _this = this;
        if (this.destino) {
            //var curPos2 =this.marker2.getLatLng();
            var curPos2 = this.destino;
            var tarifa_1 = {
                // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
                ruta: "https://www.google.com/maps?saddr=" + curPos2.lat + "," + curPos2.lng + "&daddr=" + this.carro.lat + "," + this.carro.lng,
                envio: this.resultado,
                ok: true,
                curPos: curPos2,
                negoPos: this.carro
            };
            this.navCtrl.pop().then(function () {
                _this.navParams.get('callback')(tarifa_1);
            });
        }
        else {
            var tarifa_2 = {
                // id: this.contaProductos, // tell the plugin to preload metadata such as duration for this track, set to 'none' to turn off
                ruta: " ",
                envio: 0,
                ok: false,
                curPos: " ",
                negoPos: this.carro
            };
            this.navCtrl.pop().then(function () {
                _this.navParams.get('callback')(tarifa_2);
            });
        }
    };
    HomesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-homes',template:/*ion-inline-start:"E:\14\gaso\src\pages\homes\homes.html"*/'<ion-header class="bar-positive">\n\n  <ion-navbar hideBackButton color="primary" style="padding: 0px;">\n\n    \n\n\n\n    <ion-buttons  >\n\n      <button  ion-button  outline  icon-only color="light"  round (click)= "goToPreviousPage()" >\n\n        <ion-icon name="arrow-back"> Regresar</ion-icon>\n\n         <!-- abrirPaginaHelp -->\n\n\n\n      </button>       \n\n  </ion-buttons>   \n\n       \n\n      \n\n    <ion-row align-items-center  >\n\n      <ion-col size="4">\n\n        <p color="light">Distancia: </p> \n\n        <p >{{mDistanseKm}} <b> Km </b></p> \n\n        <!-- <p *ngIf="!hayGPS">Desconocida, active el GPS</p>  --> \n\n      </ion-col> \n\n      <ion-col  size="4">\n\n        <p color="light">Tarifa:</p> \n\n        <div *ngIf="cupflag"> <p > {{tasa2}} <b>Pesos el Km </b> </p>  </div>   \n\n        <div *ngIf="usdflag"><p > {{tasa2}} <b>Dólar el Km </b>  </p> </div>    \n\n        <div *ngIf="eurflaf"><p > {{tasa2}} <b>Euro el Km </b>  </p> </div> \n\n        \n\n      </ion-col>\n\n      <ion-col  size="4">\n\n        <p color="light">Costo:</p>   \n\n        <div *ngIf="cupflag"> <p > {{resultado}} <b>Pesos </b> </p>  </div>   \n\n        <div *ngIf="usdflag"><p > {{resultado}} <b>Dólar </b>  </p> </div>    \n\n        <div *ngIf="eurflaf"><p > {{resultado}} <b>Euro </b>  </p> </div> \n\n        \n\n      </ion-col>              \n\n    </ion-row>\n\n\n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content class="masters" >\n\n \n\n<!--  \n\n<div  style="text-align:center"> \n\n  <ion-icon name="calculator" color="light">  Calculadora de la ruta  </ion-icon>  \n\n  \n\n</div>\n\n -->\n\n\n\n  \n\n  <div [ngSwitch]="vista" style="height: 100%;">\n\n    \n\n    <div style="height: 100%;" [style.display]="(vista === \'mapa\')? \'block\': \'none\'">\n\n      <div id="ruta_map" style="width: 100%; height: 100%; ">\n\n\n\n      </div>\n\n    </div>\n\n   \n\n  </div>\n\n\n\n  <ion-fab right top>\n\n    <button ion-fab mini (click)="openDialogo()"><ion-icon name="help"></ion-icon></button>\n\n  </ion-fab>\n\n\n\n  <ion-fab bottom  end  center>\n\n    <button ion-fab color="primary" (click)="calcular3()" ><ion-icon name="calculator"></ion-icon> </button> \n\n  </ion-fab>\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\homes\homes.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */]])
    ], HomesPage);
    return HomesPage;
}());

//# sourceMappingURL=homes.js.map

/***/ }),

/***/ 907:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContactPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_sms_service_sms_service__ = __webpack_require__(908);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





 //funcionalidad para enviar sms
var ContactPage = /** @class */ (function () {
    function ContactPage(navParams, //atributo para obtener los parametros que se le envien a la pagina
        navCtrl, geoLocation, loadingService, alertController, smsService) {
        this.navParams = navParams;
        this.navCtrl = navCtrl;
        this.geoLocation = geoLocation;
        this.loadingService = loadingService;
        this.alertController = alertController;
        this.smsService = smsService;
        this.vista = 'mapa';
        this.markers = [];
        this.posicionactual = {
            //la posicion del cliente
            lat: 0,
            lon: 0,
        };
        this.destino = {
            //la posicion del destino
            lat: 0,
            lon: 0,
        };
        this.telefono = this.navParams.get('telefono'); //forma en que se recibe el parametro
    }
    ContactPage.prototype.ionViewDidLoad = function () {
        this.loadMap();
        this.localizar();
        //this.openDialogo();
    };
    //carga el mapa de leaflet
    ContactPage.prototype.loadMap = function () {
        if (this.map) {
            L.map('ruta_map').off();
            L.map('ruta_map').remove();
        }
        //Límites del mapa
        //let southWest = L.latLng({lat: 22.91736457507185, lng: -82.6171084443657});
        ///let northEast = L.latLng({lat: 23.240795592592406, lng: -81.91418475778585});
        //let bounds = new L.LatLngBounds(southWest, northEast);
        this.map = L.map('ruta_map', { maxBoundsViscosity: 1.0 });
        this.map.setView([23.113592, -82.366592], 15);
        /*
      L.tileLayer.mbTiles('assets/tiles/habana.mbtiles', {
        minZoom: 11,
        maxZoom: 16
      }).addTo(this.map); */
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
            maxZoom: 18
        }).addTo(this.map);
        //this.map.on('click', (e:any) => { console.log(e.latlng); });
    };
    ContactPage.prototype.localizar = function () {
        var _this = this;
        this.geoLocation.getCurrentPosition().then(function (resp) {
            _this.map.setView([resp.coords.latitude, resp.coords.longitude], 15);
            var marker = L.marker([resp.coords.latitude, resp.coords.longitude], { draggable: false });
            marker.addTo(_this.map);
            //marcador para el destino
            var greenIcon = new L.Icon({
                iconUrl: 'assets/libs/leaflet/images/marker-icon-2x-green.png',
                // shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });
            _this.marker2 = L.marker([_this.telefono.lat, _this.telefono.lng], { draggable: true, icon: greenIcon }).addTo(_this.map);
            _this.hayGPS = true; //para saber si hay o no gps y enviar o no el sms
            //tomar la posicion actual
            _this.posicionactual.lon = resp.coords.longitude;
            _this.posicionactual.lat = resp.coords.latitude;
        }).catch(function (error) {
            _this.loadingService.presentError('Error obteniendo su localización, active el GPS o busque un lugar con mejor señal');
            console.log('Error getting location', error);
            _this.hayGPS = false; //para saber si hay o no gps y enviar o no el sms
        });
    };
    ContactPage.prototype.sendSMSRuta = function () {
        if (this.hayGPS) {
            // this.openDialogo2();
            var curPos = this.marker2.getLatLng(); //variable para guardar la posicion actual del marcador que se movio  
            this.smsService.sendSMS(this.telefono.tel, "https://www.google.com/maps?saddr=" + this.posicionactual.lat + "," + this.posicionactual.lon + "&daddr=" + curPos.lat + "," + curPos.lng);
        }
        else {
            this.loadingService.presentError('No hay señal de GPS por lo que no es posible conocer su posición actual,'
                + ' active el GPS o busque un lugar con mejor señal');
        }
    };
    //Dialogo para el inicio de la pagina
    ContactPage.prototype.openDialogo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var alert_1, alert_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.hayGPS) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.alertController.create({
                                subTitle: "<strong>Pasos:</strong>",
                                message: "Arrastre el marcador verde hasta el destino de su viaje y oprima en botón Azul del extremo inferior para enviar su ruta en un SMS. ¡Buen viaje!",
                                buttons: [
                                    {
                                        text: 'Salir',
                                        role: 'cancel',
                                        // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                        handler: function (blah) {
                                        }
                                    },
                                ]
                            })];
                    case 1:
                        alert_1 = _a.sent();
                        return [4 /*yield*/, alert_1.present()];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3: return [4 /*yield*/, this.alertController.create({
                            subTitle: "<strong>!Información!</strong>",
                            message: 'No hay señal de GPS por lo que no es posible conocer su posición actual,'
                                + ' active el GPS o busque un lugar con mejor señal, cuando se muestre el marcador con su posición vuelva a oprimir el botón de Información',
                            buttons: [
                                {
                                    text: 'Salir',
                                    role: 'cancel',
                                    // cssClass: this.tipo_taxi !== 2? 'secondaryColor': 'primaryColor',
                                    handler: function (blah) {
                                    }
                                },
                            ]
                        })];
                    case 4:
                        alert_2 = _a.sent();
                        return [4 /*yield*/, alert_2.present()];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    ContactPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-contact',template:/*ion-inline-start:"E:\14\gaso\src\pages\contact\contact.html"*/'<ion-header>\n\n  \n\n    <ion-toolbar no-border-top>\n\n        <ion-segment [(ngModel)]="vista">\n\n          <ion-segment-button value="mapa">\n\n            Mapa para hacer la ruta\n\n          </ion-segment-button>\n\n          <ion-segment-button value="lista" style="display: none">\n\n            Lista de Taxis\n\n          </ion-segment-button>\n\n        </ion-segment>\n\n      </ion-toolbar>\n\n</ion-header>\n\n\n\n<ion-content padding>\n\n  <div [ngSwitch]="vista" style="height: 100%;"> \n\n    \n\n    <div style="height: 100%;" [style.display]="(vista === \'mapa\')? \'block\': \'none\'">\n\n      <div id="ruta_map" style="width: 100%; height: 100%; ">\n\n\n\n      </div>\n\n    </div>\n\n   \n\n  </div>\n\n  <ion-fab right top>\n\n    <button ion-fab mini (click)="openDialogo()"><ion-icon name="help"></ion-icon></button>\n\n  </ion-fab>\n\n  \n\n  <ion-fab bottom  end  >\n\n     <button ion-fab  (click)="sendSMSRuta()"><ion-icon name="send"></ion-icon> </button>\n\n    </ion-fab>\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\contact\contact.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loading_service_loading_service__["a" /* LoadingServiceProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_sms_service_sms_service__["a" /* SmsServiceProvider */]])
    ], ContactPage);
    return ContactPage;
}());

//# sourceMappingURL=contact.js.map

/***/ }),

/***/ 908:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SmsServiceProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_sms__ = __webpack_require__(909);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//declare var SMS: any;
/*
  Generated class for the SmsServiceProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var SmsServiceProvider = /** @class */ (function () {
    function SmsServiceProvider(http, sms) {
        this.http = http;
        this.sms = sms;
        console.log('Hello SmsServiceProvider Provider');
    }
    SmsServiceProvider.prototype.sendSMS = function (number, message) {
        var options = {
            replaceLineBreaks: false,
            android: {
                intent: 'INTENT' // send SMS with the native android SMS messaging
                //intent: '' // send SMS without opening any other app
            }
        };
        try {
            this.sms.send(number, message, options);
            // alert('Mensaje enviado')
        }
        catch (error) {
            alert('El Mensaje No fue enviado:' + error);
        }
        /*
        SMS.sendSMS(number, message => {
          console.log("SMS sent.");
        },Error => {
          console.log('Error sending SMS.');
        });
        */
        /*  SMS.sendSMS(number, message,function(){
            console.log("SMS sent.");
           }, function(e){
            console.log('Error sending SMS.');
           });
      */
        /*
        if(this.sms.hasPermission){
          alert('La aplicacion tiene permisos')
        }else{
          alert('La aplicacion NOOOO tiene permisos')
        }
        
         //prueba
         try {
          this.sms.send(number, message);
          alert('Mensaje enviado')
         } catch (error) {
          alert('El Mensaje No fue enviado:' + error)
         }
         */
    };
    SmsServiceProvider.prototype.sendSMS2 = function (number) {
        /*
        if(this.sms.hasPermission){
          alert('La aplicacion tiene permisos')
        }else{
          alert('La aplicacion NOOOO tiene permisos')
        }
        */
        //prueba  
        var options = {
            replaceLineBreaks: false,
            android: {
                intent: 'INTENT' // send SMS with the native android SMS messaging
                //intent: '' // send SMS without opening any other app
            }
        };
        try {
            this.sms.send(number, " ", options);
            // alert('Mensaje enviado')
        }
        catch (error) {
            alert('El Mensaje No fue enviado:' + error);
        }
    };
    SmsServiceProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["B" /* Injectable */])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_sms__["a" /* SMS */]])
    ], SmsServiceProvider);
    return SmsServiceProvider;
}());

//# sourceMappingURL=sms-service.js.map

/***/ }),

/***/ 910:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SubirfotoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(15);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};



//Plugin
// falta import { ImagePicker, ImagePickerOptions } from '@ionic-native/image-picker';
//Providers
// falta import { CargarImgProvider }  from '../../providers/cargar-img/cargar-img';
// falta import { ServiceProvider }  from '../../providers/service/service';
var SubirfotoPage = /** @class */ (function () {
    function SubirfotoPage(navCtrl, formBuilder, 
        // falta private imagePicker: ImagePicker, 
        toastCtrl, 
        // falta private cargarimg: CargarImgProvider,
        // falta private serv: ServiceProvider,
        loadingCtrl, alertCtrl, navParams, alertController) {
        this.navCtrl = navCtrl;
        this.formBuilder = formBuilder;
        this.toastCtrl = toastCtrl;
        this.loadingCtrl = loadingCtrl;
        this.alertCtrl = alertCtrl;
        this.navParams = navParams;
        this.alertController = alertController;
        this.fotos = [];
        this.nombrenegocio = "";
        this.telefono = this.navParams.get('telefono'); // objeto con los datos del negocio
        this.producto = this.navParams.get('cat');
        this.menu = this.navParams.get('men');
        if (this.menu) {
            //validaciones del formulario
            this.datos = this.formBuilder.group({
                nam: ['',],
                com: ['',],
                pre: ['', []
                ],
            });
            this.datos.valid;
        }
        else if (!this.producto) {
            //validaciones del formulario
            this.datos = this.formBuilder.group({
                nam: ['',],
                com: ['',],
                pre: ['', []
                ],
            });
            this.datos.valid;
        }
        else {
            //validaciones del formulario
            this.datos = this.formBuilder.group({
                nam: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                com: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required],
                pre: ['', [
                        __WEBPACK_IMPORTED_MODULE_2__angular_forms__["f" /* Validators */].required,
                    ]
                ],
            });
        }
    }
    //alerta que toma la respuesta del sitio y la pone como mensaje
    SubirfotoPage.prototype.presentarAlerta = function (mensaje) {
        var alert = this.alertCtrl.create({
            title: 'El sitio web dice, el envio ha sido',
            subTitle: mensaje,
            buttons: ['Ok']
        });
        alert.present();
    };
    SubirfotoPage.prototype.presentarLoader = function () {
        this.loading = this.loadingCtrl.create({
            content: 'Registrando...'
        });
        this.loading.present();
    };
    SubirfotoPage.prototype.mostrar_mensaje = function (msj) {
        var toast = this.toastCtrl.create({
            message: msj,
            duration: 3000,
            position: 'buttom'
        });
        toast.present();
    };
    // falta  //parte del image picker 
    /*     abrirGaleria(){
    
           // let arr = [];
           // arr[0] = 'assets/imgs/Chrysanthemum.jpg';
           // arr[1] = 'assets/imgs/Desert.jpg';
           // arr[2] = 'assets/imgs/Hydrangeas.jpg';
    
           // this.fotos = arr;
           // console.log(this.fotos);
    
           this.imagePicker.hasReadPermission()
           .then(res => {
             if (res) {
             // this.mostrar_mensaje('Debes seleccionar una foto');
              // this.openGallery();
                          
                        let options: ImagePickerOptions = {
                    
                              maximumImagesCount: 1,
                             // width: 1280,
                             // height: 1280,
                            /*   width: 100,
                              height: 100,
                              quality : 100,
                              outputType: 0
                      };
    
                      this.imagePicker.getPictures(options).then((results) => {
                              this.fotos = results;
                             /*  for (var i = 0; i < results.length; i++) {
                              
                            }
                          }, (err) => {
                              this.mostrar_mensaje(err);
                          });
    
                        
    
             } else {
               this.imagePicker.requestReadPermission()
               .then(res => {
                 if (res === 'ok') {
                  this.mostrar_mensaje('Ya Tengo los permisos');
                   //this.openGallery();
                                
                          let options: ImagePickerOptions = {
                           
                              maximumImagesCount: 1,
                             // width: 1280,
                             // height: 1280,
                            /*   width: 300,
                              height: 300,
                              quality : 100,
                              outputType: 0
                        };
    
                        this.imagePicker.getPictures(options)
                            .then((results) => {
                                this.fotos = results;
                            }, (err) => {
                                this.mostrar_mensaje(err);
                            });
                 }
               })
             }
           })
           .catch(error => console.log(error));
    
        }
     */
    //funcion para borrar foto del previsualizador
    SubirfotoPage.prototype.borrarFoto = function (index) {
        this.fotos.splice(index, 1);
    };
    SubirfotoPage.prototype.registrar = function () {
        if (this.fotos.length < 1) {
            this.mostrar_mensaje('Debes seleccionar una foto');
            return;
        }
        //console.log('entre 2');
        //  this.presentarLoader();
        //prueba local sin imagen
        /*       this.formulario = new FormData();
            
    
                  if(this.menu){
    
                    this.formulario.append('idt', this.telefono.idt);
                    this.formulario.append('nam', 'Menu');
                    this.formulario.append('com', 'Menu');
                    this.formulario.append('pre', 'Menu');
                    this.formulario.append('pri', '0');
                    this.formulario.append('cat', this.producto);
                    this.formulario.append('men', this.menu);
    
                  }else if(!this.producto){
    
                    this.formulario.append('idt', this.telefono.idt);
                    this.formulario.append('nam', 'Slider');
                    this.formulario.append('com', 'Slider');
                    this.formulario.append('pre', 'Slider');
                    this.formulario.append('pri', '0');
                    this.formulario.append('cat', this.producto);
                    this.formulario.append('men', this.menu);
    
                  }else{
    
                    this.formulario.append('idt', this.telefono.idt);
                    this.formulario.append('nam', this.datos.get('nam').value);
                    this.formulario.append('com', this.datos.get('com').value);
                    this.formulario.append('pre', this.datos.get('pre').value);
                    this.formulario.append('pri', this.datos.get('pre').value);
                    this.formulario.append('cat', this.producto);
                    this.formulario.append('men', this.menu);
    
                  }
    
             console.log(this.datos.get('nam').value);
             console.log(this.datos.get('com').value);
             console.log(this.datos.get('pre').value);
           
             this.serv.addUser(this.formulario)
               .then((result) => {
    
                 console.log(result);
                 if(result['ok']){
    
                   this.presentarAlerta(result['statusText']);
                 }else{
               
                   this.datos.get('idt').setValue('');
                   this.datos.get('nam').setValue('');
                   this.datos.get('pre').setValue('');
                   this.datos.get('cat').setValue('');
         
                   this.fotos = [];
    
                   this.presentarAlerta(result['statusText']);
                 }
                 this.loading.dismiss();
               }, err => {
                 console.log(err);
                 this.loading.dismiss();
               });   */
        //fin prueba local sin imagen
        /*     this.cargarimg.getFormulario(this.fotos)
              .then((result) => {
                //this.formulario = new FormData();
                this.formulario = result; // esta es la variable que contiene a todas las imagenes
                  //estos son los datos que se envian junto con las fotos en el form
                  this.presentarLoader();
     
                  if(this.menu){
    
                    this.formulario.append('idt', this.telefono.idt);
                    this.formulario.append('nam', 'Menu');
                    this.formulario.append('com', 'Menu');
                    this.formulario.append('pre', 'Menu');
                    this.formulario.append('pri', '0');
                    this.formulario.append('cat', this.producto);
                    this.formulario.append('men', this.menu);
    
                  }else if(!this.producto){
    
                    this.formulario.append('idt', this.telefono.idt);
                    this.formulario.append('nam', 'Slider');
                    this.formulario.append('com', 'Slider');
                    this.formulario.append('pre', 'Slider');
                    this.formulario.append('pri', '0');
                    this.formulario.append('cat', this.producto);
                    this.formulario.append('men', this.menu);
    
                  }else{
    
                    this.formulario.append('idt', this.telefono.idt);
                    this.formulario.append('nam', this.datos.get('nam').value);
                    this.formulario.append('com', this.datos.get('com').value);
                    this.formulario.append('pre', this.datos.get('pre').value);
                    this.formulario.append('pri', this.datos.get('pre').value);
                    this.formulario.append('cat', this.producto);
                    this.formulario.append('men', this.menu);
                    this.formulario.append('lis', this.negocio);
    
                  }
    
                  // console.log(this.formulario);
    
                  // metodo del servicio que envia los datos
                  this.serv.addUser(this.formulario)
                    .then((result) => { // en la variable result esta lo que devuelve el servidor
    
                      console.log(result);
                      if(result['ok']){
    
                        this.presentarAlerta(result['statusText']);
                      }else{
    
                        //Eliminación de los valores
                        this.datos.get('idt').setValue('');
                        this.datos.get('nam').setValue('');
                        this.datos.get('com').setValue('');
                        this.datos.get('pre').setValue('');
                        this.datos.get('pri').setValue('');
                        this.datos.get('cat').setValue('');
                        //this.datos.get('lis').setValue('');
    
                        this.fotos = [];
    
                        this.presentarAlerta(result['statusText']);
                      }
    
    
                      this.loading.dismiss();
                    }, err => {
    
    
                      console.log(err);
                      this.loading.dismiss();
                    });
    
              })
              .catch(err =>{
                this.mostrar_mensaje(err);
              });
         */
    };
    // para las categorias de los productos
    SubirfotoPage.prototype.estaxi4 = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var myAlert;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.alertController.create({
                            title: 'Información',
                            // subTitle: 'Alert subtitle...',
                            enableBackdropDismiss: true,
                            message: 'Seleccione la categoría que corresponda al producto  ',
                            buttons: [
                                {
                                    text: 'ACEPTAR',
                                    handler: function (data) {
                                        console.log(data);
                                        //this.presentToast4('OK clicked. Data -> ' + data ); 
                                        _this.negocio = data; // para A en save+ JSON.stringify(data)
                                        switch (data) {
                                            case "a":
                                                _this.nombrenegocio = "	Completas";
                                                break;
                                            case "b":
                                                _this.nombrenegocio = "	Entrantes";
                                                break;
                                            case "c":
                                                _this.nombrenegocio = "	Ensaladas";
                                                break;
                                            case "d":
                                                _this.nombrenegocio = "	Pastas y Pizzas";
                                                break;
                                            case "e":
                                                _this.nombrenegocio = "	Principales";
                                                break;
                                            case "f":
                                                _this.nombrenegocio = "	Postres";
                                                break;
                                            case "g":
                                                _this.nombrenegocio = "	Bebidas";
                                                break;
                                            case "h":
                                                _this.nombrenegocio = "	Entre Panes";
                                                break;
                                            case "i":
                                                _this.nombrenegocio = "	Combos";
                                                break;
                                            case "j"://del agro
                                                _this.nombrenegocio = "	Cárnicos";
                                                break;
                                            case "k":
                                                _this.nombrenegocio = "	Pre elaborados";
                                                break;
                                            case "l":
                                                _this.nombrenegocio = "	Viandas ";
                                                break;
                                            case "m":
                                                _this.nombrenegocio = "	Frutas";
                                                break;
                                            case "n":
                                                _this.nombrenegocio = "	Verduras";
                                                break;
                                            case "o":
                                                _this.nombrenegocio = "	Cereales";
                                                break;
                                            case "p":
                                                _this.nombrenegocio = "	Condimentos";
                                                break;
                                            case "q":
                                                _this.nombrenegocio = "	Otra";
                                                break;
                                            default:
                                                _this.nombrenegocio = " Falta la categoria del producto";
                                        }
                                        //this.nombrenegocio=JSON.stringify(data.name)
                                    },
                                    role: ''
                                },
                                {
                                    text: 'CANCELAR',
                                    handler: function (data) {
                                        console.log('Abbrechen clicked. Data -> ' + JSON.stringify(data));
                                        data = 13;
                                        _this.negocio = data; // para A en save
                                        _this.nombrenegocio = " Otra";
                                        //this.presentToast4('Abbrechen clicked. Data -> ' +data); 
                                        //value: '13'
                                    },
                                    role: 'cancel'
                                }
                            ],
                            inputs: [
                                {
                                    type: 'radio',
                                    id: 'opt1',
                                    name: 'opt1',
                                    'label': '  Completas',
                                    value: 'a',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt2',
                                    name: 'opt2',
                                    'label': '	Entrantes',
                                    value: 'b',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt3',
                                    name: 'opt3',
                                    'label': '	Ensaladas',
                                    value: 'c',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt4',
                                    name: 'opt4',
                                    'label': '	Pastas y Pizzas',
                                    value: 'd',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt5',
                                    name: 'opt5',
                                    'label': '	Principales',
                                    value: 'e',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt6',
                                    name: 'opt6',
                                    'label': '	Postres',
                                    value: 'f',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt7',
                                    name: 'opt7',
                                    'label': '	Bebidas',
                                    value: 'g',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt8',
                                    name: 'opt8',
                                    'label': '	Entre Panes',
                                    value: 'h',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt9',
                                    name: 'opt9',
                                    'label': '	Combos',
                                    value: 'i',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt10',
                                    name: 'opt10',
                                    'label': '	Cárnico',
                                    value: 'j',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt11',
                                    name: 'opt11',
                                    'label': '	Pre elaborados',
                                    value: 'k',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt12',
                                    name: 'opt12',
                                    'label': '	Viandas ',
                                    value: 'l',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt13',
                                    name: 'opt13',
                                    'label': '	Frutas',
                                    value: 'm',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt13',
                                    name: 'opt13',
                                    'label': '	Verduras',
                                    value: 'n',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt13',
                                    name: 'opt13',
                                    'label': '	Cereales',
                                    value: 'o',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt13',
                                    name: 'opt13',
                                    'label': '	Condimentos',
                                    value: 'p',
                                    'checked': false
                                },
                                {
                                    type: 'radio',
                                    id: 'opt13',
                                    name: 'opt13',
                                    'label': '	Otra',
                                    value: 'q',
                                    'checked': false
                                },
                            ]
                        })];
                    case 1:
                        myAlert = _a.sent();
                        return [4 /*yield*/, myAlert.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    SubirfotoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-subirfoto',template:/*ion-inline-start:"E:\14\gaso\src\pages\subirfoto\subirfoto.html"*/'<ion-header>\n\n  <ion-navbar color="primary">\n\n    <ion-title>\n\n      Formulario\n\n    </ion-title>\n\n  </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content>\n\n   <!--  {{telefono.id}}\n\n    {{telefono.idt}}\n\n    {{telefono.cat}}\n\n    {{producto}}\n\n    {{menu}} -->\n\n    <form [formGroup]="datos" (ngSubmit)="registrar()"> \n\n        <ion-list>\n\n\n\n            <div *ngIf="!menu&&producto"> \n\n\n\n                <ion-item>\n\n                    <ion-icon name="basket" item-start></ion-icon>\n\n                    <ion-label stacked>Nombre del producto:</ion-label>\n\n                    <ion-input formControlName="nam" type="text" placeholder="Nombre "></ion-input>\n\n                </ion-item>\n\n                <ion-item>\n\n                    <ion-icon name="create" item-start></ion-icon>\n\n                    <ion-label stacked>Descripción:</ion-label>\n\n                    <ion-input formControlName="com" type="text" placeholder="Descripción"></ion-input>\n\n                </ion-item>\n\n                <ion-item>\n\n                   <ion-icon name="logo-usd" item-start></ion-icon>\n\n                   <ion-label stacked>Precio:</ion-label>\n\n                   <ion-input formControlName="pre" type="text" placeholder="Precio"></ion-input>\n\n                </ion-item>\n\n               <!--  <ion-item >\n\n                    <ion-icon  name="clipboard" item-start ></ion-icon>\n\n                    <ion-label stacked>Categoría:</ion-label>\n\n                    <ion-input formControlName="lis" type="text" placeholder="categoria" (click)="estaxi4()"></ion-input>\n\n                    \n\n                    \n\n                 </ion-item> -->\n\n                 <ion-item text-center>\n\n                    <button ion-button type="button" icon-left large (click)="estaxi4()">\n\n                        <ion-icon name="clipboard"></ion-icon>\n\n                            Categoría\n\n                    </button>\n\n                  \n\n                </ion-item> \n\n                \n\n                <ion-label class="texto-centrado"> {{nombrenegocio}}</ion-label >\n\n            </div>\n\n\n\n         \n\n        <!--     <ion-item> value="ocupado" (ionSelect)="estaxi4()" *ngIf="this.producto"\n\n                <ion-icon name="eye" item-start></ion-icon>\n\n                     <ion-label stacked>cat:</ion-label>\n\n                     <ion-input formControlName="cat" type="text" placeholder="cat"></ion-input>\n\n            </ion-item> -->\n\n            <ion-item text-center>\n\n                <button ion-button type="button" icon-left large (click)="abrirGaleria()">\n\n                    <ion-icon name="images"></ion-icon>\n\n                        Añadir foto \n\n                </button>\n\n            </ion-item>\n\n        </ion-list>\n\n <!--        <div *ngIf="datos.get(\'nam\').invalid && (datos.get(\'nam\').dirty || datos.get(\'nam\').touched)" text-center>\n\n            <div *ngIf="datos.get(\'nam\').hasError(\'required\')">\n\n                El nam es requerido.\n\n            </div>\n\n        </div>\n\n        <div *ngIf="datos.get(\'pre\').invalid && (datos.get(\'pre\').dirty || datos.get(\'pre\').touched)" text-center>\n\n            <div *ngIf="datos.get(\'pre\').hasError(\'required\')">\n\n                El pre es requerido.\n\n            </div>\n\n            <div *ngIf="datos.get(\'pre\').hasError(\'email\')">\n\n                El pre es inválido.\n\n            </div>\n\n        </div>\n\n        <div *ngIf="datos.get(\'cat\').invalid && (datos.get(\'cat\').dirty || datos.get(\'cat\').touched)" text-center>\n\n            <div *ngIf="datos.get(\'cat\').hasError(\'required\')">\n\n                La contraseña es requerida.\n\n            </div>\n\n            <div *ngIf="datos.get(\'cat\').hasError(\'minLength\')">\n\n                La contraseña debe tener mínimo 6 caracteres.\n\n            </div>\n\n        </div> -->\n\n        <!-- previsualizador -->\n\n        <div id="LoadedImages" *ngIf="fotos" class="texto-centrado">\n\n            <ion-item *ngFor="let item of fotos; let i = index">\n\n                <ion-icon name="close-circle" (click)="borrarFoto(i)"></ion-icon>\n\n                <img [src]="item" class="imagenes">\n\n            </ion-item>\n\n        </div>\n\n        <div padding>\n\n            <button ion-button block type="submit" [disabled]="!datos.valid">Guardar</button>\n\n        </div>\n\n    </form>\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\subirfoto\subirfoto.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* LoadingController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */]])
    ], SubirfotoPage);
    return SubirfotoPage;
}());

//# sourceMappingURL=subirfoto.js.map

/***/ }),

/***/ 911:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GasolinerasPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__taxis_taxis__ = __webpack_require__(78);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the GasolinerasPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
//@IonicPage()
var GasolinerasPage = /** @class */ (function () {
    function GasolinerasPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    GasolinerasPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad GasolinerasPage');
    };
    GasolinerasPage.prototype.goToPreviousPage = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__taxis_taxis__["a" /* TaxisPage */]); //
        /*
        this.navCtrl.pop().then(() => {
          this.navParams.get('callback')(tarifa);
        }); */
    };
    GasolinerasPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-gasolineras',template:/*ion-inline-start:"E:\14\gaso\src\pages\gasolineras\gasolineras.html"*/'<!--\n\n  Generated template for the GasolinerasPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header>\n\n\n\n  <ion-navbar>\n\n    <ion-title>gasolineras</ion-title>\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content padding>\n\n\n\n  <ion-fab right top>\n\n    <button ion-fab mini (click)="goToPreviousPage()"><ion-icon name="arrow-back"></ion-icon></button>\n\n  </ion-fab>\n\n  \n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\gasolineras\gasolineras.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */]])
    ], GasolinerasPage);
    return GasolinerasPage;
}());

//# sourceMappingURL=gasolineras.js.map

/***/ }),

/***/ 912:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DetailsssPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the DetailsssPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DetailsssPage = /** @class */ (function () {
    function DetailsssPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    DetailsssPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DetailsssPage');
    };
    DetailsssPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["n" /* Component */])({
            selector: 'page-detailsss',template:/*ion-inline-start:"E:\14\gaso\src\pages\detailsss\detailsss.html"*/'<!--\n\n  Generated template for the DetailsssPage page.\n\n\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n\n  Ionic pages and navigation.\n\n-->\n\n<ion-header>\n\n\n\n  <ion-navbar>\n\n    <ion-title>detailsss</ion-title>\n\n  </ion-navbar>\n\n\n\n</ion-header>\n\n\n\n\n\n<ion-content padding>\n\n\n\n</ion-content>\n\n'/*ion-inline-end:"E:\14\gaso\src\pages\detailsss\detailsss.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* NavParams */]])
    ], DetailsssPage);
    return DetailsssPage;
}());

//# sourceMappingURL=detailsss.js.map

/***/ })

},[467]);
//# sourceMappingURL=main.js.map